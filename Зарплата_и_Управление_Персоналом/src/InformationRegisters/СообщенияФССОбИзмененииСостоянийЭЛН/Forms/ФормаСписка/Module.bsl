#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	// Константы.
	Список.Параметры.УстановитьЗначениеПараметра("ПустаяДата", '00010101');
	
	// Значения по умолчанию.
	РежимФильтрации = 1;
	
	// Заголовок формы должен соответствовать заголовку команды.
	Команда = Метаданные.РегистрыСведений.СообщенияФССОбИзмененииСостоянийЭЛН.Команды.СообщенияФССОбИзмененииЭЛН;
	НавигационнаяСсылка = "e1cib/command/" + Команда.ПолноеИмя();
	Заголовок = Команда.Представление();
	
	Организация = Параметры.Организация;
	Если Не ЗначениеЗаполнено(Организация) Тогда
		ЗначенияДляЗаполнения = Новый Структура;
		ЗначенияДляЗаполнения.Вставить("Организация", "Организация");
		ЗарплатаКадры.ЗаполнитьПервоначальныеЗначенияВФорме(ЭтотОбъект, ЗначенияДляЗаполнения);
	КонецЕсли;
	
	ЭлементУО = ОбщегоНазначенияБЗК.ДобавитьУсловноеОформление(Список, "Больничный");
	ОбщегоНазначенияБЗК.ДобавитьОтборУсловногоОформления(ЭлементУО, "Больничный", ВидСравненияКомпоновкиДанных.НеЗаполнено);
	ОбщегоНазначенияБЗК.ДобавитьОтборУсловногоОформления(ЭлементУО, "ИндексКартинки", "=", 2);
	ОбщегоНазначенияБЗК.ДобавитьОтборУсловногоОформления(ЭлементУО, "СостояниеЭЛН", "=", Перечисления.СостоянияЭЛНВФСС.Закрыт);
	ОбщегоНазначенияБЗК.УстановитьПараметрУсловногоОформления(ЭлементУО, "Текст", НСтр("ru = '<Создать больничный...>'"));
	
	// Добавление отборов и сохранение их идентификаторов для быстрого поиска.
	НастройкиКД = Список.КомпоновщикНастроек.Настройки;
	
	ЭлементОтбораКД = ОбщегоНазначенияБЗК.ДобавитьОтборУсловногоОформления(НастройкиКД, "Организация", "=", Организация);
	ЭлементОтбораКД.РежимОтображения = РежимОтображенияЭлементаНастройкиКомпоновкиДанных.Недоступный;
	ИдентификаторОтбораПоОрганизации = НастройкиКД.Отбор.ПолучитьИдентификаторПоОбъекту(ЭлементОтбораКД);
	
	ЭлементОтбораКД = ОбщегоНазначенияБЗК.ДобавитьОтборУсловногоОформления(НастройкиКД, "ТребуетОбработки", "=", Истина);
	ЭлементОтбораКД.РежимОтображения = РежимОтображенияЭлементаНастройкиКомпоновкиДанных.Недоступный;
	ИдентификаторОтбораТолькоТребующиеОбработки = НастройкиКД.Отбор.ПолучитьИдентификаторПоОбъекту(ЭлементОтбораКД);
	
	ЭлементОтбораКД = ОбщегоНазначенияБЗК.ДобавитьОтборУсловногоОформления(НастройкиКД, "Последнее", "=", Истина);
	ЭлементОтбораКД.РежимОтображения = РежимОтображенияЭлементаНастройкиКомпоновкиДанных.Недоступный;
	ИдентификаторОтбораТолькоПоследние = НастройкиКД.Отбор.ПолучитьИдентификаторПоОбъекту(ЭлементОтбораКД);
	
	ФиксированныеПараметрыСписка = ФиксированныеПараметрыСписка();
	Для Каждого Элемент Из ФиксированныеПараметрыСписка Цикл
		Список.Параметры.УстановитьЗначениеПараметра(Элемент.Значение, Элемент.Представление);
	КонецЦикла;
	
	СтандартныеПодсистемыСервер.УстановитьУсловноеОформлениеПоляДата(ЭтотОбъект, "Список.ДатаПолучения", "ДатаПолучения");
	
	ОбновитьФорму();
	УчетПособийСоциальногоСтрахованияРасширенный.ОбновитьФорму(ЭтотОбъект);
КонецПроцедуры

&НаСервере
Процедура ПередЗагрузкойДанныхИзНастроекНаСервере(Настройки)
	Если ЗначениеЗаполнено(Организация) Тогда
		Настройки.Удалить("Организация");
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ПриЗагрузкеДанныхИзНастроекНаСервере(Настройки)
	ОбновитьФорму();
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = "Запись_БольничныйЛист"
		Или ИмяСобытия = "Запись_НастройкиПолученияУведомленийОбЭЛН"
		Или СЭДОФССРасширенныйКлиент.ТребуетсяОбновитьНапоминаниеОбОтключенииПодпискиНаЭЛН(ИмяСобытия) Тогда
		ОтключитьОбработчикОжидания("ОбновитьСписок");
		ПодключитьОбработчикОжидания("ОбновитьСписок", 0.2, Истина);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ОрганизацияПриИзменении(Элемент)
	ОбновитьФорму();
КонецПроцедуры

&НаКлиенте
Процедура ПоказыватьТолькоОжидающиеОбработкиПриИзменении(Элемент)
	ОбновитьФорму();
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыСписок

&НаКлиенте
Процедура СписокВыбор(ТаблицаФормы, ИдентификаторСтроки, ПолеФормы, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	СтрокаТаблицы = ТаблицаФормы.ДанныеСтроки(ИдентификаторСтроки);
	
	Если СтрокаТаблицы = Неопределено Тогда
		// Пустая строка.
		Возврат;
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(СтрокаТаблицы.НомерЛН) Тогда
		// Выбрано нерасшифрованное сообщение.
		СЭДОФССКлиент.ПолучитьСообщенияИзФСС(Организация);
		Возврат;
	КонецЕсли;
	
	ПараметрыФормыБольничного = Новый Структура("Ключ", СтрокаТаблицы.Больничный);
	Если Не ЗначениеЗаполнено(СтрокаТаблицы.Больничный) Тогда
		Если СтрокаТаблицы.СостояниеЭЛН <> ПредопределенноеЗначение("Перечисление.СостоянияЭЛНВФСС.Закрыт") Тогда
			// Выбрано сообщение с состоянием, которое запрещено загружать в программу.
			Возврат;
		КонецЕсли;
		ФизическоеЛицо = СтрокаТаблицы.ФизическоеЛицо;
		ЗначенияЗаполнения = Новый Структура;
		ЗначенияЗаполнения.Вставить("Организация", Организация);
		ЗначенияЗаполнения.Вставить("ФизическоеЛицо", ФизическоеЛицо);
		ЗначенияЗаполнения.Вставить("НомерЛисткаНетрудоспособности", СтрокаТаблицы.НомерЛН);
		ЗначенияЗаполнения.Вставить("Сотрудник", ОсновнойСотрудникФизическогоЛица(ФизическоеЛицо, Организация));
		ПараметрыФормыБольничного.Вставить("ЗначенияЗаполнения", ЗначенияЗаполнения);
		ПараметрыФормыБольничного.Вставить("ПолучитьЭЛНИзФСС", Истина);
	КонецЕсли;
	ОткрытьФорму("Документ.БольничныйЛист.Форма.ФормаДокумента", ПараметрыФормыБольничного);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ПовторноПолучитьСообщенияИзФСС(Команда)
	Идентификаторы = ИдентификаторыВыбранныхСообщений(Элементы.Список.ВыделенныеСтроки);
	Обработчик = Новый ОписаниеОповещения("ПослеПовторногоПолученияСообщенийИзФСС", ЭтотОбъект);
	ЭлектронныйДокументооборотСФССКлиент.ПолучитьСообщенияСЭДО(Обработчик, Организация, Идентификаторы);
КонецПроцедуры

&НаКлиенте
Процедура ПоказатьВсеСообщения(Команда)
	РежимФильтрации = 0;
	ОбновитьФорму();
КонецПроцедуры

&НаКлиенте
Процедура ПоказыватьТолькоОжидающиеОбработки(Команда)
	РежимФильтрации = 1;
	ОбновитьФорму();
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьФормуНастроекЭДО(Команда)
	Если Не ЗначениеЗаполнено(Организация) Тогда
		Возврат;
	КонецЕсли;
	ПараметрыФормы = Новый Структура("ОрганизацияСсылка", Организация);
	ОткрытьФорму("РегистрСведений.НастройкиОбменаФСС.ФормаЗаписи", ПараметрыФормы, , , , , , РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьВторичныеДанныеСообщений(Команда)
	Если Не ПроверитьЗаполнение() Тогда
		Возврат;
	КонецЕсли;
	ОбновитьВторичныеДанныеСообщенийНаСервере();
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ОбновитьФорму()
	
	ТолькоТребующиеОбработки = (РежимФильтрации = 1);
	ТолькоПоследние = (РежимФильтрации = 2);
	
	Элементы.ВсеСообщения.Пометка = Не ТолькоТребующиеОбработки;
	Элементы.ТолькоОжидающиеОбработки.Пометка = ТолькоТребующиеОбработки;
	Элементы.Список.ВертикальнаяПолосаПрокрутки = ?(
		ТолькоТребующиеОбработки,
		ИспользованиеПолосыПрокрутки.НеИспользовать,
		ИспользованиеПолосыПрокрутки.ИспользоватьВсегда);
	
	ДоступныеОрганизации = РегистрыСведений.НастройкиПолученияУведомленийОбЭЛН.ОрганизацииПолучающиеСостоянияЭЛН();
	Элементы.Организация.СписокВыбора.ЗагрузитьЗначения(ДоступныеОрганизации);
	Если ЗначениеЗаполнено(Организация) И ДоступныеОрганизации.Найти(Организация) = Неопределено Тогда
		Организация = Справочники.Организации.ПустаяСсылка();
	КонецЕсли;
	
	НастройкиКД = Список.КомпоновщикНастроек.Настройки;
	
	ЭлементОтбораКД = НастройкиКД.Отбор.ПолучитьОбъектПоИдентификатору(ИдентификаторОтбораПоОрганизации);
	ЭлементОтбораКД.Использование  = ЗначениеЗаполнено(Организация);
	ЭлементОтбораКД.ПравоеЗначение = Организация;
	
	ЭлементОтбораКД = НастройкиКД.Отбор.ПолучитьОбъектПоИдентификатору(ИдентификаторОтбораТолькоТребующиеОбработки);
	ЭлементОтбораКД.Использование = ТолькоТребующиеОбработки;
	
	ЭлементОтбораКД = НастройкиКД.Отбор.ПолучитьОбъектПоИдентификатору(ИдентификаторОтбораТолькоПоследние);
	ЭлементОтбораКД.Использование = ТолькоПоследние;
	
КонецПроцедуры

&НаСервере
Функция ФиксированныеПараметрыСписка()
	Результат = Новый СписокЗначений;
	Результат.Добавить("ТекстЭЛНАннулирован", НСтр("ru = 'ЭЛН аннулирован (действия прекращены)'"));
	Результат.Добавить("ТекстСообщениеНеЗагружено", НСтр("ru = '<Не получено>'"));
	Результат.Добавить("ТекстОтсутствуетБольничный", НСтр("ru = 'ЭЛН готов к загрузке'"));
	Результат.Добавить("ТекстСозданБольничный", НСтр("ru = 'ЭЛН загружен'"));
	Результат.Добавить("ТекстЭЛНПринятФСС", НСтр("ru = 'Реестр ЭЛН принят ФСС'"));
	Результат.Добавить("ТекстВМедицинскойОрганизации", НСтр("ru = 'На оформлении в медицинской организации'"));
	Результат.Добавить("ТекстНеНайден", НСтр("ru = 'Не найден в программе'"));
	Возврат Результат;
КонецФункции

&НаКлиенте
Процедура ОбновитьСписок()
	ОбновитьСписокНаСервере();
КонецПроцедуры

&НаСервере
Процедура ОбновитьСписокНаСервере()
	Элементы.Список.Обновить();
	УчетПособийСоциальногоСтрахованияРасширенный.ОбновитьФорму(ЭтотОбъект);
	Элементы.Организация.СписокВыбора.ЗагрузитьЗначения(РегистрыСведений.НастройкиПолученияУведомленийОбЭЛН.ОрганизацииПолучающиеСостоянияЭЛН());
КонецПроцедуры

&НаСервере
Процедура ОбновитьВторичныеДанныеСообщенийНаСервере()
	Если Не СЭДОФСС.ЕстьПравоОбмена() Тогда
		ТекстОшибки = НСтр("ru = 'Недостаточно прав на обмен с сервисом электронного документооборота ФСС.'");
		ВызватьИсключение ТекстОшибки;
	КонецЕсли;
	РегистрыСведений.СообщенияФССОбИзмененииСостоянийЭЛН.ОбновитьВторичныеДанные(Организация);
	ОбновитьСписокНаСервере();
КонецПроцедуры

&НаСервереБезКонтекста
Функция ИдентификаторыВыбранныхСообщений(Знач ВыделенныеСтроки)
	Массив = Новый Массив;
	Для Каждого КлючЗаписи Из ВыделенныеСтроки Цикл
		Массив.Добавить(КлючЗаписи.ИдентификаторСообщения);
	КонецЦикла;
	Возврат Массив;
КонецФункции

&НаКлиенте
Процедура ПослеПовторногоПолученияСообщенийИзФСС(Результат, ПустойПараметр) Экспорт
	ТекстыОшибок = Новый Массив;
	Для Каждого РезультатПолучения Из Результат.РезультатыПолучения Цикл
		Если ЗначениеЗаполнено(РезультатПолучения.ОписаниеОшибки) Тогда
			ТекстыОшибок.Добавить(РезультатПолучения.ОписаниеОшибки);
		КонецЕсли;
	КонецЦикла;
	Если ЗначениеЗаполнено(ТекстыОшибок) Тогда
		ИнформированиеПользователяКлиент.ПоказатьПодробности(
			СтрСоединить(ТекстыОшибок, Символы.ПС + Символы.ПС),
			НСтр("ru = 'Информация об ошибке'"),
			БиблиотекаКартинок.Предупреждение32);
	КонецЕсли;
	Оповестить(СЭДОФССКлиент.ИмяСобытияПослеПолученияСообщенийОтФСС(), Результат);
КонецПроцедуры

&НаСервереБезКонтекста
Функция ОсновнойСотрудникФизическогоЛица(Знач ФизическоеЛицо, Знач Организация)
	Возврат КадровыйУчет.ОсновнойСотрудникФизическогоЛица(ФизическоеЛицо, Организация, ТекущаяДатаСеанса());
КонецФункции

#КонецОбласти
