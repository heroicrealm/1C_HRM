#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий

Процедура ПередЗаписью(Отказ, Замещение)
	Если ЗарплатаКадры.ОтключитьБизнесЛогикуПриЗаписи(ЭтотОбъект) Тогда
		Возврат;
	КонецЕсли;
	Для Каждого Запись Из ЭтотОбъект Цикл
		Запись.Состояние = СостояниеРегистрации(Запись);
	КонецЦикла;
КонецПроцедуры

Процедура ПриЗаписи(Отказ, Замещение)
	УстановитьПривилегированныйРежим(Истина);
	Фильтр = Новый Структура("Состояние", Перечисления.СостоянияДокументаСЭДОФСС.Принят);
	ОтветыНаЗапросы = Выгрузить().Скопировать(Фильтр, "ИсходящийДокумент").ВыгрузитьКолонку("ИсходящийДокумент");
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ВходящийЗапросФССДляРасчетаПособия.Ссылка КАК Ссылка
	|ИЗ
	|	Документ.ВходящийЗапросФССДляРасчетаПособия КАК ВходящийЗапросФССДляРасчетаПособия
	|ГДЕ
	|	ВходящийЗапросФССДляРасчетаПособия.ОтветНаЗапрос В(&ОтветыНаЗапросы)";
	Запрос.УстановитьПараметр("ОтветыНаЗапросы", ОтветыНаЗапросы);
	МассивСсылок = Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Ссылка");
	Для Каждого ВходящийЗапрос Из МассивСсылок Цикл
		ВходящийЗапросОбъект = ВходящийЗапрос.ПолучитьОбъект();
		ВходящийЗапросОбъект.Обработан = Истина;
		ОбновлениеИнформационнойБазы.ЗаписатьОбъект(ВходящийЗапросОбъект);
	КонецЦикла;
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция СостояниеРегистрации(Запись)
	
	Если Не ЗначениеЗаполнено(Запись.ДатаОтправки) Тогда
		
		Возврат Перечисления.СостоянияДокументаСЭДОФСС.ПустаяСсылка(); // Не отправлен.
		
	ИначеЕсли ЗначениеЗаполнено(Запись.ДоставкаТекстОшибки) Тогда
		
		Возврат Перечисления.СостоянияДокументаСЭДОФСС.ОшибкаПриОтправке; // Ошибка при отправке.
		
	ИначеЕсли Запись.ЕстьОшибкиЛогическогоКонтроля Тогда
		
		Возврат Перечисления.СостоянияДокументаСЭДОФСС.ОшибкаЛогическогоКонтроля; // Отправлен, получены ошибки.
		
	ИначеЕсли Не Запись.Доставлен
		Или Не ЗначениеЗаполнено(Запись.РегистрацияИдентификатор)
		Или ВРег(Запись.РегистрацияСтатус) = "RECEIVED" Тогда
		
		Возврат Перечисления.СостоянияДокументаСЭДОФСС.Отправлен; // Отправлен, но не зарегистрирован.
		
	ИначеЕсли Не Запись.Зарегистрирован Тогда
		
		Возврат Перечисления.СостоянияДокументаСЭДОФСС.НеПринят;
		
	Иначе
		
		Возврат Перечисления.СостоянияДокументаСЭДОФСС.Принят;
		
	КонецЕсли;
	
КонецФункции

#КонецОбласти



#Иначе
ВызватьИсключение НСтр("ru = 'Недопустимый вызов объекта на клиенте.'");
#КонецЕсли