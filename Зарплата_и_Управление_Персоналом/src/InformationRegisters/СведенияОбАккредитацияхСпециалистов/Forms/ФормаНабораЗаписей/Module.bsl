#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Параметры.Отбор.Свойство("ФизическоеЛицо", ФизическоеЛицоСсылка);
	Заголовок = Строка(ФизическоеЛицоСсылка);
	СотрудникиФормыРасширенный.ПрочитатьНаборЗаписей(ЭтаФорма, "СведенияОбАккредитацияхСпециалистов");
	СведенияОбАккредитацияхСпециалистов.Сортировать("ДатаПротокола");
	УстановитьПредставленияСвидетельствОбАккредитации(СведенияОбАккредитацияхСпециалистов);
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	// СтандартныеПодсистемы.УправлениеДоступом
	УправлениеДоступом.ПриЧтенииНаСервере(ЭтотОбъект, ТекущийОбъект);
	// Конец СтандартныеПодсистемы.УправлениеДоступом
	
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	
	// СтандартныеПодсистемы.УправлениеДоступом
	УправлениеДоступом.ПослеЗаписиНаСервере(ЭтотОбъект, ТекущийОбъект, ПараметрыЗаписи);
	// Конец СтандартныеПодсистемы.УправлениеДоступом
	
	ПредставлениеАккредитацийСпециалиста = 
		РегистрыСведений.СведенияОбАккредитацияхСпециалистов.ПредставлениеАккредитацийСпециалиста(ФизическоеЛицоСсылка);
		
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)

	Оповестить("ИзмененыАккредитацииСпециалиста", ПредставлениеАккредитацийСпециалиста, ВладелецФормы);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыНаборЗаписей

&НаКлиенте
Процедура НаборЗаписейПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	
	Если НоваяСтрока Тогда
		ТекущиеДанные = Элемент.ТекущиеДанные;
		ТекущиеДанные.ФизическоеЛицо = ФизическоеЛицоСсылка;
		ТекущиеДанные.ПредставлениеСвидетельстваОбАккредитации = ПредставлениеСвидетельстваОбАккредитации(ТекущиеДанные);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура НаборЗаписейВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	Если Поле.Имя = "ПредставлениеСвидетельстваОбАккредитации" Тогда
		ТекущиеДанные = Элемент.ДанныеСтроки(ВыбраннаяСтрока);
		ОткрытьФормуСвидетельстваОбАккредитации(ТекущиеДанные);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура НаборЗаписейОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	Если ТипЗнч(ВыбранноеЗначение)<>Тип("Структура") Тогда
		Возврат;
	КонецЕсли;
	
	РезультатВыбора = Новый ФиксированнаяСтруктура(ВыбранноеЗначение);
	
	ИзмененнаяСтрока = СведенияОбАккредитацияхСпециалистов.НайтиПоИдентификатору(РезультатВыбора.Идентификатор);
	ИзмененнаяСтрока.ВидДеятельности = РезультатВыбора.ВидДеятельности;				
	ИзмененнаяСтрока.ДатаВыдачиСвидетельства = РезультатВыбора.ДатаВыдачиСвидетельства;				
	ИзмененнаяСтрока.РегистрационныйНомерСвидетельства = РезультатВыбора.РегистрационныйНомерСвидетельства;				
	ИзмененнаяСтрока.СпециальностьПоОбразованию = РезультатВыбора.СпециальностьПоОбразованию;				
	ИзмененнаяСтрока.УровеньОбразования = РезультатВыбора.УровеньОбразования;
	
	ИзмененнаяСтрока.ПредставлениеСвидетельстваОбАккредитации = ПредставлениеСвидетельстваОбАккредитации(ИзмененнаяСтрока);
	
	Модифицированность = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура ДатаПротоколаПриИзменении(Элемент)
	ТекущиеДанные = Элементы.НаборЗаписей.ТекущиеДанные;
	Если (ТекущиеДанные<>Неопределено) И (ЗначениеЗаполнено(ТекущиеДанные.ДатаПротокола)) И (Не ЗначениеЗаполнено(ТекущиеДанные.ДействуетДо)) Тогда 
		ТекущиеДанные.ДействуетДо = ДобавитьМесяц(ТекущиеДанные.ДатаПротокола, 60);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ВидПроцедурыОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	ТекущиеДанные = Элементы.НаборЗаписей.ТекущиеДанные;
	Если (ТекущиеДанные<>Неопределено) И (ЗначениеЗаполнено(ТекущиеДанные.ВидПроцедуры)) Тогда
		Если ТекущиеДанные.ВидПроцедуры=ПредопределенноеЗначение("Справочник.ВидыПроцедурАккредитацииСпециалистов.Периодическая")
				И (ВыбранноеЗначение=ПредопределенноеЗначение("Справочник.ВидыПроцедурАккредитацииСпециалистов.Первичная")
				Или ВыбранноеЗначение=ПредопределенноеЗначение("Справочник.ВидыПроцедурАккредитацииСпециалистов.ПервичнаяСпециализированная"))Тогда 
			ТекущиеДанные.Специальность = Неопределено;	
			ТекущиеДанные.ДатаПротокола = Дата('00010101');	
			ТекущиеДанные.ВидПроцедуры = Неопределено;	
			ТекущиеДанные.ПрофессиональныйСтандарт = Неопределено;	
			ТекущиеДанные.НомерПротокола = "";	
			ТекущиеДанные.МестоПроведения = Неопределено;	
			ТекущиеДанные.ДействуетДо = Дата('00010101');	
			ТекущиеДанные.РегистрационныйНомерСвидетельства = "";
			ТекущиеДанные.ДатаВыдачиСвидетельства = Дата('00010101');
			ТекущиеДанные.УровеньОбразования = Неопределено;
			ТекущиеДанные.СпециальностьПоОбразованию = Неопределено;
			ТекущиеДанные.ВидДеятельности = Неопределено;
			ТекущиеДанные.ПредставлениеСвидетельстваОбАккредитации = ПредставлениеСвидетельстваОбАккредитации(ТекущиеДанные);
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область ПредставлениеСвидетельстваОбАккредитации

&НаКлиенте
Процедура ОткрытьФормуСвидетельстваОбАккредитации(ТекущиеДанные)
	
	ПараметрыОткрытия = Новый Структура;
	ПараметрыОткрытия.Вставить("Заголовок", Заголовок);
	ПараметрыОткрытия.Вставить("Идентификатор", ТекущиеДанные.ПолучитьИдентификатор());
	ПараметрыОткрытия.Вставить("ВидДеятельности", ТекущиеДанные.ВидДеятельности);
	ПараметрыОткрытия.Вставить("ДатаВыдачиСвидетельства", ТекущиеДанные.ДатаВыдачиСвидетельства);
	ПараметрыОткрытия.Вставить("РегистрационныйНомерСвидетельства", ТекущиеДанные.РегистрационныйНомерСвидетельства);
	ПараметрыОткрытия.Вставить("СпециальностьПоОбразованию", ТекущиеДанные.СпециальностьПоОбразованию);
	ПараметрыОткрытия.Вставить("УровеньОбразования", ТекущиеДанные.УровеньОбразования);
	
	ОткрытьФорму("РегистрСведений.СведенияОбАккредитацияхСпециалистов.Форма.СвидетельствоОбАккредитацииСпециалиста", ПараметрыОткрытия, Элементы.НаборЗаписей);
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура УстановитьПредставленияСвидетельствОбАккредитации(АккредитацииСпециалистов)
	Для каждого Строка Из АккредитацииСпециалистов Цикл
		Строка.ПредставлениеСвидетельстваОбАккредитации = ПредставлениеСвидетельстваОбАккредитации(Строка);
	КонецЦикла;
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Функция ПредставлениеСвидетельстваОбАккредитации(Строка)
	
	Если СвидетельстваОбАккредитацииЗаполнено(Строка) Тогда
		ПредставлениеСвидетельства = ПредставлениеДанныхСвидетельстваОбАккредитации(Строка);
	Иначе
		ПредставлениеСвидетельства = НСтр("ru='Ввести'");
	КонецЕсли;
	
	Возврат ПредставлениеСвидетельства;
	
КонецФункции

&НаКлиентеНаСервереБезКонтекста
Функция СвидетельстваОбАккредитацииЗаполнено(Строка)
	
	Возврат ЗначениеЗаполнено(Строка.РегистрационныйНомерСвидетельства) 
	Или ЗначениеЗаполнено(Строка.ДатаВыдачиСвидетельства)
	Или ЗначениеЗаполнено(Строка.ВидДеятельности)
	Или ЗначениеЗаполнено(Строка.СпециальностьПоОбразованию)
	Или ЗначениеЗаполнено(Строка.УровеньОбразования);	
	
КонецФункции

&НаКлиентеНаСервереБезКонтекста
Функция ПредставлениеДанныхСвидетельстваОбАккредитации(Строка)
	
	Шаблон = НСтр("ru = '№%1 от %2, %3, %4, %5'");
	
	Если Не ЗначениеЗаполнено(Строка.РегистрационныйНомерСвидетельства) Тогда
	  Шаблон = СтрЗаменить(Шаблон, "%1",  НСтр("ru = '<не указан>'"));
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(Строка.ДатаВыдачиСвидетельства) Тогда
	  Шаблон = СтрЗаменить(Шаблон, " " + НСтр("ru = 'от %2'"),  "");
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(Строка.ВидДеятельности) Тогда
	  Шаблон = СтрЗаменить(Шаблон, " " + "%3",  НСтр("ru = '<вид деятельности не заполнен>'"));
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(Строка.УровеньОбразования) Тогда
	  Шаблон = СтрЗаменить(Шаблон, " " + НСтр("ru = '%4,'"), "");
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(Строка.СпециальностьПоОбразованию) Тогда
	  Шаблон = СтрЗаменить(Шаблон, " " + НСтр("ru = '%5'"),  "");
	КонецЕсли;

	ПредставлениеСвидетельства = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(Шаблон, 
		Строка.РегистрационныйНомерСвидетельства, Строка.ДатаВыдачиСвидетельства, 
		Строка.ВидДеятельности, Строка.СпециальностьПоОбразованию, Строка.УровеньОбразования);
	
	Возврат ПредставлениеСвидетельства;
	
КонецФункции

#КонецОбласти


#КонецОбласти
