#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область СлужебныйПрограммныйИнтерфейс

Процедура ДобавитьПечатнуюФорму(ДанныеПечатнойФормы, ПечатнаяФорма, ДатаВыпуска) Экспорт
	
	Запись = РегистрыСведений.ПодписанныеПечатныеФормы.СоздатьМенеджерЗаписи();
	
	Запись.ПрисоединенныйФайл         = ДанныеПечатнойФормы.ФайлОбъекта;
	Запись.ИдентификаторПечатнойФормы = ДанныеПечатнойФормы.ИдентификаторПечатнойФормы;
	Запись.ДатаВыпуска                = ДатаВыпуска;
	Запись.Название                   = ДанныеПечатнойФормы.Название;
	Запись.Организация                = ДанныеПечатнойФормы.Организация;
	Запись.Сотрудник                  = ДанныеПечатнойФормы.Сотрудник;
	Запись.ФизическоеЛицо             = ДанныеПечатнойФормы.ФизическоеЛицо;
	Запись.Номер                      = ДанныеПечатнойФормы.Номер;
	Запись.Дата                       = ДанныеПечатнойФормы.Дата;
	Запись.Оригинал                   = Новый ХранилищеЗначения(ПечатнаяФорма, Новый СжатиеДанных(9));
	
	Запись.Записать();
	
КонецПроцедуры

Функция УдалитьПечатныеФормыОбъекта(СсылкаНаОбъект) Экспорт
	
	Результат = 0;
	
	ОбработатьВТранзакции = Не ТранзакцияАктивна();
	Если ОбработатьВТранзакции Тогда
		НачатьТранзакцию();
	КонецЕсли;
	
	Попытка
		
		ФайлыПоОбъектам = КадровыйЭДО.ФайлыПечатныхФормПоОбъектам(
			ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве(СсылкаНаОбъект), , Истина, Истина);
		
		ФайлыПечатныхФорм = Новый Массив;
		Для Каждого ОписаниеФайловОбъекта Из ФайлыПоОбъектам Цикл
			
			Для Каждого ОписаниеФайловИдентификатора Из ОписаниеФайловОбъекта.Значение Цикл
				
				Для Каждого ФайлИдентификатора Из ОписаниеФайловИдентификатора.Значение Цикл
					
					ФайлыПечатныхФорм.Добавить(ФайлИдентификатора);
					
					Результат = Результат + 1;
					Запись = РегистрыСведений.ПодписанныеПечатныеФормы.СоздатьМенеджерЗаписи();
					Запись.ПрисоединенныйФайл = ФайлИдентификатора;
					Запись.ИдентификаторПечатнойФормы = ОписаниеФайловИдентификатора.Ключ;
					Запись.Прочитать();
					
					Если Запись.Выбран() Тогда
						
						Запись.Удалить();
						
						Блокировка = Новый БлокировкаДанных;
						ЭлементБлокировки = Блокировка.Добавить("Справочник."
							+ РаботаСФайламиСлужебный.ИмяСправочникаХраненияФайлов(СсылкаНаОбъект));
						ЭлементБлокировки.УстановитьЗначение("Ссылка", ФайлИдентификатора);
						Блокировка.Заблокировать();
						
						ОбъектФайла = ФайлИдентификатора.ПолучитьОбъект();
						ОбъектФайла.ДополнительныеСвойства.Вставить("УдалениеПечатныхФорм", Истина);
						ОбъектФайла.УстановитьПометкуУдаления(Истина);
						
					КонецЕсли;
				КонецЦикла;
			КонецЦикла;
		КонецЦикла;
		
		РегистрыСведений.ЗапланированныеДействияСФайламиДокументовКЭДО.УдалитьФайлыИзОбработки(ФайлыПечатныхФорм);
		
		Если ОбработатьВТранзакции Тогда
			ЗафиксироватьТранзакцию();
		КонецЕсли;
		
	Исключение
		
		Если ОбработатьВТранзакции Тогда
			ОтменитьТранзакцию();
		КонецЕсли;
		
		Ошибка = ИнформацияОбОшибке();
		ВызватьИсключение ПодробноеПредставлениеОшибки(Ошибка);
		
	КонецПопытки;
	
	Возврат Результат;
	
КонецФункции

Функция ДанныеФайлаПечатнойФормы(ФайлаПечатнойФормы) Экспорт
	
	Возврат ДанныеФайловПечатныхФорм(
		ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве(
			ФайлаПечатнойФормы))[ФайлаПечатнойФормы];
	
КонецФункции

Функция ДанныеФайловПечатныхФормНаПодпись(КоллекцияФайлов) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ПрисоединенныеФайлы", КоллекцияФайлов);
	
	Запрос.Текст =
		"ВЫБРАТЬ
		|	ПодписанныеФормы.ПрисоединенныйФайл КАК ФайлОбъекта,
		|	ПодписанныеФормы.ИдентификаторПечатнойФормы КАК ИдентификаторПечатнойФормы,
		|	ПодписанныеФормы.ПрисоединенныйФайл.ВладелецФайла КАК Владелец,
		|	ПодписанныеФормы.Оригинал КАК Оригинал,
		|	ПодписанныеФормы.Название КАК Название,
		|	ПодписанныеФормы.Организация КАК Организация,
		|	ПодписанныеФормы.Сотрудник КАК Сотрудник,
		|	ПодписанныеФормы.ФизическоеЛицо КАК ФизическоеЛицо,
		|	ПодписанныеФормы.Номер КАК Номер,
		|	ПодписанныеФормы.Дата КАК Дата
		|ИЗ
		|	РегистрСведений.ПодписанныеПечатныеФормы КАК ПодписанныеФормы
		|ГДЕ
		|	ПодписанныеФормы.ПрисоединенныйФайл В(&ПрисоединенныеФайлы)";
	
	УстановитьПривилегированныйРежим(Истина);
	ФайлыНаПодпись = Запрос.Выполнить().Выгрузить();
	УстановитьПривилегированныйРежим(Ложь);
	
	Возврат ФайлыНаПодпись;
	
КонецФункции

Функция ДанныеФайловПечатныхФорм(КоллекцияФайлов) Экспорт
	
	ДанныхФайлов = Новый Соответствие;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ПрисоединенныеФайлы", КоллекцияФайлов);
	
	Запрос.Текст =
		"ВЫБРАТЬ
		|	ПодписанныеФормы.ПрисоединенныйФайл КАК ПрисоединенныйФайл,
		|	ПодписанныеФормы.ИдентификаторПечатнойФормы КАК ИдентификаторПечатнойФормы,
		|	ПодписанныеФормы.Оригинал КАК Оригинал,
		|	ПодписанныеФормы.ДатаВыпуска КАК ДатаВыпуска,
		|	ПодписанныеФормы.Название КАК Название,
		|	ПодписанныеФормы.Организация КАК Организация,
		|	ПодписанныеФормы.Сотрудник КАК Сотрудник,
		|	ПодписанныеФормы.ФизическоеЛицо КАК ФизическоеЛицо,
		|	ПодписанныеФормы.Номер КАК Номер,
		|	ПодписанныеФормы.Дата КАК Дата
		|ИЗ
		|	РегистрСведений.ПодписанныеПечатныеФормы КАК ПодписанныеФормы
		|ГДЕ
		|	ПодписанныеФормы.ПрисоединенныйФайл В(&ПрисоединенныеФайлы)";
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		ДанныеФайла = ПоляДанныхФайла();
		ЗаполнитьЗначенияСвойств(ДанныеФайла, Выборка);
		ДанныхФайлов.Вставить(Выборка.ПрисоединенныйФайл, ДанныеФайла);
	КонецЦикла;
	
	Возврат ДанныхФайлов;
	
КонецФункции

Функция ОтобратьФайлыПечатныхФорм(ПрисоединенныеФайлы) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ПрисоединенныеФайлы", ПрисоединенныеФайлы);
	
	Запрос.Текст =
		"ВЫБРАТЬ
		|	ПодписанныеПечатныеФормы.ПрисоединенныйФайл КАК ПрисоединенныйФайл
		|ИЗ
		|	РегистрСведений.ПодписанныеПечатныеФормы КАК ПодписанныеПечатныеФормы
		|ГДЕ
		|	ПодписанныеПечатныеФормы.ПрисоединенныйФайл В(&ПрисоединенныеФайлы)";
	
	УстановитьПривилегированныйРежим(Истина);
	ФайлыПечатныхФорм = Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("ПрисоединенныйФайл");
	УстановитьПривилегированныйРежим(Ложь);
	
	Возврат ФайлыПечатныхФорм;
	
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция ПоляДанныхФайла()
	
	Возврат Новый Структура(
		"ПрисоединенныйФайл,
		|ИдентификаторПечатнойФормы,
		|Оригинал,
		|ДатаВыпуска,
		|Название,
		|Организация,
		|Сотрудник,
		|ФизическоеЛицо,
		|Номер,
		|Дата");
	
КонецФункции

#КонецОбласти

#КонецЕсли