#Область СлужебныйПрограммныйИнтерфейс

// Возвращает настройку использования руководителей подразделений организации.
//
// Возвращаемое значение:
// 		Булево
//
Функция РуководителиПодразделенийИспользуются() Экспорт
	
	Возврат ПолучитьФункциональнуюОпцию("ИспользуетсяСервисКабинетСотрудника")
			И КабинетСотрудника.ПубликоватьСтруктуруЮридическихЛиц();
	
КонецФункции

// Возвращает руководителей подразделений
// Параметры:
//	МассивПодразделений				- Массив - массив подразделений (СправочникСсылка.ПодразделенияОрганизаций), для которых необходимо получить руководителей
//	НаследованиеРуководителей		- Булево - если признак = Истина, руководителем подразделения будет считаться руководитель ближайшего родителя.
//
// Возвращаемое значение:
//	Соответствие - соответствие управленческих и регламентных подразделений.
//		* Ключ		- СправочникСсылка.ПодразделенияОрганизаций - подразделение.
//		* Значение 	- СправочникСсылка.ФизическиеЛица - физическое лицо руководителя.
//
Функция ДанныеРуководителей(МассивПодразделений, НаследованиеРуководителей = Ложь) Экспорт
	
	Руководители = Новый Соответствие;
	
	Если Не РуководителиПодразделенийИспользуются() Тогда
		Возврат Руководители;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Подразделения", МассивПодразделений);
	Запрос.УстановитьПараметр("ДатаСреза", ТекущаяДатаСеанса());
	
	Если НаследованиеРуководителей Тогда
		
		Запрос.Текст =
		"ВЫБРАТЬ
		|	ПодчиненностьПодразделений.Подразделение КАК Подразделение,
		|	ПодчиненностьПодразделений.ВышестоящееПодразделение КАК ВышестоящееПодразделение,
		|	ПодчиненностьПодразделений.ВышестоящееПодразделение.Родитель КАК ВышестоящееПодразделениеРодитель,
		|	ПодчиненностьПодразделений.Подразделение = ПодчиненностьПодразделений.ВышестоящееПодразделение КАК ИсходнаяСтрока
		|ИЗ
		|	РегистрСведений.ПодчиненностьПодразделенийОрганизаций КАК ПодчиненностьПодразделений
		|ГДЕ
		|	ПодчиненностьПодразделений.Подразделение В(&Подразделения)";
		ПодчиненностьПодразделений = Запрос.Выполнить().Выгрузить();
		ПодчиненностьПодразделений.Колонки.Добавить("Уровень", Новый ОписаниеТипов("Число"));
		
		Отбор = Новый Структура("Подразделение,ВышестоящееПодразделение");
		Для каждого Подразделение Из МассивПодразделений Цикл
			
			Отбор.Подразделение = Подразделение;
			Уровень = 0;
			
			Отбор.ВышестоящееПодразделение = Подразделение;
			НайденныеСтроки = ПодчиненностьПодразделений.НайтиСтроки(Отбор);
			НайденныеСтроки[0].Уровень = Уровень;
			
			Родитель = НайденныеСтроки[0].ВышестоящееПодразделениеРодитель;
			Пока ЗначениеЗаполнено(Родитель) Цикл
				Уровень = Уровень + 1;
				Отбор.ВышестоящееПодразделение = Родитель;
				НайденныеСтроки = ПодчиненностьПодразделений.НайтиСтроки(Отбор);
				НайденныеСтроки[0].Уровень = Уровень;
				Родитель = НайденныеСтроки[0].ВышестоящееПодразделениеРодитель;
			КонецЦикла;
		
		КонецЦикла;
		
		ПодразделенияОтбор = ОбщегоНазначения.ВыгрузитьКолонку(ПодчиненностьПодразделений, "ВышестоящееПодразделение", Истина);
		Запрос.УстановитьПараметр("Подразделения", ПодразделенияОтбор);
		Запрос.Текст =
		"ВЫБРАТЬ
		|	РуководителиСрезПоследних.Подразделение КАК Подразделение,
		|	РуководителиСрезПоследних.Руководитель КАК Руководитель
		|ИЗ
		|	РегистрСведений.ПодразделенияОрганизацииРуководители.СрезПоследних(&ДатаСреза, Подразделение.Ссылка В (&Подразделения)) КАК РуководителиСрезПоследних";
		Выборка = Запрос.Выполнить().Выбрать();
		РуководителиВсе = Новый Соответствие;
		Пока Выборка.Следующий() Цикл
			РуководителиВсе.Вставить(Выборка.Подразделение, Выборка.Руководитель);
		КонецЦикла;
		
		ПодчиненностьПодразделений.Сортировать("Подразделение,Уровень", Новый СравнениеЗначений);
		
		Отбор = Новый Структура("Подразделение,ИсходнаяСтрока");
		Отбор.ИсходнаяСтрока = Ложь;
		Для каждого Подразделение Из МассивПодразделений Цикл
			
			Руководитель = РуководителиВсе[Подразделение];
			Если Не ЗначениеЗаполнено(Руководитель) Тогда
				Отбор.Подразделение = Подразделение;
				НайденныеСтроки = ПодчиненностьПодразделений.НайтиСтроки(Отбор);
				Для Сч = 0 По НайденныеСтроки.ВГраница() Цикл
					Руководитель = РуководителиВсе[НайденныеСтроки[Сч].ВышестоящееПодразделение];
					Если ЗначениеЗаполнено(Руководитель) Тогда
						Прервать;
					КонецЕсли;
				КонецЦикла;
			КонецЕсли;
			
			Если ЗначениеЗаполнено(Руководитель) Тогда
				Руководители.Вставить(Подразделение, Руководитель);
			КонецЕсли;
			
		КонецЦикла;
		
	Иначе
		
		Запрос.Текст =
		"ВЫБРАТЬ
		|	РуководителиСрезПоследних.Подразделение КАК Подразделение,
		|	РуководителиСрезПоследних.Руководитель КАК Руководитель
		|ИЗ
		|	РегистрСведений.ПодразделенияОрганизацииРуководители.СрезПоследних(&ДатаСреза, Подразделение.Ссылка В (&Подразделения)) КАК РуководителиСрезПоследних";
		Выборка = Запрос.Выполнить().Выбрать();
		Пока Выборка.Следующий() Цикл
			Руководители.Вставить(Выборка.Подразделение, Выборка.Руководитель);
		КонецЦикла;
		
	КонецЕсли;
	
	Возврат Руководители;
	
КонецФункции

#КонецОбласти


