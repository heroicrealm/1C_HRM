#Область ПрограммныйИнтерфейс

// Выполняет обработку оповещения о записи печатных форм объектов, обновляет
// информацию о блокировке.
//
// Параметры:
//  УправляемаяФорма - УправляемаяФорма
//  ИмяСобытия       - Строка
//   Параметр        - Произвольный - См. описание одноименного параметра в синтакс-помощнике
//                      "ФормаКлиентскогоПриложения.ОбработкаОповещения".
//   Источник        - Произвольный - См. описание одноименного параметра в синтакс-помощнике
//                      "ФормаКлиентскогоПриложения.ОбработкаОповещения".
//
Процедура ОбработкаОповещения(УправляемаяФорма, ИмяСобытия, Параметр, Источник) Экспорт
	
	Если ИмяСобытия = "ЗаписьПечатныхФормСЭЦП" Тогда
		
		Если УправляемаяФорма.Объект.Ссылка = Источник Тогда
			
			Структура = Новый Структура("ИдентификаторыФайловСЭЦП,РеквизитыИдентификаторов", Null, Null);
			ЗаполнитьЗначенияСвойств(Структура, УправляемаяФорма);
			Если Структура.ИдентификаторыФайловСЭЦП <> Null
				И Структура.РеквизитыИдентификаторов <> Null Тогда
				
				Если Структура.ИдентификаторыФайловСЭЦП = Неопределено Тогда
					ИдентификаторыФайловСЭЦП = Новый Соответствие;
				Иначе
					ИдентификаторыФайловСЭЦП = Новый Соответствие(Структура.ИдентификаторыФайловСЭЦП);
				КонецЕсли;
				
				Для Каждого ЭлементСтруктуры Из Параметр Цикл
					ИдентификаторКоманды = Структура.РеквизитыИдентификаторов.Получить(ЭлементСтруктуры.Ключ);
					Если ИдентификаторКоманды <> Неопределено Тогда
						ИдентификаторыФайловСЭЦП.Вставить(ИдентификаторКоманды, Истина);
					КонецЕсли;
				КонецЦикла;
				
				УправляемаяФорма.ИдентификаторыФайловСЭЦП = Новый ФиксированноеСоответствие(ИдентификаторыФайловСЭЦП);
				
				ПодключаемыеКомандыКлиент.НачатьОбновлениеКоманд(УправляемаяФорма);
				
			КонецЕсли;
			
			БлокировкаИзмененияОбъектовКлиентСервер.ОбновитьГруппуБлокировкиИзмененияОбъекта(УправляемаяФорма, Истина);
			
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

// Обновляет подключаемые команды в форме списка при обработке оповещения о записи печатных форм.
//
// Параметры:
//  УправляемаяФорма - УправляемаяФорма
//  ИмяСобытия       - Строка
//  Параметр         - Произвольный - См. описание одноименного параметра в синтакс-помощнике
//                      "ФормаКлиентскогоПриложения.ОбработкаОповещения".
//  Источник         - Произвольный - См. описание одноименного параметра в синтакс-помощнике
//                      "ФормаКлиентскогоПриложения.ОбработкаОповещения".
//
Процедура ОбработкаОповещенияВФормеСписка(УправляемаяФорма, ИмяСобытия, Параметр, Источник) Экспорт
	
	Если ИмяСобытия = "ЗаписьПечатныхФормСЭЦП" Тогда
		
		ПодключаемыеКомандыКлиент.НачатьОбновлениеКоманд(УправляемаяФорма);
		
	КонецЕсли;
	
КонецПроцедуры

// См. УправлениеПечатьюКлиентПереопределяемый.ПечатьДокументовВыполнитьКоманду
//
Процедура ПечатьДокументовВыполнитьКоманду(Форма, Команда, ПродолжитьВыполнениеНаСервере, ДополнительныеПараметры) Экспорт
	
	Если Команда.Имя = "СохранитьВPDFИПодписатьФайл" Тогда
		ПодписатьПечатныеФомыПриПечати(Форма,
			ПредопределенноеЗначение("Перечисление.ДействияСФайламиДокументовКЭДО.ЗаписатьНаДиск"));
	ИначеЕсли Команда.Имя = "ОтправитьПодписанныеPDF" Тогда
		ПодписатьПечатныеФомыПриПечати(Форма,
			ПредопределенноеЗначение("Перечисление.ДействияСФайламиДокументовКЭДО.ОтправитьПоПочте"));
	ИначеЕсли Команда.Имя = "ПодписатьПечатныеФормы" Тогда
		Если Форма.Параметры.ПараметрыПечати.Свойство("ЦельПодписания") Тогда
			ПодписатьПечатныеФомыПриПечати(Форма, Форма.Параметры.ПараметрыПечати.ЦельПодписания);
		Иначе
			ПодписатьПечатныеФомыПриПечати(Форма,
				ПредопределенноеЗначение("Перечисление.ДействияСФайламиДокументовКЭДО.Подписать"));
		КонецЕсли;
	ИначеЕсли Команда.Имя = "НачатьИзменениеПечатнойФормы" Тогда
		ВключитьРедактированиеПечатнойФормы(Форма);
	КонецЕсли;
	
	ИнтеграцияСРаботаВРоссииКлиент.ПечатьДокументовВыполнитьКоманду(Форма, Команда, ПродолжитьВыполнениеНаСервере, ДополнительныеПараметры);
	КабинетСотрудникаКлиент.ПечатьДокументовВыполнитьКоманду(Форма, Команда, ПродолжитьВыполнениеНаСервере, ДополнительныеПараметры);
	
КонецПроцедуры

// Выполняет подписание печатных форм, выведенных в общую форму ПечатьДокументов.
//
// Параметры:
//  УправляемаяФорма - УправляемаяФорма, общая форма ПечатьДокументов
//  ЦельПодписания   - ПеречислениеСсылка.ДействияСФайламиДокументовКЭДО
//
Процедура ПодписатьПечатныеФомыПриПечати(УправляемаяФорма, ЦельПодписания) Экспорт
	
	// Сохранение отредактированной печатной формы
	НастройкаПечатнойФормы = УправлениеПечатьюКлиент.НастройкаТекущейПечатнойФормы(УправляемаяФорма);
	Если НастройкаПечатнойФормы <> Неопределено Тогда
		Если Не УправляемаяФорма.Элементы[НастройкаПечатнойФормы.ИмяРеквизита].Защита Тогда
			УправляемаяФорма[НастройкаПечатнойФормы.ИмяРеквизита] = УправляемаяФорма.ТекущаяПечатнаяФорма;
		КонецЕсли;
	КонецЕсли;
	
	ПечатныеФормы = Новый Массив;
	Для Каждого НастройкаПечатнойФормы Из УправляемаяФорма.НастройкиПечатныхФорм Цикл
		
		Если НастройкаПечатнойФормы.Печатать Тогда
			
			ОписаниеФормы = Новый Структура;
			ОписаниеФормы.Вставить("ПечатнаяФорма", УправляемаяФорма[НастройкаПечатнойФормы.ИмяРеквизита]);
			ОписаниеФормы.Вставить("ИдентификаторПечатнойФормы", НастройкаПечатнойФормы.ИмяМакета);
			ОписаниеФормы.Вставить("Название", НастройкаПечатнойФормы.Название);
			
			ПечатныеФормы.Добавить(ОписаниеФормы);
			
		КонецЕсли;
		
	КонецЦикла;
	
	ПечатныеФормыОбъектов = КадровыйЭДОВызовСервера.ПечатныеФормыОбъектов(
		ПечатныеФормы,
		УправляемаяФорма.ОбъектыПечати,
		УправляемаяФорма.Параметры.ПараметрыПечати,
		УправляемаяФорма.УникальныйИдентификатор);
	
	Если Не ЗначениеЗаполнено(ПечатныеФормыОбъектов) Тогда
		Возврат;
	КонецЕсли;
	
	ДополнительныеПараметры = Новый Структура;
	ДополнительныеПараметры.Вставить("Форма", УправляемаяФорма);
	ДополнительныеПараметры.Вставить("ПечатныеФормыОбъектов", ПечатныеФормыОбъектов);
	ДополнительныеПараметры.Вставить("ЦельПодписания", ЦельПодписания);
	ДополнительныеПараметры.Вставить("ПечатныеФормы", ПечатныеФормы);
	ДополнительныеПараметры.Вставить("ОбъектыПечати", УправляемаяФорма.ОбъектыПечати);
	
	Оповещение = Новый ОписаниеОповещения("ПослеПодписанияСохраненныхФорм", ЭтотОбъект, ДополнительныеПараметры);
	ПодписатьФайлы(ПечатныеФормыОбъектов, Оповещение, УправляемаяФорма, ЦельПодписания);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс

Функция ВыполнитьКомандуОткрытияПодписанныхФайлов(КомандаПечати) Экспорт
	
	Если ЭлектроннаяПодписьКлиент.ИспользоватьЭлектронныеПодписи() Тогда
		ПроверитьСертификатыПодписей(КомандаПечати);
		Возврат Неопределено;
	КонецЕсли;
	
	УправлениеПечатьюБЗККлиент.ВыполнитьКомандуПечати(КомандаПечати);
	
КонецФункции

Функция РазблокироватьФормуОбъекта(УправляемаяФорма, СсылкаНаОбъект) Экспорт
	
	Результат = КадровыйЭДОВызовСервера.РазблокироватьФормуОбъекта(СсылкаНаОбъект);
	Если ПустаяСтрока(Результат) Тогда
		
		Структура = Новый Структура("ИдентификаторыФайловСЭЦП", Null);
		ЗаполнитьЗначенияСвойств(Структура, УправляемаяФорма);
		Если Структура.ИдентификаторыФайловСЭЦП <> Null Тогда
			УправляемаяФорма.ИдентификаторыФайловСЭЦП = Неопределено;
		КонецЕсли;
		
		ПодключаемыеКомандыКлиент.НачатьОбновлениеКоманд(УправляемаяФорма);
		
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции

Процедура ОткрытьФормуПодписанияПечатныхФорм(ПрисоединенныеФайлы, ВладелецФормы = Неопределено, ОписаниеОповещения = Неопределено, РежимОткрытия = Неопределено, ЦельПодписания = Неопределено) Экспорт
	
	ПараметрыОткрытия = КадровыйЭДОВызовСервера.ПараметрыОткрытияФормыПодписанияПрисоединенныхФайлов(ПрисоединенныеФайлы);
	Если ЦельПодписания <> Неопределено Тогда
		Если Не ПараметрыОткрытия.Свойство("ПараметрыПечати") Тогда
			ПараметрыОткрытия.Вставить("ПараметрыОткрытия", Новый Структура);
		КонецЕсли;
		
		ПараметрыОткрытия.ПараметрыПечати.Вставить("ЦельПодписания", ЦельПодписания);
		
	КонецЕсли;
	ОткрытьФорму("ОбщаяФорма.ПечатьДокументов", ПараметрыОткрытия, ВладелецФормы, Истина, , , ОписаниеОповещения, РежимОткрытия);
	
КонецПроцедуры

Процедура ОбработчикПодключаемойКомандыПодписанияПечатныхФорм(ДокументыКадровогоЭДО, ДополнительныеПараметры) Экспорт
	
	Если ЗначениеЗаполнено(ДокументыКадровогоЭДО) Тогда
		
		ЭлектронныеДокументы =
			КадровыйЭДОВызовСервера.ЭлектронныеДокументыПоСсылкамНаДокументыКадровогоЭДО(ДокументыКадровогоЭДО);
		
		ДополнительныеПараметрыОповещенияВопроса = Новый Структура;
		ДополнительныеПараметрыОповещенияВопроса.Вставить("Форма", ДополнительныеПараметры.Форма);
		ДополнительныеПараметрыОповещенияВопроса.Вставить("ЭлектронныеДокументы", ЭлектронныеДокументы);
		
		Если ЗначениеЗаполнено(ЭлектронныеДокументы.ПечатныеФормы)
			И Не ЗначениеЗаполнено(ЭлектронныеДокументы.ПрисоединенныеФайлы) Тогда
			
			ОбработатьВыборДокументовНаПодпись(
				Новый Структура("Значение", "ПодписатьДокументыСПечатнымиФормами"), ДополнительныеПараметрыОповещенияВопроса);
		ИначеЕсли Не ЗначениеЗаполнено(ЭлектронныеДокументы.ПечатныеФормы)
			И ЗначениеЗаполнено(ЭлектронныеДокументы.ПрисоединенныеФайлы) Тогда
			
			ОбработатьВыборДокументовНаПодпись(
				Новый Структура("Значение", "ПодписатьДокументыСФайлами"), ДополнительныеПараметрыОповещенияВопроса);
		Иначе
			
			Оповещение = Новый ОписаниеОповещения("ОбработатьВыборДокументовНаПодпись",
				ЭтотОбъект, ДополнительныеПараметрыОповещенияВопроса);
			
			ТекстВопроса = НСтр("ru = 'Среди выбранных документов есть документы с печатными формами и документы с файлами.
				|За один подход можно подписать документы с печатными формами или документы с файлами.'");
			
			КнопкиВопроса = Новый СписокЗначений;
			КнопкиВопроса.Добавить("ПодписатьДокументыСПечатнымиФормами", НСтр("ru = 'Подписать документы с печатными формами'"));
			КнопкиВопроса.Добавить("ПодписатьДокументыСФайлами", НСтр("ru = 'Подписать документы с файлами'"));
			КнопкиВопроса.Добавить(КодВозвратаДиалога.Отмена, НСтр("ru = 'Отмена'"));
			
			ПараметрыВопроса = СтандартныеПодсистемыКлиент.ПараметрыВопросаПользователю();
			ПараметрыВопроса.ПредлагатьБольшеНеЗадаватьЭтотВопрос = Ложь;
			
			СтандартныеПодсистемыКлиент.ПоказатьВопросПользователю(Оповещение, ТекстВопроса, КнопкиВопроса, ПараметрыВопроса);
			
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

Процедура ОбработатьВыборДокументовНаПодпись(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат <> Неопределено Тогда
		Если Результат.Значение = "ПодписатьДокументыСПечатнымиФормами" Тогда
			Оповещение = Новый ОписаниеОповещения("ОбработатьРезультатыПодписанияДокументовСФайлами", ЭтотОбъект, Новый Структура);
			ОткрытьФормуПодписанияПечатныхФорм(ДополнительныеПараметры.ЭлектронныеДокументы.ПечатныеФормы,
				ДополнительныеПараметры.Форма, Оповещение, , ПредопределенноеЗначение("Перечисление.ДействияСФайламиДокументовКЭДО.Подписать"));
		ИначеЕсли Результат.Значение = "ПодписатьДокументыСФайлами" Тогда
			ФайлыНаПодпись = КадровыйЭДОВызовСервера.ДанныеФайловНаПодпись(
				ДополнительныеПараметры.ЭлектронныеДокументы.ПрисоединенныеФайлы);
			Оповещение = Новый ОписаниеОповещения("ОбработатьРезультатыПодписанияДокументовСФайлами", ЭтотОбъект,
				Новый Структура("ПодписанныеФайлы", ДополнительныеПараметры.ЭлектронныеДокументы.ПрисоединенныеФайлы));
			ПодписатьФайлы(
				ФайлыНаПодпись,
				Оповещение,
				ДополнительныеПараметры.Форма,
				ПредопределенноеЗначение("Перечисление.ДействияСФайламиДокументовКЭДО.Подписать"));
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

Процедура ОбработатьРезультатыПодписанияДокументовСФайлами(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат <> Неопределено Тогда
		Если ДополнительныеПараметры.Свойство("ПодписанныеФайлы") Тогда
			КадровыйЭДОВызовСервера.УдалитьФайлыИзОбработкиПользователя(ДополнительныеПараметры.ПодписанныеФайлы);
		КонецЕсли;
		ПоказатьСостояниеОтправленныхНаПодпись(ДополнительныеПараметры);
		ОповеститьОбОбновленииДанныхДолкументовКЭДО();
	КонецЕсли;
	
КонецПроцедуры

Процедура ПоказатьСостояниеОтправленныхНаПодпись(ПараметрыОповещения) Экспорт
	
	Если ПараметрыОповещения.Свойство("ДанныеФайловНаПодпись")
		И ПараметрыОповещения.ДанныеФайловНаПодпись.Количество() > 0 Тогда
		
		КоличествоФайловНаправленныхНаПодпись = 0;
		Для Каждого ФайлыНаПодписьОрганизации Из ПараметрыОповещения.ДанныеФайловНаПодпись Цикл
			КоличествоФайловНаправленныхНаПодпись = КоличествоФайловНаправленныхНаПодпись + ФайлыНаПодписьОрганизации.Значение.Количество();
		КонецЦикла;
		
		Состояние(СтрокаСЧислом(
			НСтр("ru = ';%1 документ направлен на подпись; ;%1 документа направлено на подпись;%1 документов направлены на подпись;%1 направлено на подпись'"),
			КоличествоФайловНаправленныхНаПодпись, ВидЧисловогоЗначения.Количественное));
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ОткрытьФормыВыбораПодписантовПечатныхФорм(ВладелецФормы, Организация, Оповещение, ПодписантыПечатныхФорм = Неопределено) Экспорт
	
	ПараметрыОткрытия = Новый Структура;
	ПараметрыОткрытия.Вставить("Организации", Организация);
	
	Если ПодписантыПечатныхФорм <> Неопределено Тогда
		ПараметрыОткрытия.Вставить("ПодписантыПечатныхФорм", Новый ФиксированныйМассив(ПодписантыПечатныхФорм));
	КонецЕсли;
	
	ОткрытьФорму("ОбщаяФорма.ВыборПодписантовПечатныхФорм", ПараметрыОткрытия, ВладелецФормы, Истина, , ,
		Оповещение, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	
КонецПроцедуры

// См. ОбщегоНазначенияКлиентПереопределяемый.ПриНачалеРаботыСистемы.
Процедура ПриНачалеРаботыСистемы(Параметры) Экспорт 
	
	Если Не СистемаВзаимодействия.ИспользованиеДоступно() Тогда
		Возврат;
	КонецЕсли;
	
	Обработчик = Новый ОписаниеОповещения("ОбработатьДействияСообщения", ЭтотОбъект);
	СистемаВзаимодействия.ПодключитьОбработчикДействияСообщения(Обработчик);
	
КонецПроцедуры

Процедура ОчиститьНастройкиПодписанияПечатныхФорм() Экспорт
	
	КадровыйЭДОВызовСервера.ОчиститьНастройкиПодписанияПечатныхФорм();
	ПоказатьПредупреждение(, НСтр("ru = 'Настройки подписания ЭЦП (электронными цифровыми подписями) очищены.'"));
	
КонецПроцедуры

Процедура ПодписатьФайлы(ПодписываемыеФайлы, ОповещениеЗавершения, ФормаВладелец, ЦельПодписания) Экспорт
	
	Организации = Новый Массив;
	ФайлыБезВладельца = Истина;
	Для Каждого ДанныеФайла Из ПодписываемыеФайлы Цикл
		Если Организации.Найти(ДанныеФайла.Организация) = Неопределено Тогда
			Организации.Добавить(ДанныеФайла.Организация);
		КонецЕсли;
		Если ЗначениеЗаполнено(ДанныеФайла.ФайлОбъекта) Тогда
			ФайлыБезВладельца = Ложь;
		КонецЕсли;
	КонецЦикла;
	
	ДанныеСертификатовОрганизаций = КадровыйЭДОВызовСервера.ДанныеСертификатовОрганизаций(Организации);
	
	ПараметрыПодписания = Новый Структура;
	ПараметрыПодписания.Вставить("ПодписываемыеФайлы", ПодписываемыеФайлы);
	ПараметрыПодписания.Вставить("Организации", Организации);
	ПараметрыПодписания.Вставить("СертификатыОрганизаций", ДанныеСертификатовОрганизаций.Сертификаты);
	ПараметрыПодписания.Вставить("ОповещениеЗавершения", ОповещениеЗавершения);
	ПараметрыПодписания.Вставить("ЦельПодписания", ЦельПодписания);
	Оповещение = Новый ОписаниеОповещения("ПодписатьФайлыСертификатами", ЭтотОбъект, ПараметрыПодписания);
	
	ПараметрыПодготовки = Новый Структура;
	ПараметрыПодготовки.Вставить("Организации", Организации);
	ПараметрыПодготовки.Вставить("ДанныеСертификатовОрганизаций", ДанныеСертификатовОрганизаций);
	ПараметрыПодготовки.Вставить("ОповещениеЗавершения", Оповещение);
	ПараметрыПодготовки.Вставить("ФормаВладелец", ФормаВладелец);
	ПараметрыПодготовки.Вставить("ИндексОрганизации", 0);
	ПараметрыПодготовки.Вставить("ФайлыБезВладельца", ФайлыБезВладельца);
	
	ПодготовитьСертификатыОрганизации(ПараметрыПодготовки);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область ПодписаниеВФормеПечатьДокументов

Процедура ПодписатьФайлыСертификатами(Результат, ДополнительныеПараметры) Экспорт
	
	ПодписываемыеФайлы = ДополнительныеПараметры.ПодписываемыеФайлы;
	СертификатыОрганизаций = ДополнительныеПараметры.СертификатыОрганизаций;
	
	ДанныеФайловНаПодпись = Новый Соответствие;
	ДанныеФайловПоСертификатам = Новый Соответствие;
	Сертификаты = Новый Массив;
	Для Каждого ДанныеФайла Из ПодписываемыеФайлы Цикл
		
		Если ПустаяСтрока(ДанныеФайла.АдресВХранилище)
			И Не ЗначениеЗаполнено(ДанныеФайла.ФайлОбъекта) Тогда
			
			Продолжить;
		КонецЕсли;
		
		СертификатыОрганизации = СертификатыОрганизаций.Получить(
			?(ДанныеФайла.Организация = Неопределено, "Неопределено", ДанныеФайла.Организация));
		
		Если СертификатыОрганизации = Неопределено Тогда
			Продолжить;
		КонецЕсли;
		
		Если ТипЗнч(СертификатыОрганизации[0]) = Тип("СправочникСсылка.Пользователи") Тогда
			
			ДанныеФайлов = ДанныеФайловНаПодпись.Получить(ДанныеФайла.Организация);
			Если ДанныеФайлов = Неопределено Тогда
				ДанныеФайлов = Новый Массив;
				ДанныеФайловНаПодпись.Вставить(ДанныеФайла.Организация, ДанныеФайлов);
			КонецЕсли;
			
			ДанныеФайлов.Добавить(ДанныеФайла);
			
		Иначе
			
			Для Каждого Сертификат Из СертификатыОрганизации Цикл
				
				Если ДанныеФайла.УстановленныеПодписи <> Неопределено
					И ДанныеФайла.УстановленныеПодписи.Получить(Сертификат) = Истина Тогда
					
					Продолжить;
				КонецЕсли;
				
				Если ЗначениеЗаполнено(ДанныеФайла.АдресВХранилище) Тогда
					АдресВХранилище = ДанныеФайла.АдресВХранилище;
				Иначе
					ДанныеПрисоединенногоФайла = РаботаСФайламиКлиент.ДанныеФайла(ДанныеФайла.ФайлОбъекта, Новый УникальныйИдентификатор, Истина);
					АдресВХранилище = ДанныеПрисоединенногоФайла.СсылкаНаДвоичныеДанныеФайла;
				КонецЕсли;
				
				Данные = Новый Структура;
				Данные.Вставить("Данные",        АдресВХранилище);
				Данные.Вставить("Представление", ДанныеФайла.ИмяФайла);
				Данные.Вставить("ИсходнаяСтрока", ДанныеФайла);
				
				Если ЗначениеЗаполнено(ДанныеФайла.ФайлОбъекта) Тогда
					Данные.Вставить("Объект", ДанныеФайла.ФайлОбъекта);
				КонецЕсли;
				
				НаборДанных = ДанныеФайловПоСертификатам.Получить(Сертификат);
				Если НаборДанных = Неопределено Тогда
					НаборДанных = Новый Массив;
					ДанныеФайловПоСертификатам.Вставить(Сертификат, НаборДанных);
					Сертификаты.Добавить(Сертификат);
				КонецЕсли;
				
				НаборДанных.Добавить(Данные);
				
			КонецЦикла;
			
		КонецЕсли;
		
	КонецЦикла;
	
	Если ДанныеФайловНаПодпись.Количество() > 0 Тогда
		НаправитьНаПодпись(ДанныеФайловНаПодпись, ДополнительныеПараметры.ЦельПодписания, СертификатыОрганизаций);
		Если ДополнительныеПараметры.ОповещениеЗавершения <> Неопределено Тогда
			ДополнительныеПараметры.ОповещениеЗавершения.ДополнительныеПараметры.Вставить("ДанныеФайловНаПодпись", ДанныеФайловНаПодпись);
		КонецЕсли;
	КонецЕсли;
	
	Если Сертификаты.Количество() > 0 Тогда
		ПодписатьФайлыСертификатом(ДанныеФайловПоСертификатам, Сертификаты, 0,
			ДополнительныеПараметры.ОповещениеЗавершения);
	Иначе
		ВыполнитьОбработкуОповещения(ДополнительныеПараметры.ОповещениеЗавершения, ДополнительныеПараметры.ПодписываемыеФайлы);
	КонецЕсли;
	
КонецПроцедуры

#Область ПодготовкаСпискаСертификатовОрганизаций

Процедура ПодготовитьСертификатыОрганизации(ПараметрыПодготовки)
	
	ФормаВладелец = ПараметрыПодготовки.ФормаВладелец;
	Организация = ПараметрыПодготовки.Организации[ПараметрыПодготовки.ИндексОрганизации];
	ДанныеСертификатовОрганизаций = ПараметрыПодготовки.ДанныеСертификатовОрганизаций;
	
	СертификатыОрганизации = ДанныеСертификатовОрганизаций.Сертификаты.Получить(
		?(Организация = Неопределено, "Неопределено", Организация));
	
	ОбновитьСертификаты = ПараметрыПодготовки.ФайлыБезВладельца И Не ЗначениеЗаполнено(СертификатыОрганизации)
		Или (ДанныеСертификатовОрганизаций.ОрганизацииКОбновлению.Получить(Организация) <> Неопределено);
	
	Если Не ПараметрыПодготовки.ФайлыБезВладельца
		И (СертификатыОрганизации = Неопределено
			Или СертификатыОрганизации.Количество() = 0) Тогда
		
		Оповещение = Новый ОписаниеОповещения("ПриВыбореОтветственныхЛиц", ЭтотОбъект, ПараметрыПодготовки);
		ОткрытьФормыВыбораПодписантовПечатныхФорм(ФормаВладелец, Организация, Оповещение);
		
	ИначеЕсли ОбновитьСертификаты
		Или СертификатыОрганизации.Количество() > 1
			И ТипЗнч(СертификатыОрганизации[0]) = Тип("СправочникСсылка.СертификатыКлючейЭлектроннойПодписиИШифрования") Тогда
		
		Оповещение = Новый ОписаниеОповещения("ПриВыбореСертификатов", ЭтотОбъект, ПараметрыПодготовки);
		
		Отборы = Новый Структура;
		Если ЗначениеЗаполнено(Организация) Тогда
			Отборы.Вставить("Организация", Организация);
		КонецЕсли;
		
		ПараметрыОткрытия = Новый Структура;
		ПараметрыОткрытия.Вставить("МножественныйВыбор", Истина);
		ПараметрыОткрытия.Вставить("Отбор", Отборы);
		
		ОткрытьФорму("Справочник.СертификатыКлючейЭлектроннойПодписиИШифрования.ФормаВыбора", ПараметрыОткрытия, ФормаВладелец,
			Истина, , , Оповещение, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
		
	Иначе
		ПодготовитьСертификатыСледующейОрганизации(ПараметрыПодготовки);
	КонецЕсли;
	
КонецПроцедуры

Процедура ПодготовитьСертификатыСледующейОрганизации(ПараметрыПодготовки)
	
	ПараметрыПодготовки.ИндексОрганизации = ПараметрыПодготовки.ИндексОрганизации + 1;
	Если ПараметрыПодготовки.ИндексОрганизации < ПараметрыПодготовки.Организации.Количество() Тогда
		ПодготовитьСертификатыОрганизации(ПараметрыПодготовки);
	Иначе
		ВыполнитьОбработкуОповещения(ПараметрыПодготовки.ОповещениеЗавершения, Истина);
	КонецЕсли;
	
КонецПроцедуры

#Область ВыборСертификатов

Процедура ПриВыбореСертификатов(ВыбранныеСертификаты, ПараметрыПодготовки) Экспорт
	
	Если ВыбранныеСертификаты <> Неопределено Тогда
		
		Если ТипЗнч(ВыбранныеСертификаты) = Тип("СправочникСсылка.СертификатыКлючейЭлектроннойПодписиИШифрования") Тогда
			СертификатыОрганизации = ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве(ВыбранныеСертификаты);
		Иначе
			СертификатыОрганизации = ВыбранныеСертификаты;
		КонецЕсли;
		
		Организация = ПараметрыПодготовки.Организации[ПараметрыПодготовки.ИндексОрганизации];
		ПараметрыПодготовки.ДанныеСертификатовОрганизаций.Сертификаты.Вставить(
			?(Организация = Неопределено, "Неопределено", Организация), СертификатыОрганизации);
		
		ПараметрыВопроса = СтандартныеПодсистемыКлиент.ПараметрыВопросаПользователю();
		ПараметрыВопроса.Заголовок = НСтр("ru = 'Подписание документов'");
		ПараметрыВопроса.ПредлагатьБольшеНеЗадаватьЭтотВопрос = Ложь;
		
		Если СертификатыОрганизации.Количество() = 1 Тогда
			ТекстВопроса = НСтр("ru = 'Всегда подписывать выбранным сертификатом?'");
		Иначе
			ТекстВопроса = НСтр("ru = 'Всегда подписывать выбранными сертификатами?'");
		КонецЕсли;
		
		Оповещение = Новый ОписаниеОповещения("ОбработатьОтветОПодписанииВыбраннымиСертификатами", ЭтотОбъект, ПараметрыПодготовки);
		СтандартныеПодсистемыКлиент.ПоказатьВопросПользователю(Оповещение, ТекстВопроса, РежимДиалогаВопрос.ДаНет, ПараметрыВопроса);
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ОбработатьОтветОПодписанииВыбраннымиСертификатами(Результат, ПараметрыПодготовки) Экспорт
	
	Если Результат = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если Результат.Значение = КодВозвратаДиалога.Да Тогда
		Организация = ПараметрыПодготовки.Организации[ПараметрыПодготовки.ИндексОрганизации];
		СертификатыОрганизации = ПараметрыПодготовки.ДанныеСертификатовОрганизаций.Сертификаты.Получить(
			?(Организация = Неопределено, "Неопределено", Организация));
		КадровыйЭДОВызовСервера.ЗапомнитьСертификатыОрганизации(Организация, СертификатыОрганизации);
	КонецЕсли;
	
	ПодготовитьСертификатыСледующейОрганизации(ПараметрыПодготовки);
	
КонецПроцедуры

#КонецОбласти

#Область ВыборОтветственныхЛиц

Процедура ПриВыбореОтветственныхЛиц(ВыбранныеПодписанты, ПараметрыПодготовки) Экспорт
	
	Если ВыбранныеПодписанты = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Организация = ПараметрыПодготовки.Организации[ПараметрыПодготовки.ИндексОрганизации];
	ПараметрыПодготовки.ДанныеСертификатовОрганизаций.Сертификаты.Вставить(Организация, ВыбранныеПодписанты);
	
	ПараметрыВопроса = СтандартныеПодсистемыКлиент.ПараметрыВопросаПользователю();
	ПараметрыВопроса.Заголовок = НСтр("ru = 'Подписание документов'");
	ПараметрыВопроса.ПредлагатьБольшеНеЗадаватьЭтотВопрос = Ложь;
	
	Если ВыбранныеПодписанты.Количество() = 1 Тогда
		
		ТекстВопроса = СтрШаблон(
			НСтр("ru = 'Всегда направлять документы организации %1 на подписание выбранному
				|ответственному лицу (%2)?'"),
			Организация,
			ВыбранныеПодписанты[0]);
		
	Иначе
		
		ТекстВопроса = СтрШаблон(
			НСтр("ru = 'Всегда направлять документы организации %1 на подписание выбранным ответственным лицам?'"),
			Организация);
		
	КонецЕсли;
	
	Оповещение = Новый ОписаниеОповещения("ОбработатьОтветОВыбореОтветственныхЛиц", ЭтотОбъект, ПараметрыПодготовки);
	СтандартныеПодсистемыКлиент.ПоказатьВопросПользователю(Оповещение, ТекстВопроса, РежимДиалогаВопрос.ДаНет, ПараметрыВопроса);
	
КонецПроцедуры

Процедура ОбработатьОтветОВыбореОтветственныхЛиц(Результат, ПараметрыПодготовки) Экспорт
	
	Если Результат = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если Результат.Значение = КодВозвратаДиалога.Да Тогда
		Организация = ПараметрыПодготовки.Организации[ПараметрыПодготовки.ИндексОрганизации];
		ВыбранныеПодписанты = ПараметрыПодготовки.ДанныеСертификатовОрганизаций.Сертификаты.Получить(Организация);
		КадровыйЭДОВызовСервера.ЗапомнитьПодписантов(Организация, ВыбранныеПодписанты);
	КонецЕсли;
	
	ПодготовитьСертификатыСледующейОрганизации(ПараметрыПодготовки);
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#Область ПодписаниеФайловПечатныхФорм

Процедура ПодписатьФайлыСертификатом(ДанныеФайловПоСертификатам, СертификатыОрганизаций, ИндексДанных, ОповещениеЗавершения)
	
	Сертификат = СертификатыОрганизаций[ИндексДанных];
	
	ДополнительныеПараметры = Новый Структура;
	ДополнительныеПараметры.Вставить("ДанныеФайловПоСертификатам", ДанныеФайловПоСертификатам);
	ДополнительныеПараметры.Вставить("СертификатыОрганизаций", СертификатыОрганизаций);
	ДополнительныеПараметры.Вставить("ИндексДанных", ИндексДанных);
	ДополнительныеПараметры.Вставить("ОповещениеЗавершения", ОповещениеЗавершения);
	
	ОтборСертификатов = Новый Массив;
	ОтборСертификатов.Добавить(Сертификат);
	
	ОписаниеДанных = Новый Структура;
	ОписаниеДанных.Вставить("БезПодтверждения",    Истина);
	ОписаниеДанных.Вставить("ПоказатьКомментарий", Ложь);
	ОписаниеДанных.Вставить("ОтборСертификатов", ОтборСертификатов);
	
	НаборДанных = ДанныеФайловПоСертификатам[Сертификат];
	Если НаборДанных.Количество() = 1 Тогда
		ОписаниеДанных.Вставить("Операция",            НСтр("ru = 'Подписание файла'"));
		ОписаниеДанных.Вставить("ЗаголовокДанных",     НСтр("ru = 'Файл'"));
		ОписаниеДанных.Вставить("Данные",              НаборДанных[0].Данные);
		ОписаниеДанных.Вставить("Представление",       НаборДанных[0].Представление);
		Если НаборДанных[0].Свойство("Объект") Тогда
			ОписаниеДанных.Вставить("Объект",          НаборДанных[0].Объект);
		КонецЕсли;
	Иначе
		ОписаниеДанных.Вставить("Операция",            НСтр("ru = 'Подписание файлов'"));
		ОписаниеДанных.Вставить("ЗаголовокДанных",     НСтр("ru = 'Файлы'"));
		ОписаниеДанных.Вставить("ПредставлениеНабора", НСтр("ru = 'Печатные формы (%1)'"));
		ОписаниеДанных.Вставить("НаборДанных",         НаборДанных);
	КонецЕсли;
	
	Состояние(ОписаниеДанных.Операция + Символы.ПС + Сертификат);
	
	Оповещение = Новый ОписаниеОповещения("ПослеПодписанияФайловСертификатом", ЭтотОбъект, ДополнительныеПараметры);
	ЭлектроннаяПодписьКлиент.Подписать(ОписаниеДанных, ЭтотОбъект, Оповещение);
	
КонецПроцедуры

Процедура ПослеПодписанияФайловСертификатом(Результат, ДополнительныеПараметры) Экспорт
	
	Если ТипЗнч(Результат) = Тип("Структура") И Результат.Успех Тогда
		
		Если ДополнительныеПараметры.Свойство("ОповещениеЗавершения") Тогда
			
			ОповещениеЗавершения = ДополнительныеПараметры.ОповещениеЗавершения;
			ДополнительныеПараметрыОповещениеЗавершения = ОповещениеЗавершения.ДополнительныеПараметры;
			Если ДополнительныеПараметрыОповещениеЗавершения <> Неопределено
				И ДополнительныеПараметрыОповещениеЗавершения.Свойство("Форма") Тогда
				
				Если Не ДополнительныеПараметрыОповещениеЗавершения.Свойство("ОбновленныеФайлы") Тогда
					ДополнительныеПараметрыОповещениеЗавершения.Вставить("ОбновленныеФайлы", Новый Массив);
				КонецЕсли;
				
				ФайлыКОбработке = Новый Массив;
				
				Форма = ДополнительныеПараметрыОповещениеЗавершения.Форма;
				Сертификат = ДополнительныеПараметры.СертификатыОрганизаций[ДополнительныеПараметры.ИндексДанных];
				ДанныеФайлов = ДополнительныеПараметры.ДанныеФайловПоСертификатам[Сертификат];
				Для Каждого ДанныеФайла Из ДанныеФайлов Цикл
					
					Если ЗначениеЗаполнено(ДанныеФайла.ИсходнаяСтрока.ФайлОбъекта) Тогда
						ФайлыКОбработке.Добавить(ДанныеФайла.ИсходнаяСтрока.ФайлОбъекта);
					Иначе
						Если Результат.Свойство("Данные") Тогда
							ДанныеФайла.ИсходнаяСтрока.Вставить("СвойстваПодписи", Результат.СвойстваПодписи);
						КонецЕсли;
					КонецЕсли;
					
					ОписаниеОригиналовИдентификатора = Форма.Параметры.ПараметрыПечати.ДополнительныеПараметры.ОписанияФайловПечатныхФорм.ОригиналыПечатныхФорм.Получить(
						ДанныеФайла.ИсходнаяСтрока.ИдентификаторПечатнойФормы);
					
					Если ОписаниеОригиналовИдентификатора <> Неопределено Тогда
						
						Оригиналы = ОписаниеОригиналовИдентификатора.Оригиналы;
						
						ИсходнаяСтрока = Оригиналы.Получить(ДанныеФайла.ИсходнаяСтрока.ФайлОбъекта);
						Если ИсходнаяСтрока <> Неопределено Тогда
							
							Если ИсходнаяСтрока.УстановленныеПодписи = Неопределено Тогда
								ИсходнаяСтрока.УстановленныеПодписи = Новый Соответствие;
							КонецЕсли;
							ИсходнаяСтрока.УстановленныеПодписи.Вставить(Сертификат, Истина);
							
							ДополнительныеПараметрыОповещениеЗавершения.ОбновленныеФайлы.Добавить(ИсходнаяСтрока);
							
						КонецЕсли;
					КонецЕсли;
				КонецЦикла;
			КонецЕсли;
			
		Иначе
			ОповещениеЗавершения = Неопределено;
		КонецЕсли;
		
		ИндексДанных = ДополнительныеПараметры.ИндексДанных + 1;
		Если ИндексДанных < ДополнительныеПараметры.СертификатыОрганизаций.Количество() Тогда
			
			ПодписатьФайлыСертификатом(
				ДополнительныеПараметры.ДанныеФайловПоСертификатам,
				ДополнительныеПараметры.СертификатыОрганизаций,
				ИндексДанных,
				ОповещениеЗавершения);
			
		Иначе
			
			Если ОповещениеЗавершения <> Неопределено Тогда
				ВыполнитьОбработкуОповещения(ОповещениеЗавершения, Истина);
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

Процедура ПослеПодписанияСохраненныхФорм(РезультатПодписания, ДополнительныеПараметры) Экспорт
	
	Если РезультатПодписания <> Неопределено Тогда
		
		РезультатПодписанияФайлов = ДополнительныеПараметры.ПечатныеФормыОбъектов;
		
		ФормаПечатьДокументов = ДополнительныеПараметры.Форма;
		Если ДополнительныеПараметры.ЦельПодписания = ПредопределенноеЗначение("Перечисление.ДействияСФайламиДокументовКЭДО.Подписать") Тогда
			
			Если ФормаПечатьДокументов.Открыта() Тогда
				ФормаПечатьДокументов.Закрыть();
			КонецЕсли;
			
		Иначе
			
			ОбрабатываемыеФайлы = Новый Массив;
			ВладельцыФайлов = Новый Соответствие;
			
			Если ДополнительныеПараметры.Свойство("ДанныеФайловНаПодпись") Тогда
				ДанныеФайловНаПодпись = ДополнительныеПараметры.ДанныеФайловНаПодпись;
			Иначе
				ДанныеФайловНаПодпись = Новый Соответствие;
			КонецЕсли;
			
			Для Каждого ОписаниеФайла Из РезультатПодписанияФайлов Цикл
				
				ФайлыНаПодписьОрганизации = ДанныеФайловНаПодпись.Получить(ОписаниеФайла.Организация);
				Если ФайлыНаПодписьОрганизации = Неопределено
					Или ФайлыНаПодписьОрганизации.Найти(ОписаниеФайла) = Неопределено Тогда
					
					Если ЗначениеЗаполнено(ОписаниеФайла.ФайлОбъекта) Тогда
						ОбрабатываемыеФайлы.Добавить(ОписаниеФайла.ФайлОбъекта);
					Иначе
						ОписаниеФайлаПодписанногоФайла = Новый Структура;
						ОписаниеФайлаПодписанногоФайла.Вставить("ПечатнаяФорма", ОписаниеФайла.ПечатнаяФорма);
						ОписаниеФайлаПодписанногоФайла.Вставить("СвойстваПодписи", ОписаниеФайла.СвойстваПодписи);
						ОписаниеФайлаПодписанногоФайла.Вставить("ИдентификаторПечатнойФормы", ОписаниеФайла.ИдентификаторПечатнойФормы);
						ОписаниеФайлаПодписанногоФайла.Вставить("ИмяФайла", ОписаниеФайла.ИмяФайла);
						ОписаниеФайлаПодписанногоФайла.Вставить("Название", ОписаниеФайла.Название);
						ОписаниеФайлаПодписанногоФайла.Вставить("АдресВХранилище", ОписаниеФайла.АдресВХранилище);
						ОписаниеФайлаПодписанногоФайла.Вставить("ФизическоеЛицо", ОписаниеФайла.ФизическоеЛицо);
						ОбрабатываемыеФайлы.Добавить(ОписаниеФайлаПодписанногоФайла);
					КонецЕсли;
					
				КонецЕсли;
				
				Если ЗначениеЗаполнено(ОписаниеФайла.Владелец) И ТипЗнч(ОписаниеФайла.Владелец) <> Тип("Строка") Тогда
					
					ИдентификаторыВладельца = ВладельцыФайлов.Получить(ОписаниеФайла.Владелец);
					Если ИдентификаторыВладельца = Неопределено Тогда
						ИдентификаторыВладельца = Новый Соответствие;
						ВладельцыФайлов.Вставить(ОписаниеФайла.Владелец, ИдентификаторыВладельца);
					КонецЕсли;
					
					ИдентификаторыВладельца.Вставить(ОписаниеФайла.ИдентификаторПечатнойФормы, Истина);
					
				КонецЕсли;
				
			КонецЦикла;
			
			Для Каждого ДанныеВладельца Из ВладельцыФайлов Цикл
				ОповеститьОбИзменении(ДанныеВладельца.Ключ);
				Оповестить("ЗаписьПечатныхФормСЭЦП", ДанныеВладельца.Значение, ДанныеВладельца.Ключ);
			КонецЦикла;
			
			Если ОбрабатываемыеФайлы.Количество() > 0 Тогда
				
				Если ДополнительныеПараметры.ЦельПодписания = ПредопределенноеЗначение("Перечисление.ДействияСФайламиДокументовКЭДО.ЗаписатьНаДиск") Тогда
					
					СохранитьПечатныеФормыНаДиск(ОбрабатываемыеФайлы);
					
				ИначеЕсли ДополнительныеПараметры.ЦельПодписания = ПредопределенноеЗначение("Перечисление.ДействияСФайламиДокументовКЭДО.ОтправитьПоПочте") Тогда
					
					ПараметрыОтправки = ФормаПечатьДокументов.ПараметрыВывода.ПараметрыОтправки;
					
					ПараметрыОткрытияФормы = Новый Структура;
					ПараметрыОткрытияФормы.Вставить("Получатели", ПараметрыОтправки.Получатель);
					ПараметрыОткрытияФормы.Вставить("Тема", ПараметрыОтправки.Тема);
					ПараметрыОткрытияФормы.Вставить("Текст", ПараметрыОтправки.Текст);
					ПараметрыОткрытияФормы.Вставить("СписокФайлов", ОбрабатываемыеФайлы);
					
					ОтправитьПечатныеФормыПоЭлектроннойПочте(ФормаПечатьДокументов, ПараметрыОткрытияФормы);
					
				ИначеЕсли ДополнительныеПараметры.ЦельПодписания = ПредопределенноеЗначение("Перечисление.ДействияСФайламиДокументовКЭДО.ПередатьНаРаботаВРоссии") Тогда
					
					ИнтеграцияСРаботаВРоссииКлиент.ПередатьДокументы(ОбрабатываемыеФайлы);
					
				ИначеЕсли ДополнительныеПараметры.ЦельПодписания = ПредопределенноеЗначение("Перечисление.ДействияСФайламиДокументовКЭДО.ПередатьВКабинетСотрудников") Тогда
					
					КадровыйЭДОВызовСервера.ЗапланироватьДействияСПечатнымиФормами(ОбрабатываемыеФайлы, ДополнительныеПараметры.ЦельПодписания);
					
				КонецЕсли;
				
			КонецЕсли;
			
			Если ДополнительныеПараметры.Свойство("ОбновленныеФайлы") Тогда
				ОбновленныеФайлы = ДополнительныеПараметры.ОбновленныеФайлы;
			Иначе
				ОбновленныеФайлы = Новый Массив;
			КонецЕсли;
			
			Если ДанныеФайловНаПодпись.Количество() > 0 Тогда
				Для Каждого ФайлыНаПодписьОрганизации Из ДанныеФайловНаПодпись Цикл
					ОбщегоНазначенияКлиентСервер.ДополнитьМассив(ОбновленныеФайлы, ФайлыНаПодписьОрганизации.Значение);
				КонецЦикла;
			КонецЕсли;
			
			ПоказатьСостояниеОтправленныхНаПодпись(ДополнительныеПараметры);
			
			Если ОбновленныеФайлы.Количество() > 0 Тогда
				КадровыйЭДОВызовСервера.ЗаменитьПечатныеФормы(
					ОбновленныеФайлы, ДополнительныеПараметры.ПечатныеФормы, ДополнительныеПараметры.ОбъектыПечати);
			КонецЕсли;
			
			Для Каждого ОписаниеПечатнойФормы Из ДополнительныеПараметры.ПечатныеФормы Цикл
				
				НайденныеФормы = ФормаПечатьДокументов.НастройкиПечатныхФорм.НайтиСтроки(Новый Структура("ИмяМакета", ОписаниеПечатнойФормы.ИдентификаторПечатнойФормы));
				Если НайденныеФормы.Количество() > 0 Тогда
					ФормаПечатьДокументов[НайденныеФормы[0].ИмяРеквизита] = ОписаниеПечатнойФормы.ПечатнаяФорма;
				КонецЕсли;
				
			КонецЦикла;
			
			ФормаПечатьДокументов.ПодключитьОбработчикОжидания("УстановитьТекущуюСтраницу", 0.1, Истина);
			
			ТекущаяНастройка = УправлениеПечатьюКлиент.НастройкаТекущейПечатнойФормы(ФормаПечатьДокументов);
			Если ТекущаяНастройка <> Неопределено Тогда
				
				ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
					ФормаПечатьДокументов.Элементы,
					"КнопкаРедактирование",
					"Пометка",
					Ложь);
				
				ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
					ФормаПечатьДокументов.Элементы,
					"КнопкаРедактирование",
					"Доступность",
					Ложь);
				
			КонецЕсли;
			
		КонецЕсли;
		
		ОповеститьОбОбновленииДанныхДолкументовКЭДО();
		КадровыйЭДОВызовСервера.ОбновитьУведомленияВФоне();
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СохранениеНаНосители

Процедура СохранитьПечатныеФормыНаДиск(СписокФайлов, ОповещениеЗавершения = Неопределено) Экспорт
	
	ПараметрыСохранения = ФайловаяСистемаКлиент.ПараметрыСохраненияФайлов();
	ФайловаяСистемаКлиент.СохранитьФайлы(ОповещениеЗавершения,
		КадровыйЭДОВызовСервера.ФайлыПечатныхФормДляСохраненияНаДиск(СписокФайлов), ПараметрыСохранения);
	
КонецПроцедуры

#КонецОбласти

#Область ОтправкаНаЭлАдрес

Процедура ОтправитьПечатныеФормыПоЭлектроннойПочте(ВладелецФормы, ПараметрыОткрытияФормы)
	
	ДополнительныеПараметры = Новый Структура;
	ДополнительныеПараметры.Вставить("ПараметрыОткрытияФормы", ПараметрыОткрытияФормы);
	ДополнительныеПараметры.Вставить("ВладелецФормы", ВладелецФормы);
	
	ОписаниеОповещения = Новый ОписаниеОповещения(
		"ОтправитьПечатныеФормыПоЭлектроннойПочтеНастройкаУчетнойЗаписиПредложена", ЭтотОбъект, ДополнительныеПараметры);
	
	Если ОбщегоНазначенияКлиент.ПодсистемаСуществует("СтандартныеПодсистемы.РаботаСПочтовымиСообщениями") Тогда
		МодульРаботаСПочтовымиСообщениямиКлиент = ОбщегоНазначенияКлиент.ОбщийМодуль("РаботаСПочтовымиСообщениямиКлиент");
		МодульРаботаСПочтовымиСообщениямиКлиент.ПроверитьНаличиеУчетнойЗаписиДляОтправкиПочты(ОписаниеОповещения);
	КонецЕсли;
	
КонецПроцедуры

Процедура ОтправитьПечатныеФормыПоЭлектроннойПочтеНастройкаУчетнойЗаписиПредложена(УчетнаяЗаписьНастроена, ДополнительныеПараметры) Экспорт
	
	Если УчетнаяЗаписьНастроена <> Истина Тогда
		Возврат;
	КонецЕсли;
	
	Если ДополнительныеПараметры.Свойство("ОповещениеЗавершения") Тогда
		ОповещениеЗавершения = ДополнительныеПараметры.ОповещениеЗавершения;
	Иначе
		ОповещениеЗавершения = Неопределено;
	КонецЕсли;
	
	ОткрытьФорму("ОбщаяФорма.ОтправкаПодписанныхФайлов",
		ДополнительныеПараметры.ПараметрыОткрытияФормы,
		ДополнительныеПараметры.ВладелецФормы,
		Истина, , , ОповещениеЗавершения,
		РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	
КонецПроцедуры

#КонецОбласти

Процедура ОповеститьОбОбновленииДанныхДолкументовКЭДО() Экспорт
	
	Оповестить("ОбновленыДанныеДокументовКЭДО");
	
КонецПроцедуры

Процедура НаправитьНаПодпись(ДанныеФайловНаПодпись, Действие, ИсполнителиОрганизаций) Экспорт
	
	Для Каждого ОписаниеДанных Из ДанныеФайловНаПодпись Цикл
		
		Организация = ОписаниеДанных.Ключ;
		Исполнители = ИсполнителиОрганизаций.Получить(Организация);
		
		ДанныеФайлов = Новый Массив;
		Для Каждого ОписаниеФайла Из ОписаниеДанных.Значение Цикл
			ДанныеФайлов.Добавить(ОписаниеФайла.ФайлОбъекта)
		КонецЦикла;
		
		КадровыйЭДОВызовСервера.НаправитьНаПодпись(ДанныеФайлов, Действие, Исполнители);
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ПроверитьСертификатыПодписей(КомандаПечати)
	
	ПодписиБезСертификатов = КадровыйЭДОВызовСервера.ПодписиБезСертификатов(КомандаПечати.ОбъектыПечати, КомандаПечати.Идентификатор);
	Если ЗначениеЗаполнено(ПодписиБезСертификатов) Тогда
		ДополнительныеПараметры = Новый Структура("КомандаПечати", КомандаПечати);
		ДополнительныеПараметры.Вставить("ПодписиБезСертификатов", ПодписиБезСертификатов);
		Оповещение = Новый ОписаниеОповещения("ПолучитьСведенияОСертификатеПослеСозданияМенеджера", ЭтотОбъект, ДополнительныеПараметры);
		ЭлектроннаяПодписьКлиент.СоздатьМенеджерКриптографии(Оповещение, "ПолучениеСертификатов");
		Возврат;
	КонецЕсли;
	
	УправлениеПечатьюБЗККлиент.ВыполнитьКомандуПечати(КомандаПечати);
	
КонецПроцедуры

Функция ДанныеСертификатаПодписи(МенеджерКриптографии, ДвоичныеДанныеПодписи) Экспорт
	
	ДанныеСертификата = Новый Структура("Сертификат,Отпечаток,АдресСертификата");
	Попытка
		Сертификаты = МенеджерКриптографии.ПолучитьСертификатыИзПодписи(ДвоичныеДанныеПодписи);
		Если Сертификаты.Количество() > 0 Тогда
			
			ДанныеСертификата.Сертификат = Сертификаты[Сертификаты.Количество() - 1];
			ДанныеСертификата.Отпечаток = Base64Строка(ДанныеСертификата.Сертификат.Отпечаток);
			ДанныеСертификата.АдресСертификата = ПоместитьВоВременноеХранилище(
				ДанныеСертификата.Сертификат.Выгрузить(), Новый УникальныйИдентификатор);
			
		КонецЕсли;
	Исключение
		Ошибка = ИнформацияОбОшибке();
	КонецПопытки;
	
	Возврат ДанныеСертификата;
	
КонецФункции

Процедура ПолучитьСведенияОСертификатеПослеСозданияМенеджера(МенеджерКриптографии, ДополнительныеПараметры) Экспорт
	
	Если ТипЗнч(МенеджерКриптографии) <> Тип("Строка") Тогда
		
		Для Каждого ПодписьБезСертификата Из ДополнительныеПараметры.ПодписиБезСертификатов Цикл
			
			ДанныеСертификата = ДанныеСертификатаПодписи(МенеджерКриптографии,
				ПолучитьИзВременногоХранилища(ПодписьБезСертификата.Подпись));
			Если ЗначениеЗаполнено(ДанныеСертификата.Отпечаток) Тогда
				ПодписьБезСертификата.Отпечаток = ДанныеСертификата.Отпечаток;
				ПодписьБезСертификата.Сертификат = ДанныеСертификата.АдресСертификата;
			КонецЕсли;
			
		КонецЦикла;
		
		ДополнительныеПараметрыКоманды = Новый Структура;
		Если ДополнительныеПараметры.КомандаПечати.Свойство("ДополнительныеПараметры") Тогда
			ДополнительныеПараметрыКоманды = ДополнительныеПараметры.КомандаПечати.ДополнительныеПараметры;
		КонецЕсли;
		
		ДополнительныеПараметрыКоманды.Вставить("ПодписиБезСертификатов", ДополнительныеПараметры.ПодписиБезСертификатов);
		ДополнительныеПараметры.КомандаПечати.Вставить("ДополнительныеПараметры", ДополнительныеПараметрыКоманды);
		
	КонецЕсли;
	
	УправлениеПечатьюБЗККлиент.ВыполнитьКомандуПечати(ДополнительныеПараметры.КомандаПечати);
	
КонецПроцедуры

// Извлекает сертификаты из данных подписи.
// Заполняет данные последнего сертификата цепочки.
//
Процедура ЗаполнитьДанныеСертификатов(ПодписиБезСертификатов) Экспорт
	
	Результат = Неопределено;
	
	МенеджерКриптографии = ЭлектроннаяПодписьКлиент.СоздатьМенеджерКриптографии("ПолучениеСертификатов");
	Если МенеджерКриптографии = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Для Каждого ПодписьБезСертификата Из ПодписиБезСертификатов Цикл
		
		Попытка
			Сертификаты = МенеджерКриптографии.ПолучитьСертификатыИзПодписи(ПодписьБезСертификата.Подпись);
		Исключение
			Продолжить;
		КонецПопытки;
		
		Если Сертификаты.Количество() > 0 Тогда
			
			Сертификат = Сертификаты[Сертификаты.Количество() - 1];
			ПодписьБезСертификата.Значение.Вставить("Отпечаток",
				Base64Строка(Сертификат.Отпечаток));
			ПодписьБезСертификата.Значение.Вставить("КомуВыданСертификат",
				ЭлектроннаяПодписьКлиент.ПредставлениеСубъекта(Сертификат));
			ПодписьБезСертификата.Значение.Вставить("ДвоичныеДанныеСертификата",
				ПоместитьВоВременноеХранилище(Сертификат.Выгрузить(), Новый УникальныйИдентификатор));
			
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ОбработатьДействияСообщения(Сообщение, Действие, ДополнительныеПараметры) Экспорт
	
	Если Действие = КадровыйЭДОКлиентСервер.ИмяДействияУведомленияОзнакомитьсяИПодписать() Тогда
		ПараметрыОткрытия = Новый Структура("ДокументыНаПодпись", Истина);
		ОткрытьФорму("Документ.ДокументКадровогоЭДО.ФормаСписка", ПараметрыОткрытия, , Истина);
	КонецЕсли;
	
КонецПроцедуры

Процедура ВключитьРедактированиеПечатнойФормы(УправляемаяФорма)
	
	Элементы = УправляемаяФорма.Элементы;
	
	НастройкаПечатнойФормы = УправлениеПечатьюКлиент.НастройкаТекущейПечатнойФормы(УправляемаяФорма);
	Если НастройкаПечатнойФормы <> Неопределено Тогда
		
		Редактирование = Не Элементы[КадровыйЭДОКлиентСервер.ПрефиксЭлементовОВозможностиРедактирования() + "КомандаРедактирования"].Пометка;
		
		ПолеТабличногоДокумента = Элементы[НастройкаПечатнойФормы.ИмяРеквизита];
		ПолеТабличногоДокумента.Редактирование = Редактирование;
		Элементы.ТекущаяПечатнаяФорма.Редактирование = ПолеТабличногоДокумента.Редактирование;
		Элементы.ТекущаяПечатнаяФорма.ОтображатьСетку = Элементы.ТекущаяПечатнаяФорма.Редактирование;
		Элементы.ТекущаяПечатнаяФорма.ОтображатьЗаголовки = Элементы.ТекущаяПечатнаяФорма.Редактирование;
		
		ПечатнаяФормаДоступна = Элементы.Страницы.ТекущаяСтраница <> Элементы.СтраницаПечатнаяФормаНедоступна;
		РедактированиеВозможно = ПечатнаяФормаДоступна И Не ПолеТабличногоДокумента.Защита;
		
		ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
			Элементы,
			КадровыйЭДОКлиентСервер.ПрефиксЭлементовОВозможностиРедактирования() + "КомандаРедактирования",
			"Пометка",
			Редактирование);
		
		ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
			Элементы,
			КадровыйЭДОКлиентСервер.ПрефиксЭлементовОВозможностиРедактирования() + "КомандаРедактирования",
			"Доступность",
			РедактированиеВозможно);
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти
