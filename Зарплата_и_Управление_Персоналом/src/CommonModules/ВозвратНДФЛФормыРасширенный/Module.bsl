#Область СлужебныеПроцедурыИФункции

Процедура ПослеПолученияДанныхНаСервере(Форма, ОписаниеТаблицыНДФЛ) Экспорт
	
	РасчетЗарплатыРасширенныйФормы.ДокументыВыполненияНачисленийДополнитьФорму(Форма, ОписаниеТаблицыНДФЛ, "");
	РасчетЗарплатыРасширенныйФормы.ДокументыНачисленийДополнитьФормуРезультатыРаспределения(Форма, ОписанияТаблиц(ОписаниеТаблицыНДФЛ));
	
	ЗарплатаКадрыРасширенный.ВводРаспределенияРезультатовРасчетаДанныеВРеквизит(Форма, ОписанияТаблиц(ОписаниеТаблицыНДФЛ));
	ОтражениеЗарплатыВБухучетеРасширенный.ОбъектПриЧтенииНаСервереПредставлениеРаспределения(Форма, ОписаниеДокумента(ОписаниеТаблицыНДФЛ));
	
КонецПроцедуры

Процедура РеквизитыВДанные(Форма, ТекущийОбъект, ОписаниеТаблицыНДФЛ) Экспорт 
	
	ЗарплатаКадрыРасширенный.ВводРаспределенияРезультатовРасчетаРеквизитВДанные(Форма, ТекущийОбъект, ОписанияТаблиц(ОписаниеТаблицыНДФЛ));	
	
КонецПроцедуры

Процедура РаспределитьПоИсточникамФинансирования(Объект) Экспорт 
	
	Если Не ПолучитьФункциональнуюОпцию("ИспользоватьСтатьиФинансированияЗарплата") Тогда
		Возврат;
	КонецЕсли;
	
	Если Объект.СуммыВозврата.Количество() = 0 Тогда 
		Возврат;
	КонецЕсли;
	
	ДанныеНДФЛ = Новый ТаблицаЗначений;
	ДанныеНДФЛ.Колонки.Добавить("ФизическоеЛицо", Новый ОписаниеТипов("СправочникСсылка.ФизическиеЛица"));
	ДанныеНДФЛ.Колонки.Добавить("Подразделение", Новый ОписаниеТипов("СправочникСсылка.ПодразделенияОрганизаций"));
	ДанныеНДФЛ.Колонки.Добавить("НачислениеУдержание", Новый ОписаниеТипов("ПеречислениеСсылка.ВидыОсобыхНачисленийИУдержаний"));
	ДанныеНДФЛ.Колонки.Добавить("Сумма", Новый ОписаниеТипов("Число"));
	
	ДанныеНДФЛСПревышения = ДанныеНДФЛ.Скопировать();
	
	Если Объект.СуммыВозврата.Итог("Налог") <> 0 Тогда
		НоваяСтрокаНДФЛ = ДанныеНДФЛ.Добавить();
		НоваяСтрокаНДФЛ.ФизическоеЛицо = Объект.Сотрудник;
		НоваяСтрокаНДФЛ.Сумма = Объект.СуммыВозврата.Итог("Налог");
		НоваяСтрокаНДФЛ.НачислениеУдержание = Перечисления.ВидыОсобыхНачисленийИУдержаний.НДФЛ;
	КонецЕсли;
	Если Объект.СуммыВозврата.Итог("НалогСПревышения") <> 0 Тогда
		НоваяСтрокаНДФЛСПревышения = ДанныеНДФЛСПревышения.Добавить();
		НоваяСтрокаНДФЛСПревышения.ФизическоеЛицо = Объект.Сотрудник;
		НоваяСтрокаНДФЛСПревышения.Сумма = Объект.СуммыВозврата.Итог("НалогСПревышения");
		НоваяСтрокаНДФЛСПревышения.НачислениеУдержание = Перечисления.ВидыОсобыхНачисленийИУдержаний.НДФЛСПревышения;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	Запрос.УстановитьПараметр("КонецМесяца", КонецМесяца(Объект.Месяц));
	
	КадровыйУчет.СоздатьВТОсновныеСотрудникиФизическихЛиц(Запрос.МенеджерВременныхТаблиц, Ложь, ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве(Объект.Сотрудник), Объект.Организация, КонецМесяца(Объект.Месяц));
	
	Запрос.Текст = "ВЫБРАТЬ
	               |	Сотрудники.Сотрудник КАК Сотрудник,
	               |	&КонецМесяца КАК Период
	               |ПОМЕСТИТЬ ВТПериодыСотрудников
	               |ИЗ
	               |	ВТОсновныеСотрудникиФизическихЛиц КАК Сотрудники";
	
	Запрос.Выполнить();
	
	ОписательВременныхТаблиц = КадровыйУчет.ОписательВременныхТаблицДляСоздатьВТКадровыеДанныеСотрудников(Запрос.МенеджерВременныхТаблиц, "ВТПериодыСотрудников");
	КадровыйУчет.СоздатьВТКадровыеДанныеСотрудников(ОписательВременныхТаблиц, Ложь, "Подразделение");
	
	Запрос.Текст = "ВЫБРАТЬ
	               |	ДанныеОСотруднике.Подразделение КАК Подразделение
	               |ИЗ
	               |	ВТКадровыеДанныеСотрудников КАК ДанныеОСотруднике";
	
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда 
		ДанныеНДФЛ.ЗаполнитьЗначения(Выборка.Подразделение, "Подразделение");
		ДанныеНДФЛСПревышения.ЗаполнитьЗначения(Выборка.Подразделение, "Подразделение");
	КонецЕсли;
	
	УдержанияПоРабочимМестам = УчетНачисленнойЗарплатыРасширенный.РаспределениеПрочихУдержанийПоРабочимМестам(
		ДанныеНДФЛ, Объект.Месяц, Объект.Организация, Неопределено, Неопределено, 
		Перечисления.ВидыОсобыхНачисленийИУдержаний.НДФЛ, 0);
			
	УдержанияПоРабочимМестамНДФЛСПревышения = УчетНачисленнойЗарплатыРасширенный.РаспределениеПрочихУдержанийПоРабочимМестам(
		ДанныеНДФЛСПревышения, Объект.Месяц, Объект.Организация, Неопределено, Неопределено, 
		Перечисления.ВидыОсобыхНачисленийИУдержаний.НДФЛСПревышения, 0);
	
	ОбщегоНазначенияКлиентСервер.ДополнитьТаблицу(УдержанияПоРабочимМестамНДФЛСПревышения, УдержанияПоРабочимМестам);
	
	Запрос.УстановитьПараметр("УдержанияПоРабочимМестам", УдержанияПоРабочимМестам);
		
		// Создаем временную таблицу с рабочими местами и распределенными по ним суммами удержания.
		Запрос.Текст = "ВЫБРАТЬ
		               |	&КонецМесяца КАК Период,
		               |	УдержанияПоРабочимМестам.Организация КАК Организация,
		               |	УдержанияПоРабочимМестам.ФизическоеЛицо КАК ФизическоеЛицо,
		               |	УдержанияПоРабочимМестам.Сотрудник КАК Сотрудник,
		               |	УдержанияПоРабочимМестам.НачислениеУдержание КАК НачислениеУдержание,
		               |	УдержанияПоРабочимМестам.Подразделение КАК Подразделение,
		               |	УдержанияПоРабочимМестам.Сумма КАК Сумма,
		               |	УдержанияПоРабочимМестам.ТерриторияВыполненияРаботВОрганизации КАК ТерриторияВыполненияРаботВОрганизации,
		               |	УдержанияПоРабочимМестам.РегистрацияВНалоговомОргане КАК РегистрацияВНалоговомОргане
		               |ПОМЕСТИТЬ ВТСотрудники
		               |ИЗ
		               |	&УдержанияПоРабочимМестам КАК УдержанияПоРабочимМестам";
		
		Запрос.Выполнить();
		
		// Создаем временную таблицу с отражениями в учете
		ОтражениеЗарплатыВБухучетеРасширенный.СоздатьВТСведенияОБухучетеЗарплатыСотрудников(Запрос.МенеджерВременныхТаблиц, "ВТСотрудники");
		
		// Получаем данные распределения в привязке к статьям финансирования
		Запрос.Текст = "ВЫБРАТЬ
		               |	Сотрудники.НачислениеУдержание КАК ВидУдержания,
		               |	Сотрудники.Сотрудник КАК Сотрудник,
		               |	Сотрудники.Подразделение КАК Подразделение,
		               |	СведенияОБухучетеЗарплатыСотрудников.СтатьяФинансирования КАК СтатьяФинансирования,
		               |	СведенияОБухучетеЗарплатыСотрудников.СтатьяФинансирования.Код КАК КодСтатьиФинансирования,
		               |	СведенияОБухучетеЗарплатыСотрудников.СтатьяРасходов КАК СтатьяРасходов,
		               |	СУММА(Сотрудники.Сумма) КАК Сумма
		               |ИЗ
		               |	ВТСотрудники КАК Сотрудники
		               |		ЛЕВОЕ СОЕДИНЕНИЕ ВТСведенияОБухучетеЗарплатыСотрудников КАК СведенияОБухучетеЗарплатыСотрудников
		               |		ПО (СведенияОБухучетеЗарплатыСотрудников.Подразделение = Сотрудники.Подразделение)
		               |			И (СведенияОБухучетеЗарплатыСотрудников.Организация = Сотрудники.Организация)
		               |			И (СведенияОБухучетеЗарплатыСотрудников.Сотрудник = Сотрудники.Сотрудник)
		               |
		               |СГРУППИРОВАТЬ ПО
		               |	Сотрудники.Сотрудник,
		               |	Сотрудники.НачислениеУдержание,
		               |	Сотрудники.Подразделение,
		               |	СведенияОБухучетеЗарплатыСотрудников.СтатьяФинансирования,
		               |	СведенияОБухучетеЗарплатыСотрудников.СтатьяФинансирования.Код,
		               |	СведенияОБухучетеЗарплатыСотрудников.СтатьяРасходов
		               |
		               |УПОРЯДОЧИТЬ ПО
		               |	Подразделение";
		
		СведенияОБухучете = Запрос.Выполнить().Выгрузить();
		КоэффициентыРаспределения = ОбщегоНазначения.ВыгрузитьКолонку(СведенияОБухучете, "Сумма");
		
		Для Каждого СтрокаВозврата Из Объект.СуммыВозврата Цикл 
			СуммаНалога = СтрокаВозврата.Налог + СтрокаВозврата.НалогСпревышения;
			РаспределениеСуммыУдержаний = ОбщегоНазначения.РаспределитьСуммуПропорциональноКоэффициентам(СуммаНалога, КоэффициентыРаспределения);
			ПараметрыДляПроверкиРезультатаРаспределения = ОтражениеЗарплатыВБухучетеРасширенный.ПараметрыДляПроверкиРезультатовРаспределенияУдержаний();
			РаспределениеРезультатовУдержаний = ОтражениеЗарплатыВУчете.НоваяТаблицаРаспределениеРезультатовУдержаний();
			Для Индекс = 0 По КоэффициентыРаспределения.Количество() - 1 Цикл
				СтрокаРаспределения = РаспределениеРезультатовУдержаний.Добавить();
				ЗаполнитьЗначенияСвойств(СтрокаРаспределения, СведенияОБухучете[Индекс]);
				СтрокаРаспределения.Результат = РаспределениеСуммыУдержаний[Индекс];
			КонецЦикла;
			СтруктураРаспределения = ЗарплатаКадрыРасширенный.ТаблицаЗначенийВСтруктуру(РаспределениеРезультатовУдержаний); 
			СтрокаВозврата.РезультатРаспределения = СтруктураРаспределения;
			СтрокаВозврата.КомандаРедактированияРаспределения = ОтражениеЗарплатыВБухучетеРасширенный.ПредставлениеРезультатаРаспределенияСтрокиУдержания(
				СуммаНалога, СтруктураРаспределения, ПараметрыДляПроверкиРезультатаРаспределения);
		КонецЦикла;
	
КонецПроцедуры

Процедура ДополнитьФормуДокумента(Форма) Экспорт
	
	Если Форма.Параметры.Ключ.Пустая() Тогда
		
		Если НЕ ЗначениеЗаполнено(Форма.Объект.ПорядокВыплаты) Тогда
			ОбщегоНазначенияКлиентСервер.УстановитьРеквизитФормыПоПути(Форма, "Объект.ПорядокВыплаты", Перечисления.ХарактерВыплатыЗарплаты.Зарплата, Истина);
		КонецЕсли;
		
	КонецЕсли;	

	ВыплатаГруппа = Форма.Элементы.Вставить("ВыплатаГруппа", Тип("ГруппаФормы"),,Форма.Элементы["КомментарийГруппа"]); 
	ВыплатаГруппа.Вид = ВидГруппыФормы.ОбычнаяГруппа;
	ВыплатаГруппа.Заголовок				= НСтр("ru = 'Выплата'");
	ВыплатаГруппа.Отображение			= ОтображениеОбычнойГруппы.Нет;
	ВыплатаГруппа.Группировка			= ГруппировкаПодчиненныхЭлементовФормы.Горизонтальная;

	ПорядокВыплаты = Форма.Элементы.Вставить("ПорядокВыплаты", Тип("ПолеФормы"), ВыплатаГруппа);
	ПорядокВыплаты.Заголовок				= НСтр("ru = 'Выплата'");
	ПорядокВыплаты.ПутьКДанным				= "Объект.ПорядокВыплаты";
	ПорядокВыплаты.Вид						= ВидПоляФормы.ПолеВвода;
	ПорядокВыплаты.Ширина					= 18;
	ПорядокВыплаты.РастягиватьПоГоризонтали	= Ложь;
	ПорядокВыплаты.РежимВыбораИзСписка		= Истина;
	ПорядокВыплаты.СписокВыбора.ЗагрузитьЗначения(Перечисления.ХарактерВыплатыЗарплаты.ВсеЗначения());
	
КонецПроцедуры	

Функция ОписаниеДокумента(ОписаниеТаблицыНДФЛ)
	
	ОписанияТаблиц = Новый Структура;
	ОписанияТаблиц.Вставить("СуммыВозврата", ОписаниеТаблицыНДФЛ);
	
	Описание = РасчетЗарплатыРасширенныйКлиентСервер.ОписаниеРасчетногоДокумента();
	Описание.НДФЛИмя = "СуммыВозврата";
	Описание.ОписанияТаблицДляРаспределенияРезультата = ОписанияТаблиц;
	
	Возврат Описание;
	
КонецФункции

Функция ОписанияТаблиц(ОписаниеТаблицыНДФЛ)

	Возврат ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве(ОписаниеТаблицыНДФЛ);

КонецФункции

#КонецОбласти
