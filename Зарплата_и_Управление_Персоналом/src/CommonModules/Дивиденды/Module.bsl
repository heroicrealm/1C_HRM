
#Область СлужебныйПрограммныйИнтерфейс

// Добавляет в список Обработчики процедуры-обработчики обновления,
// необходимые данной подсистеме.
//
// Параметры:
//   Обработчики - ТаблицаЗначений - см. описание функции НоваяТаблицаОбработчиковОбновления
//                                   общего модуля ОбновлениеИнформационнойБазы.
// 
Процедура ЗарегистрироватьОбработчикиОбновления(Обработчики) Экспорт
	
	Обработчик = Обработчики.Добавить();
	Обработчик.Версия = "3.1.9.156";
	Обработчик.Процедура = "Дивиденды.ПроставитьОснованияПоУдержанномуНДФЛ";
	Обработчик.РежимВыполнения = "Отложенно";
	Обработчик.Идентификатор = Новый УникальныйИдентификатор("a4844a81-7ff4-428e-911c-195bf5de1640");
	Обработчик.Комментарий = НСтр("ru = 'Дополнение сведений об удержанном НДФЛ данными об основаниях.'");
	
	Обработчик = Обработчики.Добавить();
	Обработчик.Версия = "3.1.10.30";
	Обработчик.Процедура = "Дивиденды.ЗаполнитьРеквизитПеречислениеНДФЛВыполнено";
	Обработчик.РежимВыполнения = "Отложенно";
	Обработчик.Идентификатор = Новый УникальныйИдентификатор("19f38ede-edac-445a-840a-94324bae7248");
	Обработчик.Комментарий = НСтр("ru = 'Заполнение реквизита ПеречислениеНДФЛВыполнено в документах Дивиденды.'");
	
	Обработчик = Обработчики.Добавить();
	Обработчик.Версия = "3.1.17.121";
	Обработчик.Процедура = "Документы.ДивидендыФизическимЛицам.ПеренестиВычетВНалогНаПрибыль";
	Обработчик.РежимВыполнения = "Отложенно";
	Обработчик.Идентификатор = Новый УникальныйИдентификатор("e037cca9-fbb7-41fd-a0b6-6d3534c60046");
	Обработчик.Комментарий = НСтр("ru = 'Расчет налога на прибыль, принимаемого в зачет НДФЛ по дивидендам резидентов РФ.'");
	
КонецПроцедуры

#Область Свойства

// См. УправлениеСвойствамиПереопределяемый.ПриПолученииПредопределенныхНаборовСвойств.
Процедура ПриПолученииПредопределенныхНаборовСвойств(Наборы) Экспорт
	
	УправлениеСвойствамиБЗК.ЗарегистрироватьНаборСвойств(Наборы, "d42dbffd-9802-11e9-80cd-4cedfb43b11a", Метаданные.Документы.ДивидендыФизическимЛицам);
	
КонецПроцедуры

#КонецОбласти

#Область УправлениеДоступом

// См. УправлениеДоступомПереопределяемый.ПриЗаполненииСписковСОграничениемДоступа.
Процедура ПриЗаполненииСписковСОграничениемДоступа(Списки) Экспорт
	
	Списки.Вставить(Метаданные.Документы.ДивидендыФизическимЛицам, Истина);
	Списки.Вставить(Метаданные.Справочники.ДивидендыФизическимЛицамПрисоединенныеФайлы, Истина);
	
КонецПроцедуры

#КонецОбласти

// Определяет объекты, в которых есть процедура ДобавитьКомандыПечати().
// Подробнее см. УправлениеПечатьюПереопределяемый.
//
// Параметры:
//  СписокОбъектов - Массив - список менеджеров объектов.
//
Процедура ПриОпределенииОбъектовСКомандамиПечати(СписокОбъектов) Экспорт
	
	СписокОбъектов.Добавить(Документы.ДивидендыФизическимЛицам);
	
КонецПроцедуры

// Проверяет наличие записей в регистре взаиморасчетов с контрагентами,
// зарегистрированных документом ДивидендыФизическимЛицам.
//
//	Возвращаемое значение - тип Булево, Истина, если в регистре есть записи
//
Функция НельзяВыключитьИспользованиеВедомостей() Экспорт

	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	Взаиморасчеты.НомерСтроки
	|ИЗ
	|	РегистрНакопления.ВзаиморасчетыСКонтрагентамиАкционерами КАК Взаиморасчеты
	|ГДЕ
	|	Взаиморасчеты.Регистратор ССЫЛКА Документ.ДивидендыФизическимЛицам";
	РезультатЗапроса = Запрос.Выполнить();
	
	Возврат Не РезультатЗапроса.Пустой();

КонецФункции 

////////////////////////////////////////////////////////////////////////////////
// Обслуживание обработки ПлатежиПоРезультатамРасчетаЗарплаты.

// Возвращает список проведенных документов ДивидендыФизическимЛицам, зарегистрировавших выплату.
//
// Параметры:
//		Организации - Массив - содержит ссылки на организации (СправочникСсылка.Организации)
//								по которым получается список документов.
//		МесяцНачисления - Дата 
//		ШаблонСпискаВедомостей - ТаблицаЗначений, пустая таблица, используется как шаблон для выходных данных.
//
// Возвращаемое значение: Таблица значений с колонками
//			* Организация 		- СправочникСсылка.Организации
//			* СпособВыплаты 	- ПеречислениеСсылка.СпособыВыплатыПрочихДоходов.Дивиденды
//			* Сумма 			- Число
//			* Ведомость 		- Строка
//
Функция ВыплатыДивидендовЗаМесяцДляПлатежейПоРезультатамРасчета(Организации, МесяцНачисления, ШаблонСпискаВедомостей) Экспорт

	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Организации", Организации);
	Запрос.УстановитьПараметр("ПериодРегистрации", МесяцНачисления);
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	Дивиденды.Организация КАК Организация,
	|	ПРЕДСТАВЛЕНИЕ(Дивиденды.Ссылка) КАК Ведомость,
	|	ЗНАЧЕНИЕ(Перечисление.СпособыВыплатыПрочихДоходов.Дивиденды) КАК СпособВыплаты,
	|	Дивиденды.ВсегоВыплачено КАК Сумма,
	|	Дивиденды.Дата КАК Дата,
	|	Дивиденды.Ссылка КАК Ссылка
	|ИЗ
	|	Документ.ДивидендыФизическимЛицам КАК Дивиденды
	|ГДЕ
	|	Дивиденды.Организация В(&Организации)
	|	И Дивиденды.ПериодРегистрации = &ПериодРегистрации
	|	И Дивиденды.Проведен
	|	И НЕ Дивиденды.РегистрироватьВыплатуВедомостью
	|
	|УПОРЯДОЧИТЬ ПО
	|	Организация,
	|	Дата,
	|	Ссылка";
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыплатыПрочихДоходов = ШаблонСпискаВедомостей.СкопироватьКолонки();
	Выборка = РезультатЗапроса.Выбрать();
	Пока Выборка.Следующий() Цикл
		ЗаполнитьЗначенияСвойств(ВыплатыПрочихДоходов.Добавить(), Выборка);
	КонецЦикла;
	
	Возврат ВыплатыПрочихДоходов;

КонецФункции

#Область ОбменДанными

Процедура ДополнитьОбъектыИзмененияОрганизацийФизическихЛиц(МассивОбъектов) Экспорт
	МассивОбъектов.Добавить(Метаданные.Документы.ДивидендыФизическимЛицам);
КонецПроцедуры

Процедура ПриЗаполненииТаблицыОбъектовРегистрирующихЗависимыеОбъекты(ДанныеРегистрации) Экспорт
	
	// Метаданные.Документы.ДивидендыФизическимЛицам
	НоваяСтрока = ДанныеРегистрации.Добавить();
	НоваяСтрока.ВедущиеМетаданные = Метаданные.Документы.ДивидендыФизическимЛицам;
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// Обновление ИБ

Процедура ПроставитьОснованияПоУдержанномуНДФЛ(ПараметрыОбновления = Неопределено) Экспорт

	Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ ПЕРВЫЕ 1000
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Регистратор КАК Регистратор
	|ПОМЕСТИТЬ ВТРегистраторы
	|ИЗ
	|	РегистрНакопления.РасчетыНалогоплательщиковСБюджетомПоНДФЛ КАК РасчетыНалогоплательщиковСБюджетомПоНДФЛ
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ДивидендыФизическимЛицам КАК ДивидендыФизическимЛицам
	|		ПО РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Регистратор = ДивидендыФизическимЛицам.Ссылка
	|ГДЕ
	|	ДивидендыФизическимЛицам.Ссылка ЕСТЬ НЕ NULL 
	|	И РасчетыНалогоплательщиковСБюджетомПоНДФЛ.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|	И РасчетыНалогоплательщиковСБюджетомПоНДФЛ.ВариантУдержания = ЗНАЧЕНИЕ(Перечисление.ВариантыУдержанияНДФЛ.Удержано)
	|	И РасчетыНалогоплательщиковСБюджетомПоНДФЛ.ДокументОснование <> РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Регистратор
	|	И РасчетыНалогоплательщиковСБюджетомПоНДФЛ.МесяцНалоговогоПериода >= ДАТАВРЕМЯ(2019, 1, 1, 0, 0, 0)
	|	И РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Период >= ДАТАВРЕМЯ(2018, 1, 1, 0, 0, 0)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Регистратор КАК Регистратор,
	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.НомерСтроки КАК НомерСтроки,
	|	ВЫБОР
	|		КОГДА РасчетыНалогоплательщиковСБюджетомПоНДФЛ.ВариантУдержания = ЗНАЧЕНИЕ(Перечисление.ВариантыУдержанияНДФЛ.Удержано)
	|				И РасчетыНалогоплательщиковСБюджетомПоНДФЛ.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|				И РасчетыНалогоплательщиковСБюджетомПоНДФЛ.ДокументОснование = НЕОПРЕДЕЛЕНО
	|			ТОГДА РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Регистратор
	|		ИНАЧЕ РасчетыНалогоплательщиковСБюджетомПоНДФЛ.ДокументОснование
	|	КОНЕЦ КАК ДокументОснование,
	|	*
	|ИЗ
	|	РегистрНакопления.РасчетыНалогоплательщиковСБюджетомПоНДФЛ КАК РасчетыНалогоплательщиковСБюджетомПоНДФЛ
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТРегистраторы КАК Регистраторы
	|		ПО РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Регистратор = Регистраторы.Регистратор
	|
	|УПОРЯДОЧИТЬ ПО
	|	Регистратор,
	|	НомерСтроки";
	
	УчетНДФЛ.ОбработатьНаборыЗаписейРегистраНакопления("РасчетыНалогоплательщиковСБюджетомПоНДФЛ", Текст, , , ПараметрыОбновления)

КонецПроцедуры

Процедура ЗаполнитьРеквизитПеречислениеНДФЛВыполнено(ПараметрыОбновления = Неопределено) Экспорт

	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ДивидендыФизическимЛицам.Ссылка КАК Ссылка
	|ИЗ
	|	Документ.ДивидендыФизическимЛицам КАК ДивидендыФизическимЛицам
	|ГДЕ
	|	ДивидендыФизическимЛицам.ДатаПлатежаНДФЛ <> ДАТАВРЕМЯ(1, 1, 1)
	|	И НЕ ДивидендыФизическимЛицам.ПеречислениеНДФЛВыполнено";
		
	РезультатЗапроса = Запрос.Выполнить();
	
	ОбновлениеИнформационнойБазыЗарплатаКадрыБазовый.УстановитьПараметрОбновления(ПараметрыОбновления, "ОбработкаЗавершена", Ложь);
	Если РезультатЗапроса.Пустой() Тогда
		ОбновлениеИнформационнойБазыЗарплатаКадрыБазовый.УстановитьПараметрОбновления(ПараметрыОбновления, "ОбработкаЗавершена", Истина);
		Возврат;
	КонецЕсли;
	
	Выборка = РезультатЗапроса.Выбрать();
	Пока Выборка.Следующий() Цикл
		
		Если Не ОбновлениеИнформационнойБазыЗарплатаКадрыБазовый.ПодготовитьОбновлениеДанных(ПараметрыОбновления, "Документ.ДивидендыФизическимЛицам", "Ссылка", Выборка.Ссылка) Тогда
			Продолжить;
		КонецЕсли;
		
		ДокументОбъект = Выборка.Ссылка.ПолучитьОбъект();
		ДокументОбъект.ПеречислениеНДФЛВыполнено = Истина;
		
		ОбновлениеИнформационнойБазы.ЗаписатьОбъект(ДокументОбъект);
		ОбновлениеИнформационнойБазыЗарплатаКадрыБазовый.ЗавершитьОбновлениеДанных(ПараметрыОбновления);
		
	КонецЦикла;


КонецПроцедуры

#КонецОбласти