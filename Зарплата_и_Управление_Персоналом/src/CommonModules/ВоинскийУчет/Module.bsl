
#Область СлужебныеПроцедурыИФункции

Процедура ЗарегистрироватьОбработчикиОбновления(Обработчики) Экспорт

	Обработчик = Обработчики.Добавить();
	Обработчик.Версия = "3.1.7.2";
	Обработчик.Процедура = "ВоинскийУчет.ЗаполнитьСоставСотрудниковДокументовВоинскогоУчета";
	Обработчик.РежимВыполнения = ОбновлениеИнформационнойБазыЗарплатаКадрыБазовый.ОсновнойРежимВыполненияОбновления();
	Обработчик.Идентификатор = Новый УникальныйИдентификатор("edb60159-bd79-417c-9544-b72374ec548b");
	Обработчик.Комментарий = НСтр("ru = 'Заполнение регистра Физические лица документов.'");
	
КонецПроцедуры

Процедура ЗаполнитьСоставСотрудниковДокументовВоинскогоУчета(ПараметрыОбновления = Неопределено) Экспорт
	
	ТипыДокументовФизическихЛиц = Новый Массив;
	ТипыДокументовФизическихЛиц.Добавить(Тип("ДокументСсылка.БронированиеГражданПребывающихВЗапасе"));
	ТипыДокументовФизическихЛиц.Добавить(Тип("ДокументСсылка.ОтменаБронированияГражданПребывающихВЗапасе"));
	ТипыДокументовФизическихЛиц.Добавить(Тип("ДокументСсылка.ХодатайствоОБронированииГражданПребывающихВЗапасе"));
	
	Пока Истина Цикл
		
		КоличествоКОбработке = 1000;
		Запрос = Новый Запрос;
		ЧастиЗапроса = Новый Массив;
		МассивДокументов = Новый Массив;
		
		Для Каждого ТипДокумента Из ТипыДокументовФизическихЛиц Цикл
			
			Если КоличествоКОбработке <= 0 Тогда
				Прервать;
			КонецЕсли;
			
			Документ = Метаданные.НайтиПоТипу(ТипДокумента);
			
			ОписаниеДокумента = Документы[Документ.Имя].ОписаниеСоставаОбъекта();
			
			Запрос = Новый Запрос;
			Запрос.Текст = ЗапросДокументовКОбработке(Документ.Имя, ОписаниеДокумента, КоличествоКОбработке);
			Результат = Запрос.Выполнить();
			Если Результат.Пустой() Тогда
				Продолжить;
			КонецЕсли;
			
			ДокументыКОбработке = Результат.Выгрузить().ВыгрузитьКолонку("Ссылка");
			ОбщегоНазначенияКлиентСервер.ДополнитьМассив(МассивДокументов, ДокументыКОбработке);
			КоличествоКОбработке = КоличествоКОбработке - ДокументыКОбработке.Количество();
			ОбщегоНазначенияКлиентСервер.ДополнитьМассив(ЧастиЗапроса, ЧастиЗапросаПоТаблицамДокумента(Документ.Имя, ОписаниеДокумента));
			
		КонецЦикла;
		
		Если МассивДокументов.Количество() = 0 Тогда
			ОбновлениеИнформационнойБазыЗарплатаКадрыБазовый.УстановитьПараметрОбновления(ПараметрыОбновления, "ОбработкаЗавершена", Истина);
			Возврат;
		Иначе
			ОбновлениеИнформационнойБазыЗарплатаКадрыБазовый.УстановитьПараметрОбновления(ПараметрыОбновления, "ОбработкаЗавершена", Ложь);
		КонецЕсли;
		
		Разделитель = "
			|ОБЪЕДИНИТЬ
			|";
		Запрос = Новый Запрос;
		Запрос.Текст = СтрСоединить(ЧастиЗапроса, Разделитель);
		Запрос.Текст = Запрос.Текст + "
			|УПОРЯДОЧИТЬ ПО
			|	ДокументФизическогоЛица";
		Запрос.УстановитьПараметр("МассивДокументов", МассивДокументов);
		
		Результат = Запрос.Выполнить();
		Выборка = Результат.Выбрать();
		
		Пока Выборка.СледующийПоЗначениюПоля("ДокументФизическогоЛица") Цикл
				
			НаборЗаписейФизическиеЛицаДокумента = РегистрыСведений.ФизическиеЛицаДокументов.СоздатьНаборЗаписей();
			ФизическиеЛицаОграниченияДоступа = Новый Соответствие;
			
			Пока Выборка.Следующий() Цикл
				
				Если Не ЗначениеЗаполнено(Выборка.Сотрудник)
					И Не ЗначениеЗаполнено(Выборка.ФизическоеЛицо) Тогда
					
					Продолжить;
				КонецЕсли;
				
				Если Выборка.ИспользоватьОграничениеДоступа 
					И ФизическиеЛицаОграниченияДоступа[Выборка.ФизическоеЛицо] = Неопределено Тогда
					
					ЗаполнитьЗначенияСвойств(НаборЗаписейФизическиеЛицаДокумента.Добавить(), Выборка);
					ФизическиеЛицаОграниченияДоступа.Вставить(Выборка.ФизическоеЛицо, Истина);
				КонецЕсли;
				
			КонецЦикла;
			
			Если НаборЗаписейФизическиеЛицаДокумента.Количество() > 0 Тогда
				НаборЗаписейФизическиеЛицаДокумента.Отбор.ДокументФизическогоЛица.Установить(Выборка.ДокументФизическогоЛица);
				ОбновлениеИнформационнойБазы.ЗаписатьДанные(НаборЗаписейФизическиеЛицаДокумента);
			КонецЕсли;
			
		КонецЦикла;
		
		Если ПараметрыОбновления <> Неопределено Тогда
			Возврат;
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

Функция ЗапросДокументовКОбработке(ИмяДокумента, ОписаниеДокумента, КоличествоКОбработке)
	
	ТекстЗапросаДокументов = 
		"ВЫБРАТЬ
		|	ДокументФизическихЛиц.Ссылка
		|ПОМЕСТИТЬ ПустыеДокументы
		|ИЗ
		|	#ДокументФизическихЛиц КАК ДокументФизическихЛиц
		|ГДЕ
		|	&УсловиеПустыхФизическихЛиц
		|;
		|/////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ ПЕРВЫЕ 1000
		|	ДокументКОбработке.Ссылка
		|ИЗ
		|	#ДокументФизическихЛиц КАК ДокументКОбработке
		|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ФизическиеЛицаДокументов КАК ФизическиеЛицаДокументов
		|		ПО ДокументКОбработке.Ссылка = ФизическиеЛицаДокументов.ДокументФизическогоЛица
		|	ЛЕВОЕ СОЕДИНЕНИЕ ПустыеДокументы КАК ПустыеДокументы
		|		ПО ДокументКОбработке.Ссылка = ПустыеДокументы.Ссылка
		|ГДЕ
		|	ФизическиеЛицаДокументов.ДокументФизическогоЛица ЕСТЬ NULL
		|	И ПустыеДокументы.Ссылка ЕСТЬ NULL";
		
	
	ТекстЗапросаДокументов = СтрЗаменить(ТекстЗапросаДокументов, "ПЕРВЫЕ 1000", "ПЕРВЫЕ " + Формат(КоличествоКОбработке, "ЧГ=0"));
	ТекстЗапросаДокументов = СтрЗаменить(ТекстЗапросаДокументов, "#ДокументФизическихЛиц", "Документ." + ИмяДокумента);
	УсловиеТаблицы = "
		|	НЕ 1 В
		|			(ВЫБРАТЬ ПЕРВЫЕ 1
		|				1
		|			ИЗ
		|				#ТаблицаДокумент КАК ТаблицаДокумент
		|			ГДЕ
		|				ТаблицаДокумент.Ссылка = ДокументФизическихЛиц.Ссылка
		|				И _ПолеФизическоеЛицо <> ЗНАЧЕНИЕ(Справочник.ФизическиеЛица.ПустаяСсылка))";
	
	Разделитель = "
		|	И ";
	ЧастиЗапроса = ЧастиЗапросаПоШаблонуОписаниюДокумента(УсловиеТаблицы, ИмяДокумента, ОписаниеДокумента);
	УсловиеПустыхФизическихЛиц = СтрСоединить(ЧастиЗапроса, Разделитель);
	ТекстЗапросаДокументов = СтрЗаменить(ТекстЗапросаДокументов, "&УсловиеПустыхФизическихЛиц", УсловиеПустыхФизическихЛиц);
	
	Возврат ТекстЗапросаДокументов;
	
КонецФункции
	
Функция ЧастиЗапросаПоТаблицамДокумента(ИмяДокумента, ОписаниеДокумента)
	
	ТекстШаблонаЗапроса = 
		"ВЫБРАТЬ
		|	ТаблицаДокумент.Ссылка КАК ДокументФизическогоЛица,
		|	_ПолеСотрудник КАК Сотрудник,
		|	_ПолеГоловнойСотрудник КАК ГоловнойСотрудник,
		|	_ПолеФизическоеЛицо КАК ФизическоеЛицо,
		|	_ЗаполнятьСоставДокументов КАК ЗаполнятьСоставДокументов,
		|	_ИспользоватьОграничениеДоступа КАК ИспользоватьОграничениеДоступа
		|ИЗ
		|	#ТаблицаДокумент КАК ТаблицаДокумент
		|ГДЕ
		|	ТаблицаДокумент.Ссылка В (&МассивДокументов)";
	
	Возврат ЧастиЗапросаПоШаблонуОписаниюДокумента(ТекстШаблонаЗапроса, ИмяДокумента, ОписаниеДокумента);
	
КонецФункции

Функция ЧастиЗапросаПоШаблонуОписаниюДокумента(ШаблонЧастиЗапроса, ИмяДокумента, ОписаниеДокумента)
	
	ЧастиЗапроса = Новый Массив;
	Для Каждого ОписаниеСостава Из ОписаниеДокумента.ОписаниеХраненияСотрудниковФизическихЛиц Цикл
		
		ТекстЧастиЗапроса = ШаблонЧастиЗапроса;
		ИмяТаблицыДокумента = ИмяДокумента;
		Если ОписаниеСостава.ИмяТаблицы <> Неопределено Тогда
			ИмяТаблицыДокумента = ИмяТаблицыДокумента + "." + ОписаниеСостава.ИмяТаблицы;
		КонецЕсли;
		ТекстЧастиЗапроса = СтрЗаменить(ТекстЧастиЗапроса, "#ТаблицаДокумент", "Документ." + ИмяТаблицыДокумента);
		
		Если ОписаниеСостава.ПолеФизическоеЛицо <> Неопределено Тогда
			ТекстЧастиЗапроса = СтрЗаменить(ТекстЧастиЗапроса, "_ПолеФизическоеЛицо", "ТаблицаДокумент." + ОписаниеСостава.ПолеФизическоеЛицо);
		ИначеЕсли ОписаниеСостава.ПолеСотрудник <> Неопределено Тогда
			ТекстЧастиЗапроса = СтрЗаменить(ТекстЧастиЗапроса, "_ПолеФизическоеЛицо", "ТаблицаДокумент." + ОписаниеСостава.ПолеСотрудник + ".ФизическоеЛицо");
		Иначе
			ТекстЧастиЗапроса = СтрЗаменить(ТекстЧастиЗапроса, "_ПолеФизическоеЛицо", "НЕОПРЕДЕЛЕНО");
		КонецЕсли;
		
		Если ОписаниеСостава.ПолеСотрудник <> Неопределено Тогда
			ТекстЧастиЗапроса = СтрЗаменить(ТекстЧастиЗапроса, "_ПолеСотрудник", "ТаблицаДокумент." + ОписаниеСостава.ПолеСотрудник);
			ТекстЧастиЗапроса = СтрЗаменить(ТекстЧастиЗапроса, "_ПолеГоловнойСотрудник", "ТаблицаДокумент." + ОписаниеСостава.ПолеСотрудник + ".ГоловнойСотрудник");
		Иначе
			ТекстЧастиЗапроса = СтрЗаменить(ТекстЧастиЗапроса, "_ПолеСотрудник", "НЕОПРЕДЕЛЕНО");
			ТекстЧастиЗапроса = СтрЗаменить(ТекстЧастиЗапроса, "_ПолеГоловнойСотрудник", "НЕОПРЕДЕЛЕНО");
		КонецЕсли;
		
		Если ОписаниеДокумента.ЗаполнятьСоставДокументов Тогда
			ТекстЧастиЗапроса = СтрЗаменить(ТекстЧастиЗапроса, "_ЗаполнятьСоставДокументов", "ИСТИНА");
		Иначе
			ТекстЧастиЗапроса = СтрЗаменить(ТекстЧастиЗапроса, "_ЗаполнятьСоставДокументов", "ЛОЖЬ");
		КонецЕсли;
		
		Если ОписаниеДокумента.ИспользоватьОграничениеДоступа Тогда
			ТекстЧастиЗапроса = СтрЗаменить(ТекстЧастиЗапроса, "_ИспользоватьОграничениеДоступа", "ИСТИНА");
		Иначе
			ТекстЧастиЗапроса = СтрЗаменить(ТекстЧастиЗапроса, "_ИспользоватьОграничениеДоступа", "ЛОЖЬ");
		КонецЕсли;
		
		ЧастиЗапроса.Добавить(ТекстЧастиЗапроса);
		
	КонецЦикла;
	
	Возврат ЧастиЗапроса;
	
КонецФункции

#КонецОбласти
