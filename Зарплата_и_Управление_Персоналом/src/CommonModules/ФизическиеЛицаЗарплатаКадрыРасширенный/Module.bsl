////////////////////////////////////////////////////////////////////////////////
// ФизическиеЛицаЗарплатаКадры: методы, дополняющие функциональность справочника
// 		ФизическиеЛица.
////////////////////////////////////////////////////////////////////////////////

#Область СлужебныйПрограммныйИнтерфейс

// Определяет пользователя для физического лица.
// 
// Параметры:
// 	ФизическоеЛицо - СправочникСсылка.ФизическиеЛица
// 	
// Возвращаемое значение:
// 	СправочникСсылка.Пользователи, Неопределено - пользователь.
//
Функция ПользовательФизическогоЛица(ФизическоеЛицо) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ФизическоеЛицо", ФизическоеЛицо);
	Запрос.Текст = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ ПЕРВЫЕ 1
		|	Пользователи.Ссылка КАК Ссылка,
		|	ВЫБОР
		|		КОГДА Пользователи.Недействителен
		|				ИЛИ Пользователи.Служебный
		|			ТОГДА 2
		|		ИНАЧЕ 1
		|	КОНЕЦ КАК Приоритет
		|ИЗ
		|	Справочник.Пользователи КАК Пользователи
		|ГДЕ
		|	Пользователи.ФизическоеЛицо = &ФизическоеЛицо
		|
		|УПОРЯДОЧИТЬ ПО
		|	Приоритет";
	
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		Возврат Выборка.Ссылка;
	КонецЕсли;
	
	Возврат Неопределено;
	
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура ОбработкаПолученияФормы(ВидФормы, Параметры, ВыбраннаяФорма, ДополнительнаяИнформация, СтандартнаяОбработка) Экспорт
	
	ФизическиеЛицаЗарплатаКадрыРасширенныйПереопределяемый.ОбработкаПолученияФормыСправочникаФизическиеЛица(ВидФормы, Параметры, ВыбраннаяФорма, ДополнительнаяИнформация, СтандартнаяОбработка);
	
	Если Не СтандартнаяОбработка Тогда 
		Возврат;
	КонецЕсли;
	
	Если ВидФормы = "ФормаВыбора" Тогда
		
		Если Параметры.Свойство("Отбор") Тогда
			
			Если Параметры.Отбор.Свойство("Роль")
				И (Параметры.Отбор.Свойство("Организация")
					Или Параметры.Отбор.Свойство("ГоловнаяОрганизация")) Тогда
				
				Если Параметры.Отбор.Свойство("Организация") И ТипЗнч(Параметры.Отбор.Организация) = Тип("СправочникСсылка.Организации")
					Или Параметры.Отбор.Свойство("ГоловнаяОрганизация") И ТипЗнч(Параметры.Отбор.ГоловнаяОрганизация) = Тип("СправочникСсылка.Организации") Тогда
					
					СтандартнаяОбработка = Ложь;
					ВыбраннаяФорма = "ФормаВыбораПоРоли";
					Возврат;
					
				КонецЕсли;
				
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЕсли;
	
	ФизическиеЛицаЗарплатаКадрыБазовый.ОбработкаПолученияФормы(ВидФормы, Параметры, ВыбраннаяФорма, ДополнительнаяИнформация, СтандартнаяОбработка);
	
КонецПроцедуры

Функция ПредставлениеРолиВоМножественномЧисле(Роль) Экспорт
	Если Роль = Перечисления.РолиФизическихЛиц.Акционер Тогда
		Возврат НСтр("ru = 'Акционеры'");
	ИначеЕсли Роль = Перечисления.РолиФизическихЛиц.Сотрудник Тогда
		Возврат НСтр("ru = 'Сотрудники'");
	ИначеЕсли Роль = Перечисления.РолиФизическихЛиц.БывшийСотрудник Тогда
		Возврат НСтр("ru = 'Бывшие сотрудники'");
	ИначеЕсли Роль = Перечисления.РолиФизическихЛиц.ПрочийПолучательДоходов Тогда
		Возврат НСтр("ru = 'Прочие получатели доходов'");
	ИначеЕсли Роль = Перечисления.РолиФизическихЛиц.РаздатчикЗарплаты Тогда
		Возврат НСтр("ru = 'Раздатчики зарплаты'");
	Иначе
		Возврат "" + Роль;
	КонецЕсли;
		
КонецФункции

Функция ПредставлениеРолиВРодительномПадеже(Роль) Экспорт
	Если Роль = Перечисления.РолиФизическихЛиц.Акционер Тогда
		Возврат НСтр("ru = 'акционера'");
	ИначеЕсли Роль = Перечисления.РолиФизическихЛиц.Сотрудник Тогда
		Возврат НСтр("ru = 'сотрудника'");
	ИначеЕсли Роль = Перечисления.РолиФизическихЛиц.БывшийСотрудник Тогда
		Возврат НСтр("ru = 'бывшего сотрудника'");
	ИначеЕсли Роль = Перечисления.РолиФизическихЛиц.ПрочийПолучательДоходов Тогда
		Возврат НСтр("ru = 'прочего получателя доходов'");
	ИначеЕсли Роль = Перечисления.РолиФизическихЛиц.РаздатчикЗарплаты Тогда
		Возврат НСтр("ru = 'раздатчика зарплаты'");
	Иначе
		Возврат "" + Роль;
	КонецЕсли;
		
КонецФункции

Процедура ОбработкаПолученияДанныхВыбора(ДанныеВыбора, Параметры, СтандартнаяОбработка) Экспорт
	
	Перем Организация;
	Перем Подразделение;
	Перем РольФизическогоЛица;
	
	Параметры.Отбор.Свойство("Организация", Организация);
	Параметры.Отбор.Свойство("Подразделение", Подразделение);
	Параметры.Отбор.Свойство("Роль", РольФизическогоЛица);
	
	Если Не Параметры.Свойство("ВыборГруппИЭлементов")
		Или Не ЗначениеЗаполнено(Параметры.ВыборГруппИЭлементов) Тогда
		
		ВыборГруппИЭлементов = ИспользованиеГруппИЭлементов.ГруппыИЭлементы;
		
	Иначе
		ВыборГруппИЭлементов = Параметры.ВыборГруппИЭлементов;
	КонецЕсли;
	
	Если Параметры.Свойство("СтрокаПоиска") 
		И НЕ ПустаяСтрока(Параметры.СтрокаПоиска) Тогда
		
		Запрос = Новый Запрос;
		Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
		
		Запрос.УстановитьПараметр("СтрокаПоиска", Параметры.СтрокаПоиска + "%");
		
		Если КадровыйУчетРасширенный.НастройкиКадровогоУчета().ВПоляхВводаСотрудниковУчитыватьИзмененияФамилии Тогда
			
			УстановитьПривилегированныйРежим(Истина);
			ФизическиеЛицаЗарплатаКадры.СоздатьВТПрежниеФИО(Запрос.МенеджерВременныхТаблиц, Ложь, Параметры.СтрокаПоиска);
			УстановитьПривилегированныйРежим(Ложь);
			
			Запрос.Текст =
				"ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
				|	ПрежниеФИО.ФИО + ВЫБОР
				|		КОГДА ФизическиеЛица.УточнениеНаименования = """"
				|			ТОГДА """"
				|		ИНАЧЕ "" "" + ФизическиеЛица.УточнениеНаименования
				|	КОНЕЦ КАК ФИО,
				|	ФизическиеЛица.Наименование КАК ФИОТекущее,
				|	ПрежниеФИО.ФизическоеЛицо КАК ФизическоеЛицо,
				|	МАКСИМУМ(ПрежниеФИО.Период) КАК Период,
				|	ФизическиеЛица.Код КАК Код,
				|	ФизическиеЛица.Фамилия КАК Фамилия,
				|	ФизическиеЛица.Имя КАК Имя,
				|	ФизическиеЛица.Отчество КАК Отчество,
				|	ФизическиеЛица.Инициалы КАК Инициалы,
				|	ЛОЖЬ КАК ЭтоГруппа
				|ПОМЕСТИТЬ ВТВсеСовпадения
				|ИЗ
				|	ВТПрежниеФИО КАК ПрежниеФИО
				|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ФизическиеЛица КАК ФизическиеЛица
				|		ПО ПрежниеФИО.ФизическоеЛицо = ФизическиеЛица.Ссылка
				|			И (НЕ ФизическиеЛица.ЭтоГруппа)
				|
				|СГРУППИРОВАТЬ ПО
				|	ПрежниеФИО.ФИО,
				|	ПрежниеФИО.ФизическоеЛицо,
				|	ФизическиеЛица.Наименование,
				|	ФизическиеЛица.Код,
				|	ФизическиеЛица.Фамилия,
				|	ФизическиеЛица.Имя,
				|	ФизическиеЛица.Отчество,
				|	ФизическиеЛица.Инициалы,
				|	ФизическиеЛица.УточнениеНаименования
				|
				|ОБЪЕДИНИТЬ ВСЕ
				|
				|ВЫБРАТЬ
				|	ФизическиеЛица.Наименование,
				|	ФизическиеЛица.Наименование,
				|	ФизическиеЛица.Ссылка,
				|	NULL,
				|	ФизическиеЛица.Код,
				|	ФизическиеЛица.Фамилия,
				|	ФизическиеЛица.Имя,
				|	ФизическиеЛица.Отчество,
				|	ФизическиеЛица.Инициалы,
				|	ФизическиеЛица.ЭтоГруппа
				|ИЗ
				|	Справочник.ФизическиеЛица КАК ФизическиеЛица
				|		ЛЕВОЕ СОЕДИНЕНИЕ ВТПрежниеФИО КАК ПрежниеФИО
				|		ПО ФизическиеЛица.Ссылка = ПрежниеФИО.ФизическоеЛицо
				|ГДЕ
				|	ПрежниеФИО.ФизическоеЛицо ЕСТЬ NULL
				|	И ФизическиеЛица.Наименование ПОДОБНО &СтрокаПоиска
				|	И НЕ ФизическиеЛица.ЭтоГруппа
				|;
				|
				|////////////////////////////////////////////////////////////////////////////////
				|ВЫБРАТЬ РАЗЛИЧНЫЕ
				|	ВсеСовпадения.ФИО КАК ФИО,
				|	ВсеСовпадения.ФИОТекущее КАК ФИОТекущее,
				|	ВсеСовпадения.ФизическоеЛицо КАК ФизическоеЛицо,
				|	ВсеСовпадения.Период КАК Период,
				|	ВсеСовпадения.Код КАК Код,
				|	ВсеСовпадения.Фамилия КАК Фамилия,
				|	ВсеСовпадения.Имя КАК Имя,
				|	ВсеСовпадения.Отчество КАК Отчество,
				|	ВсеСовпадения.Инициалы КАК Инициалы,
				|	ВсеСовпадения.ЭтоГруппа КАК ЭтоГруппа
				|ИЗ
				|	ВТВсеСовпадения КАК ВсеСовпадения
				|
				|УПОРЯДОЧИТЬ ПО
				|	ФИО";
			
		Иначе
			
			Запрос.Текст =
				"ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
				|	ФизическиеЛица.Наименование КАК ФИО,
				|	ФизическиеЛица.Наименование КАК ФИОТекущее,
				|	ФизическиеЛица.Ссылка КАК ФизическоеЛицо,
				|	NULL КАК Период,
				|	ФизическиеЛица.Код КАК Код,
				|	ФизическиеЛица.Фамилия КАК Фамилия,
				|	ФизическиеЛица.Имя КАК Имя,
				|	ФизическиеЛица.Отчество КАК Отчество,
				|	ФизическиеЛица.Инициалы КАК Инициалы,
				|	ФизическиеЛица.ЭтоГруппа КАК ЭтоГруппа
				|ИЗ
				|	Справочник.ФизическиеЛица КАК ФизическиеЛица
				|ГДЕ
				|	ФизическиеЛица.Наименование ПОДОБНО &СтрокаПоиска
				|	И НЕ ФизическиеЛица.ЭтоГруппа
				|
				|УПОРЯДОЧИТЬ ПО
				|	ФИО";
			
		КонецЕсли;
		
		Если ВыборГруппИЭлементов <> ИспользованиеГруппИЭлементов.Элементы Тогда
			Запрос.Текст = СтрЗаменить(Запрос.Текст, "И НЕ ФизическиеЛица.ЭтоГруппа", "");
		КонецЕсли;
		
		РезультатЗапроса = Запрос.Выполнить();
		Если Не РезультатЗапроса.Пустой() Тогда
			
			ДанныеВыбора = Новый СписокЗначений;
			СтандартнаяОбработка = Ложь;
			ДлинаСтрокиПоиска = СтрДлина(Параметры.СтрокаПоиска);
			
			Выборка = РезультатЗапроса.Выбрать();
			Пока Выборка.Следующий() Цикл
				
				Представление = Новый ФорматированнаяСтрока(
					Новый ФорматированнаяСтрока(
						Лев(Выборка.ФИО, ДлинаСтрокиПоиска),
						Новый Шрифт( , , Истина),
						WebЦвета.Зеленый),
					Сред(Выборка.ФИО, ДлинаСтрокиПоиска + 1));
					
				Если Не Выборка.ЭтоГруппа И ЗначениеЗаполнено(Выборка.Период) Тогда
					
					Если ЗначениеЗаполнено(Выборка.Фамилия) Тогда
						ФИОТекущее = Новый Структура("Фамилия,Имя,Отчество,Инициалы");
						ЗаполнитьЗначенияСвойств(ФИОТекущее, Выборка);
					Иначе
						ФИОТекущее = Выборка.ФИОТекущее;
					КонецЕсли;
					
					Представление = Новый ФорматированнаяСтрока(
						Представление,
						" (" + ФизическиеЛицаЗарплатаКадрыКлиентСервер.ФамилияИнициалы(ФИОТекущее) + " " 
							+ НСтр("ru='с'") + " " + Формат(Выборка.Период, "ДЛФ=D") + " (" + Выборка.Код + "))");
							
				Иначе
					
					Представление = Новый ФорматированнаяСтрока(
						Представление,
						" (" + Выборка.Код + ")");
					
				КонецЕсли;
				
				ДанныеВыбора.Добавить(Выборка.ФизическоеЛицо, Представление);
				
			КонецЦикла;
			
		КонецЕсли;
		
	КонецЕсли;
	
	Если РольФизическогоЛица = Неопределено
		И Организация = Неопределено
		И Подразделение = Неопределено Тогда
		
		ФизическиеЛицаЗарплатаКадрыБазовый.ОбработкаПолученияДанныхВыбора(ДанныеВыбора, Параметры, СтандартнаяОбработка);
		
	ИначеЕсли РольФизическогоЛица = Неопределено
		И (Организация <> Неопределено Или Подразделение <> Неопределено) Тогда
		
		Запрос = Новый Запрос;
		
		ДатаНачалаОтбора = Неопределено;
		ДатаОкончанияОтбора = Неопределено;
		
		Если Параметры.Отбор.Свойство("ДатаПримененияОтбора") Тогда
			
			Если ЗначениеЗаполнено(Параметры.Отбор.ДатаПримененияОтбора) Тогда
				
				ДатаНачалаОтбора = НачалоДня(Параметры.Отбор.ДатаПримененияОтбора);
				ДатаОкончанияОтбора = КонецДня(Параметры.Отбор.ДатаПримененияОтбора);
				
			КонецЕсли;
			
			Параметры.Отбор.Удалить("ДатаПримененияОтбора");
			
		КонецЕсли;
		
		Если НЕ ЗначениеЗаполнено(ДатаНачалаОтбора) И Параметры.Отбор.Свойство("МесяцПримененияОтбора") Тогда
			
			Если ЗначениеЗаполнено(Параметры.Отбор.МесяцПримененияОтбора) Тогда
				
				ДатаНачалаОтбора = НачалоМесяца(Параметры.Отбор.МесяцПримененияОтбора);
				ДатаОкончанияОтбора = КонецМесяца(Параметры.Отбор.МесяцПримененияОтбора);
				
			КонецЕсли;
			
			Параметры.Отбор.Удалить("МесяцПримененияОтбора");
			
		КонецЕсли;
		
		Запрос.УстановитьПараметр("МаксимальнаяДатаНачалоДня", НачалоДня(ЗарплатаКадрыПериодическиеРегистры.МаксимальнаяДата()));
		
		ЗапросТекст =
			"ВЫБРАТЬ РАЗРЕШЕННЫЕ *
			|ИЗ
			|	Справочник.ФизическиеЛица КАК ФизическиеЛица
			|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ОсновныеСотрудникиФизическихЛиц КАК ОсновныеСотрудникиФизическихЛиц
			|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ТекущиеКадровыеДанныеСотрудников КАК ТекущиеКадровыеДанныеСотрудников
			|			ПО ОсновныеСотрудникиФизическихЛиц.Сотрудник = ТекущиеКадровыеДанныеСотрудников.Сотрудник
			|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДанныеДляПодбораСотрудников КАК ДанныеДляПодбораСотрудников
			|			ПО ОсновныеСотрудникиФизическихЛиц.Сотрудник = ДанныеДляПодбораСотрудников.Сотрудник
			|				И (ДанныеДляПодбораСотрудников.Начало В
			|					(ВЫБРАТЬ
			|						МАКСИМУМ(Т.Начало)
			|					ИЗ
			|						РегистрСведений.ДанныеДляПодбораСотрудников КАК Т
			|					ГДЕ
			|						ОсновныеСотрудникиФизическихЛиц.Сотрудник = Т.Сотрудник
			|						И ВЫБОР
			|							КОГДА ОсновныеСотрудникиФизическихЛиц.ДатаНачала = ДАТАВРЕМЯ(1, 1, 1)
			|								ТОГДА Т.Начало
			|							ИНАЧЕ ОсновныеСотрудникиФизическихЛиц.ДатаНачала
			|						КОНЕЦ МЕЖДУ НАЧАЛОПЕРИОДА(Т.Начало, День) И КОНЕЦПЕРИОДА(ВЫБОР
			|							КОГДА Т.Окончание = ДАТАВРЕМЯ(1, 1, 1)
			|								ТОГДА ОсновныеСотрудникиФизическихЛиц.ДатаОкончания
			|							ИНАЧЕ Т.Окончание
			|						КОНЕЦ, ДЕНЬ)))
			|		ПО ФизическиеЛица.Ссылка = ОсновныеСотрудникиФизическихЛиц.ФизическоеЛицо
			|ГДЕ
			|	НЕ ФизическиеЛица.ЭтоГруппа
			|	И ОсновныеСотрудникиФизическихЛиц.ДатаОкончания = &МаксимальнаяДатаНачалоДня
			|	И ДанныеДляПодбораСотрудников.Филиал = &Организация
			|	И ДанныеДляПодбораСотрудников.Подразделение = &Подразделение
			|	И &ДополнительноеУсловие";
		
		ОрганизацияСписком = ТипЗнч(Организация) = Тип("Массив") ИЛИ ТипЗнч(Организация) = Тип("СписокЗначений");
		Если Организация = НеОпределено ИЛИ ОрганизацияСписком И Организация.Количество() = 0 Тогда
			
			ЗапросТекст = СтрЗаменить(ЗапросТекст, "ДанныеДляПодбораСотрудников.Филиал = &Организация
				|	И ", "");
			
		ИначеЕсли ОрганизацияСписком Тогда
			
			ЗапросТекст = СтрЗаменить(ЗапросТекст, "ДанныеДляПодбораСотрудников.Филиал = &Организация
				|	И ", "ДанныеДляПодбораСотрудников.Филиал В (&Организация)
				|	И ");
			
		КонецЕсли;
		
		ПодразделениеСписком = ТипЗнч(Подразделение) = Тип("Массив") ИЛИ ТипЗнч(Подразделение) = Тип("СписокЗначений");
		Если Подразделение = НеОпределено ИЛИ ПодразделениеСписком И Подразделение.Количество() = 0 Тогда
			
			ЗапросТекст = СтрЗаменить(ЗапросТекст, "ДанныеДляПодбораСотрудников.Подразделение = &Подразделение
				|	И ", "");
			
		ИначеЕсли ПодразделениеСписком Тогда
			
			ЗапросТекст = СтрЗаменить(ЗапросТекст, "ДанныеДляПодбораСотрудников.Подразделение = &Подразделение
				|	И ", "ДанныеДляПодбораСотрудников.Подразделение В (&Подразделение)
				|	И ");
			
		КонецЕсли;
		
		Если ЗначениеЗаполнено(ДатаНачалаОтбора) Тогда
			
			ЗапросТекст = ЗапросТекст + Символы.ПС + "
				|	И ТекущиеКадровыеДанныеСотрудников.ДатаПриема <= &ДатаОкончанияОтбора
				|	И (ТекущиеКадровыеДанныеСотрудников.ДатаУвольнения >= &ДатаНачалаОтбора
				|		ИЛИ ТекущиеКадровыеДанныеСотрудников.ДатаУвольнения = ДАТАВРЕМЯ(1, 1, 1))";
			
		КонецЕсли;
		
		Если Параметры.Отбор.Свойство("ВАрхиве") Тогда
			ЗапросТекст = ЗапросТекст + Символы.ПС + "	И ТекущиеКадровыеДанныеСотрудников.Сотрудник.ВАрхиве = " + ?(Параметры.Отбор.ВАрхиве = Истина, "ИСТИНА", "ЛОЖЬ");
		КонецЕсли; 
		
		Запрос.Текст = ЗапросТекст;
		
		Запрос.УстановитьПараметр("Организация", Организация);
		Запрос.УстановитьПараметр("Подразделение", Подразделение);
		
		Если ЗначениеЗаполнено(ДатаНачалаОтбора) Тогда
			
			Запрос.УстановитьПараметр("ДатаНачалаОтбора", ДатаНачалаОтбора);
			Запрос.УстановитьПараметр("ДатаОкончанияОтбора", ДатаОкончанияОтбора);
			
		КонецЕсли;
		
		Если ЗначениеЗаполнено(ДанныеВыбора) И ДанныеВыбора.Количество() > 0 Тогда
			ИспользоватьДанныеВыбора = Истина;
		Иначе
			ИспользоватьДанныеВыбора = Ложь;
		КонецЕсли;
		
		СтандартнаяОбработка = Ложь;
		
		ЗарплатаКадры.ЗаполнитьДанныеВыбораСправочника(ДанныеВыбора, Метаданные.Справочники.ФизическиеЛица, Параметры, Запрос, "ФизическиеЛица", ИспользоватьДанныеВыбора);
		
	Иначе
		
		ЗапросТекст =
			"ВЫБРАТЬ РАЗРЕШЕННЫЕ *
			|ИЗ
			|	Справочник.ФизическиеЛица КАК ФизическиеЛица
			|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.РолиФизическихЛиц КАК РолиФизическихЛиц
			|		ПО ФизическиеЛица.Ссылка = РолиФизическихЛиц.ФизическоеЛицо
			|ГДЕ
			|	НЕ ФизическиеЛица.ЭтоГруппа
			|	И РолиФизическихЛиц.Организация = &Организация
			|	И РолиФизическихЛиц.Роль = &РольФизическогоЛица
			|	И &ДополнительноеУсловие";
		
		ОрганизацияСписком = ТипЗнч(Организация) = Тип("Массив")
			Или ТипЗнч(Организация) = Тип("ФиксированныйМассив")
			Или ТипЗнч(Организация) = Тип("СписокЗначений");
		
		Если Организация = НеОпределено ИЛИ ОрганизацияСписком И Организация.Количество() = 0 Тогда
			
			ЗапросТекст = СтрЗаменить(ЗапросТекст, "РолиФизическихЛиц.Организация = &Организация
				|	И ", "");
			
		ИначеЕсли ОрганизацияСписком Тогда
			
			ЗапросТекст = СтрЗаменить(ЗапросТекст, "РолиФизическихЛиц.Организация = &Организация
				|	И ", "РолиФизическихЛиц.Организация В (&Организация)
				|	И ");
			
		КонецЕсли;
		
		РолиСписком = ТипЗнч(РольФизическогоЛица) = Тип("Массив")
			Или ТипЗнч(РольФизическогоЛица) = Тип("ФиксированныйМассив")
			Или ТипЗнч(РольФизическогоЛица) = Тип("СписокЗначений");
		
		Если РолиСписком И РольФизическогоЛица.Количество() = 0 Тогда
			
			ЗапросТекст = СтрЗаменить(ЗапросТекст, "РолиФизическихЛиц.Роль = &РольФизическогоЛица
				|	И ", "");
			
		ИначеЕсли РолиСписком Тогда
			
			ЗапросТекст = СтрЗаменить(ЗапросТекст, "РолиФизическихЛиц.Роль = &РольФизическогоЛица
				|	И ", "РолиФизическихЛиц.Роль В (&РольФизическогоЛица)
				|	И ");
			
		КонецЕсли;
		
		Запрос = Новый Запрос;
		Запрос.Текст = ЗапросТекст;
		Запрос.УстановитьПараметр("Организация", Организация);
		Запрос.УстановитьПараметр("РольФизическогоЛица", РольФизическогоЛица);
		
		Если ЗначениеЗаполнено(ДанныеВыбора) И ДанныеВыбора.Количество() > 0 Тогда
			ИспользоватьДанныеВыбора = Истина;
		Иначе
			ИспользоватьДанныеВыбора = Ложь;
		КонецЕсли;
		
		СтандартнаяОбработка = Ложь;
		
		ЗарплатаКадры.ЗаполнитьДанныеВыбораСправочника(ДанныеВыбора, Метаданные.Справочники.ФизическиеЛица, Параметры, Запрос, "ФизическиеЛица", ИспользоватьДанныеВыбора);
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ФормаВыбораСотрудниковПриСозданииНаСервере(Форма, Параметры) Экспорт
	
	УстановитьЗапросСпискаВФормеВыбораСотрудников(Форма);
	
	Если Параметры.Отбор.Свойство("Подразделение")
		И Параметры.Свойство("УчитыватьОтборПоПодразделению")
		И Параметры.УчитыватьОтборПоПодразделению
		И Не ПолучитьФункциональнуюОпцию("ВыполнятьРасчетЗарплатыПоПодразделениям") Тогда
		
		Параметры.Отбор.Удалить("Подразделение");
		
	КонецЕсли;
	
	ПараметрФилиал = Неопределено;
	// Сначала обрабатываем отбор по организации (филиалу).
	Если Параметры.Отбор.Свойство("Организация")
		И ЗначениеЗаполнено(Параметры.Отбор.Организация) Тогда
		
		ПараметрФилиал = Параметры.Отбор.Организация;
		
	КонецЕсли;
	
	Если Параметры.Отбор.Свойство("Филиал")
		И ЗначениеЗаполнено(Параметры.Отбор.Филиал) Тогда
		
		ПараметрФилиал = Параметры.Отбор.Филиал;
		
	КонецЕсли;
	
	ТекстЗапроса = Форма.Список.ТекстЗапроса;
	
	Если ПараметрФилиал = Неопределено
		Или ПараметрФилиал = ОбщегоНазначения.ПредопределенныйЭлемент("Справочник.Организации.УправленческаяОрганизация") Тогда
		
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ОтборПоФилиалу", "(ИСТИНА)");
		
	Иначе
		
		ОбщегоНазначенияКлиентСервер.УстановитьПараметрДинамическогоСписка(
			Форма.Список, "ОтборПоФилиалу", ПараметрФилиал, Истина);
		
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ОтборПоФилиалу", "ВЫБОР КОГДА &ОтбиратьПоФилиалу ТОГДА Т.Филиал В (&ОтборПоФилиалу) ИНАЧЕ ИСТИНА КОНЕЦ");
		
	КонецЕсли;
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ОсновныеСотрудникиФизическихЛиц.ГоловнаяОрганизация КАК Организация,",
		"ОсновныеСотрудникиФизическихЛиц.ГоловнаяОрганизация КАК Организация,
		|	ДанныеДляПодбораСотрудников.ВидДоговора КАК ВидДоговора,");
	
	Форма.Список.ТекстЗапроса = ТекстЗапроса;
	Форма.Список.УстановитьОбязательноеИспользование("ВидДоговора", Истина);
	
	ОбщегоНазначенияКлиентСервер.УстановитьПараметрДинамическогоСписка(
		Форма.Список, "ОтбиратьПоФилиалу", Истина, Истина);
	
КонецПроцедуры

Процедура УстановитьЗапросСпискаВФормеВыбораСотрудников(Форма)
	
	Список = Форма.Список;
	Если ПараметрыСеанса.АльтернативныйПодборСпискаСотрудников Тогда
		
		Список.ТекстЗапроса =
			"ВЫБРАТЬ РАЗЛИЧНЫЕ
			|	СправочникФизическиеЛица.Ссылка КАК Ссылка,
			|	СправочникФизическиеЛица.ПометкаУдаления КАК ПометкаУдаления,
			|	СправочникФизическиеЛица.Предопределенный КАК Предопределенный,
			|	СправочникФизическиеЛица.Родитель КАК Родитель,
			|	СправочникФизическиеЛица.ЭтоГруппа КАК ЭтоГруппа,
			|	СправочникФизическиеЛица.Код КАК Код,
			|	СправочникФизическиеЛица.Наименование КАК Наименование,
			|	СправочникФизическиеЛица.ДатаРождения КАК ДатаРождения,
			|	СправочникФизическиеЛица.ИНН КАК ИНН,
			|	СправочникФизическиеЛица.СтраховойНомерПФР КАК СтраховойНомерПФР,
			|	ТекущиеКадровыеДанныеСотрудников.ДатаПриема КАК ДатаПриема,
			|	ТекущиеКадровыеДанныеСотрудников.ДатаУвольнения КАК ДатаУвольнения,
			|	ДанныеДляПодбораСотрудников.Код КАК ТабельныйНомер,
			|	ДанныеДляПодбораСотрудников.ВАрхиве КАК ВАрхиве,
			|	ОсновныеСотрудникиФизическихЛиц.ГоловнаяОрганизация КАК Организация,
			|	ДанныеДляПодбораСотрудников.Филиал КАК Филиал,
			|	ДанныеДляПодбораСотрудников.Подразделение КАК Подразделение,
			|	ВидыЗанятостиСотрудниковИнтервальный.ВидЗанятости КАК ВидЗанятости
			|ИЗ
			|	РегистрСведений.ОсновныеСотрудникиФизическихЛиц КАК ОсновныеСотрудникиФизическихЛиц
			|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ФизическиеЛица КАК СправочникФизическиеЛица
			|		ПО ОсновныеСотрудникиФизическихЛиц.ФизическоеЛицо = СправочникФизическиеЛица.Ссылка
			|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ТекущиеКадровыеДанныеСотрудников КАК ТекущиеКадровыеДанныеСотрудников
			|		ПО ОсновныеСотрудникиФизическихЛиц.ГоловнаяОрганизация = ТекущиеКадровыеДанныеСотрудников.ГоловнаяОрганизация
			|			И ОсновныеСотрудникиФизическихЛиц.ФизическоеЛицо = ТекущиеКадровыеДанныеСотрудников.ФизическоеЛицо
			|			И ОсновныеСотрудникиФизическихЛиц.Сотрудник = ТекущиеКадровыеДанныеСотрудников.Сотрудник
			|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ДанныеДляПодбораСотрудников КАК ДанныеДляПодбораСотрудников
			|		ПО ОсновныеСотрудникиФизическихЛиц.Сотрудник = ДанныеДляПодбораСотрудников.Сотрудник
			|			И (ДанныеДляПодбораСотрудников.ЭтоГоловнойСотрудник)
			|			И (ДанныеДляПодбораСотрудников.ИдентификаторЗаписи В
			|				(ВЫБРАТЬ
			|					МАКСИМУМ(ДанныеДляПодбораСотрудниковОтбор.ИдентификаторЗаписи)
			|				ИЗ
			|					РегистрСведений.ДанныеДляПодбораСотрудников КАК ДанныеДляПодбораСотрудниковОтбор
			|				ГДЕ
			|					ОсновныеСотрудникиФизическихЛиц.Сотрудник = ДанныеДляПодбораСотрудниковОтбор.Сотрудник
			|					И ДанныеДляПодбораСотрудников.Организация = ДанныеДляПодбораСотрудниковОтбор.Организация
			|					И ДанныеДляПодбораСотрудниковОтбор.Начало В
			|						(ВЫБРАТЬ
			|							МАКСИМУМ(Т.Начало)
			|						ИЗ
			|							РегистрСведений.ДанныеДляПодбораСотрудников КАК Т
			|						ГДЕ
			|							ОсновныеСотрудникиФизическихЛиц.Сотрудник = Т.Сотрудник
			|							И Т.Филиал <> ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
			|							И Т.ЭтоГоловнойСотрудник
			|							И ДанныеДляПодбораСотрудниковОтбор.Организация = Т.Организация
			|							И (Т.Окончание МЕЖДУ НАЧАЛОПЕРИОДА(ОсновныеСотрудникиФизическихЛиц.ДатаНачала, ДЕНЬ) И КОНЕЦПЕРИОДА(ОсновныеСотрудникиФизическихЛиц.ДатаОкончания, ДЕНЬ)
			|								ИЛИ ОсновныеСотрудникиФизическихЛиц.ДатаОкончания МЕЖДУ НАЧАЛОПЕРИОДА(Т.Начало, ДЕНЬ) И КОНЕЦПЕРИОДА(Т.Окончание, ДЕНЬ))
			|							И &ОтборПоФилиалу)))
			|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ВидыЗанятостиСотрудниковИнтервальный КАК ВидыЗанятостиСотрудниковИнтервальный
			|		ПО ОсновныеСотрудникиФизическихЛиц.Сотрудник = ВидыЗанятостиСотрудниковИнтервальный.Сотрудник
			|			И (ВидыЗанятостиСотрудниковИнтервальный.ДатаНачала В
			|				(ВЫБРАТЬ
			|					МАКСИМУМ(Т.ДатаНачала) КАК ДатаНачала
			|				ИЗ
			|					РегистрСведений.ВидыЗанятостиСотрудниковИнтервальный КАК Т
			|				ГДЕ
			|					ОсновныеСотрудникиФизическихЛиц.Сотрудник = Т.Сотрудник
			|					И ОсновныеСотрудникиФизическихЛиц.ДатаОкончания МЕЖДУ НАЧАЛОПЕРИОДА(Т.ДатаНачала, ДЕНЬ) И Т.ДатаОкончания))
			|ГДЕ
			|	ОсновныеСотрудникиФизическихЛиц.ДатаОкончания = &МаксимальнаяДатаНачалоДня
			|{ГДЕ
			|	ОсновныеСотрудникиФизическихЛиц.ГоловнаяОрганизация.* КАК Организация,
			|	ДанныеДляПодбораСотрудников.Организация.*,
			|	ДанныеДляПодбораСотрудников.Филиал.*}";
		
	Иначе
		
		Список.ТекстЗапроса =
			"ВЫБРАТЬ
			|	СправочникФизическиеЛица.Ссылка КАК Ссылка,
			|	СправочникФизическиеЛица.ПометкаУдаления КАК ПометкаУдаления,
			|	СправочникФизическиеЛица.Предопределенный КАК Предопределенный,
			|	СправочникФизическиеЛица.Родитель КАК Родитель,
			|	СправочникФизическиеЛица.ЭтоГруппа КАК ЭтоГруппа,
			|	СправочникФизическиеЛица.Код КАК Код,
			|	СправочникФизическиеЛица.Наименование КАК Наименование,
			|	СправочникФизическиеЛица.ДатаРождения КАК ДатаРождения,
			|	СправочникФизическиеЛица.ИНН КАК ИНН,
			|	СправочникФизическиеЛица.СтраховойНомерПФР КАК СтраховойНомерПФР,
			|	ТекущиеКадровыеДанныеСотрудников.ДатаПриема КАК ДатаПриема,
			|	ТекущиеКадровыеДанныеСотрудников.ДатаУвольнения КАК ДатаУвольнения,
			|	ДанныеДляПодбораСотрудников.Код КАК ТабельныйНомер,
			|	ДанныеДляПодбораСотрудников.ВАрхиве КАК ВАрхиве,
			|	ОсновныеСотрудникиФизическихЛиц.ГоловнаяОрганизация КАК Организация,
			|	ДанныеДляПодбораСотрудников.Филиал КАК Филиал,
			|	ДанныеДляПодбораСотрудников.Подразделение КАК Подразделение,
			|	ВидыЗанятостиСотрудниковИнтервальный.ВидЗанятости КАК ВидЗанятости
			|ИЗ
			|	РегистрСведений.ОсновныеСотрудникиФизическихЛиц КАК ОсновныеСотрудникиФизическихЛиц
			|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ФизическиеЛица КАК СправочникФизическиеЛица
			|		ПО ОсновныеСотрудникиФизическихЛиц.ФизическоеЛицо = СправочникФизическиеЛица.Ссылка
			|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ТекущиеКадровыеДанныеСотрудников КАК ТекущиеКадровыеДанныеСотрудников
			|		ПО ОсновныеСотрудникиФизическихЛиц.ГоловнаяОрганизация = ТекущиеКадровыеДанныеСотрудников.ГоловнаяОрганизация
			|			И ОсновныеСотрудникиФизическихЛиц.ФизическоеЛицо = ТекущиеКадровыеДанныеСотрудников.ФизическоеЛицо
			|			И ОсновныеСотрудникиФизическихЛиц.Сотрудник = ТекущиеКадровыеДанныеСотрудников.Сотрудник
			|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ДанныеДляПодбораСотрудников КАК ДанныеДляПодбораСотрудников
			|		ПО ОсновныеСотрудникиФизическихЛиц.Сотрудник = ДанныеДляПодбораСотрудников.Сотрудник
			|			И (ДанныеДляПодбораСотрудников.ИдентификаторЗаписи В
			|				(ВЫБРАТЬ ПЕРВЫЕ 1
			|					Т.ИдентификаторЗаписи
			|				ИЗ
			|					РегистрСведений.ДанныеДляПодбораСотрудников КАК Т
			|				ГДЕ
			|					ОсновныеСотрудникиФизическихЛиц.Сотрудник = Т.Сотрудник
			|					И Т.Филиал <> ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
			|					И Т.ЭтоГоловнойСотрудник
			|					И (Т.Окончание МЕЖДУ НАЧАЛОПЕРИОДА(ОсновныеСотрудникиФизическихЛиц.ДатаНачала, ДЕНЬ) И КОНЕЦПЕРИОДА(ОсновныеСотрудникиФизическихЛиц.ДатаОкончания, ДЕНЬ)
			|						ИЛИ ОсновныеСотрудникиФизическихЛиц.ДатаОкончания МЕЖДУ НАЧАЛОПЕРИОДА(Т.Начало, ДЕНЬ) И КОНЕЦПЕРИОДА(Т.Окончание, ДЕНЬ))
			|					И &ОтборПоФилиалу
			|				УПОРЯДОЧИТЬ ПО
			|					Т.ПоДоговоруГПХ,
			|					Т.Начало УБЫВ,
			|					Т.Организация,
			|					Т.Филиал,
			|					Т.Подразделение))
			|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ВидыЗанятостиСотрудниковИнтервальный КАК ВидыЗанятостиСотрудниковИнтервальный
			|		ПО ОсновныеСотрудникиФизическихЛиц.Сотрудник = ВидыЗанятостиСотрудниковИнтервальный.Сотрудник
			|			И (ВидыЗанятостиСотрудниковИнтервальный.ДатаНачала В
			|				(ВЫБРАТЬ ПЕРВЫЕ 1
			|					Т.ДатаНачала
			|				ИЗ
			|					РегистрСведений.ВидыЗанятостиСотрудниковИнтервальный КАК Т
			|				ГДЕ
			|					ОсновныеСотрудникиФизическихЛиц.Сотрудник = Т.Сотрудник
			|					И ОсновныеСотрудникиФизическихЛиц.ДатаОкончания МЕЖДУ НАЧАЛОПЕРИОДА(Т.ДатаНачала, ДЕНЬ) И Т.ДатаОкончания
			|				УПОРЯДОЧИТЬ ПО
			|					Т.ДатаНачала УБЫВ))
			|ГДЕ
			|	ОсновныеСотрудникиФизическихЛиц.ДатаОкончания = &МаксимальнаяДатаНачалоДня
			|{ГДЕ
			|	ОсновныеСотрудникиФизическихЛиц.ГоловнаяОрганизация.* КАК Организация,
			|	ДанныеДляПодбораСотрудников.Организация.*,
			|	ДанныеДляПодбораСотрудников.Филиал.*}";
		
	КонецЕсли;
	
	ОбщегоНазначенияКлиентСервер.УстановитьПараметрДинамическогоСписка(
		Список, "МаксимальнаяДатаНачалоДня", НачалоДня(ЗарплатаКадрыПериодическиеРегистры.МаксимальнаяДата()), Истина);
	
КонецПроцедуры

Процедура ЗапомнитьРеквизитыПрежнегоСостоянияОбъекта(ФизическоеЛицо) Экспорт
	
	ТаблицаКИ = УправлениеКонтактнойИнформацией.КонтактнаяИнформацияОбъекта(ФизическоеЛицо.Ссылка,,,Ложь);
	ДополнительныеСвойства = ФизическоеЛицо.ДополнительныеСвойства;
	
	Если ТаблицаКИ.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	ДополнительныеСвойства.ПрежниеЗначения.Вставить("ТаблицаКИ", 
		ОбщегоНазначения.ФиксированныеДанные(ОбщегоНазначения.ТаблицаЗначенийВМассив(ТаблицаКИ)));
	
	НайденнаяСтрокаМобильныйТелефон = ТаблицаКИ.Найти(ОбщегоНазначения.ПредопределенныйЭлемент("Справочник.ВидыКонтактнойИнформации.ТелефонМобильныйФизическиеЛица"), "Вид");
	Если НайденнаяСтрокаМобильныйТелефон <> Неопределено Тогда
		ДополнительныеСвойства.ПрежниеЗначения.Вставить("МобильныйТелефон", НайденнаяСтрокаМобильныйТелефон.Представление);
	КонецЕсли;
	
	НайденнаяСтрокаЭлектроннаяПочта = ТаблицаКИ.Найти(ОбщегоНазначения.ПредопределенныйЭлемент("Справочник.ВидыКонтактнойИнформации.EMailФизическиеЛица"), "Вид");
	Если НайденнаяСтрокаЭлектроннаяПочта <> Неопределено Тогда
		ДополнительныеСвойства.ПрежниеЗначения.Вставить("ЭлектроннаяПочта", НайденнаяСтрокаЭлектроннаяПочта.Представление);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти
