
#Область СлужебныйПрограммныйИнтерфейс

// Возвращает руководителей подразделения
// Параметры:
//	МассивПодразделений				- Массив - массив подразделений (СправочникСсылка.СтруктураПредприятия), для которых необходимо получить руководителей
//	НаследованиеРуководителей		- Булево - если признак = Истина, руководителем подразделения будет считаться руководитель ближайшего родителя.
//
// Возвращаемое значение:
//	Соответствие - соответствие управленческих и регламентных подразделений.
//		* Ключ		- СправочникСсылка.СтруктураПредприятия - подразделение.
//		* Значение 	- Структура - данные руководителя.
//			** Руководитель - СправочникСсылка.Сотрудник - руководитель
//			** ПозицияРуководителя - СправочникСсылка.ШтатноеРасписание - позиция руководителя
//			** ФизическоеЛицо - СправочникСсылка.ФизическиеЛица - физическое лицо руководителя
//
Функция ДанныеРуководителей(МассивПодразделений, НаследованиеРуководителей = Ложь) Экспорт
	
	Если Не РуководителиПодразделенийИспользуются() Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	МенеджерВТ = Новый МенеджерВременныхТаблиц;

	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВТ;
	Запрос.УстановитьПараметр("Подразделения", МассивПодразделений);
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	СтруктураПредприятия.Ссылка КАК Подразделение
		|ПОМЕСТИТЬ ВТПодразделенияОтбор
		|ИЗ
		|	Справочник.СтруктураПредприятия КАК СтруктураПредприятия
		|ГДЕ
		|	СтруктураПредприятия.Ссылка В(&Подразделения)";
	Запрос.Выполнить();
	
	ПараметрыСоздания = ПараметрыДляСоздатьВТРуководителиПодразделений();
	ПараметрыСоздания.НаследованиеРуководителей = НаследованиеРуководителей;
	ПараметрыСоздания.ИмяВыходнойТаблицы = "ВТРуководителиПодразделенийВнутренний";
	
	СоздатьВТРуководителиПодразделений(МенеджерВТ, "ВТПодразделенияОтбор", ПараметрыСоздания);
		
	Запрос.Текст =
		"ВЫБРАТЬ
		|	Руководители.Подразделение КАК Подразделение,
		|	Руководители.Руководитель КАК Руководитель,
		|	Руководители.ПозицияРуководителя КАК ПозицияРуководителя,
		|	Руководители.ФизическоеЛицо КАК ФизическоеЛицо
		|ИЗ
		|	ВТРуководителиПодразделенийВнутренний КАК Руководители";
	РезультатЗапроса = Запрос.Выполнить();
	
	Руководители = Новый Соответствие;
	
	Выборка = РезультатЗапроса.Выбрать();
	Пока Выборка.Следующий() Цикл
		ОписаниеРуководителя = Новый Структура(
			"Руководитель,
			|ПозицияРуководителя,
			|ФизическоеЛицо");
		ОписаниеРуководителя.Руководитель = Выборка.Руководитель;
		ОписаниеРуководителя.ПозицияРуководителя = Выборка.ПозицияРуководителя;
		ОписаниеРуководителя.ФизическоеЛицо = Выборка.ФизическоеЛицо;
		Руководители.Вставить(Выборка.Подразделение, ОписаниеРуководителя);
	КонецЦикла;
	
	Возврат Руководители;

КонецФункции

// Описание параметров для СоздатьВТРуководителиСотрудников()
// Возвращаемое значение:
// 	Структура - параметры для СоздатьВТРуководителиСотрудников() со значениями по умолчанию.
//
Функция ПараметрыДляСоздатьВТРуководителиСотрудников() Экспорт

	СтруктураПараметров = Новый Структура;
	
	СтруктураПараметров.Вставить("ПолучатьКадровыеДанные", Истина);
	СтруктураПараметров.Вставить("ДатаСреза", ТекущаяДатаСеанса());
	СтруктураПараметров.Вставить("НаследованиеРуководителей", Ложь);
	СтруктураПараметров.Вставить("ИмяВыходнойТаблицы", "ВТРуководителиСотрудников");
	
	Возврат СтруктураПараметров;
	
КонецФункции

// Создает временную таблицу с руководителями сотрудников
// Параметры:
//	МенеджерВременныхТаблиц - МенеджерВременныхТаблиц - менеджер временных таблиц
//	ИмяВТСотрудники			- Строка - имя временной таблицы, в которой содержатся сотрудники, для которых необходимо получить руководителей.
//	ПараметрыСоздания		- Структура - см. ПараметрыДляСоздатьВТРуководителиСотрудников()
//
Процедура СоздатьВТРуководителиСотрудников(МенеджерВременныхТаблиц, ИмяВТСотрудники, ПараметрыСоздания) Экспорт

	УдалитьВТ = Новый Массив;
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	
	Если ПараметрыСоздания.ПолучатьКадровыеДанные Тогда
		Запрос.Текст = 
			"ВЫБРАТЬ
			|	&Период КАК Период,
			|	Сотрудники.Сотрудник КАК Сотрудник
			|ПОМЕСТИТЬ ВТСотрудникиПериодыВнутренний
			|ИЗ
			|	#ВТСотрудники КАК Сотрудники";
		Запрос.УстановитьПараметр("Период", ПараметрыСоздания.ДатаСреза);
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "#ВТСотрудники", ИмяВТСотрудники);
		
		Запрос.Выполнить();
		УдалитьВТ.Добавить("ВТСотрудникиПериодыВнутренний");
		
		ОписательВТ = КадровыйУчет.ОписательВременныхТаблицДляСоздатьВТКадровыеДанныеСотрудников(МенеджерВременныхТаблиц, "ВТСотрудникиПериодыВнутренний");
		ОписательВТ.ИмяВТКадровыеДанныеСотрудников = "ВТКадровыеДанныеСотрудниковВнутренний";
		
		КадровыйУчет.СоздатьВТКадровыеДанныеСотрудников(ОписательВТ, Ложь, "Подразделение, ДолжностьПоШтатномуРасписанию, МестоВСтруктуреПредприятия");
		УдалитьВТ.Добавить("ВТКадровыеДанныеСотрудниковВнутренний");
	
		ИмяВТКадровыеДанныеСотрудников = "ВТКадровыеДанныеСотрудниковВнутренний";
	Иначе
		ИмяВТКадровыеДанныеСотрудников = ИмяВТСотрудники;
	КонецЕсли;
	
	// Получаем руководителей подразделений, а так же, для определения "руководителей для руководителей",
	// и их родителей.
	Запрос.Текст = 
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ВЫРАЗИТЬ(Сотрудники.МестоВСтруктуреПредприятия КАК Справочник.СтруктураПредприятия) КАК Подразделение
		|ПОМЕСТИТЬ ВТВсеПодразделения
		|ИЗ
		|	#ВТКадровыеДанныеСотрудников КАК Сотрудники
		|ГДЕ
		|	Сотрудники.МестоВСтруктуреПредприятия <> ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка)
		|
		|ОБЪЕДИНИТЬ
		|
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ВЫРАЗИТЬ(Сотрудники.МестоВСтруктуреПредприятия.Родитель КАК Справочник.СтруктураПредприятия)
		|ИЗ
		|	#ВТКадровыеДанныеСотрудников КАК Сотрудники
		|ГДЕ
		|	Сотрудники.МестоВСтруктуреПредприятия.Родитель <> ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	&Период КАК Период,
		|	ВТВсеПодразделения.Подразделение КАК Подразделение,
		|	Организации.Ссылка КАК Организация
		|ПОМЕСТИТЬ ВТОрганизацииОтбор
		|ИЗ
		|	ВТВсеПодразделения КАК ВТВсеПодразделения
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Организации КАК Организации
		|		ПО ВТВсеПодразделения.Подразделение.Источник = Организации.Ссылка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТВсеПодразделения.Подразделение КАК Подразделение
		|ПОМЕСТИТЬ ВТПодразделенияОтбор
		|ИЗ
		|	ВТВсеПодразделения КАК ВТВсеПодразделения
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТОрганизацииОтбор КАК ВТОрганизацииОтбор
		|		ПО ВТВсеПодразделения.Подразделение = ВТОрганизацииОтбор.Подразделение
		|ГДЕ
		|	ВТОрганизацииОтбор.Подразделение ЕСТЬ NULL";
	
	Запрос.УстановитьПараметр("Период", ПараметрыСоздания.ДатаСреза);
	
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "#ВТКадровыеДанныеСотрудников", ИмяВТКадровыеДанныеСотрудников);
	
	Запрос.Выполнить();
	УдалитьВТ.Добавить("ВТВсеПодразделения");
	УдалитьВТ.Добавить("ВТОрганизацииОтбор");
	УдалитьВТ.Добавить("ВТПодразделенияОтбор");
	
	// Получаем руководителей этих подразделений
	
	ПараметрыСозданияВТРуководителей = ПараметрыДляСоздатьВТРуководителиПодразделений();
	ПараметрыСозданияВТРуководителей.ДатаСреза = ПараметрыСоздания.ДатаСреза;
	ПараметрыСозданияВТРуководителей.НаследованиеРуководителей = ПараметрыСоздания.НаследованиеРуководителей;
	ПараметрыСозданияВТРуководителей.ИмяВыходнойТаблицы = "ВТРуководителиПодразделенийВнутренний";
	
	СоздатьВТРуководителиПодразделений(
		Запрос.МенеджерВременныхТаблиц,
		"ВТПодразделенияОтбор",
		ПараметрыСозданияВТРуководителей);
		
	УдалитьВТ.Добавить("ВТРуководителиПодразделенийВнутренний");
	
	// Получаем руководителей организаций
	СоздатьВТРуководителиОрганизаций(Запрос.МенеджерВременныхТаблиц, ПараметрыСоздания.ДатаСреза);
	УдалитьВТ.Добавить("ВТРуководителиОрганизаций");
	
	Запрос.Текст =
		"ВЫБРАТЬ
		|	РуководителиПодразделений.Подразделение КАК Подразделение,
		|	РуководителиПодразделений.Руководитель КАК Руководитель,
		|	РуководителиПодразделений.Руководитель.ФизическоеЛицо КАК РуководительФизическоеЛицо
		|ПОМЕСТИТЬ ВТРуководителиВсехПодразделенийВнутренний
		|ИЗ
		|	ВТРуководителиПодразделенийВнутренний КАК РуководителиПодразделений
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ВТОрганизации.Подразделение,
		|	РуководителиОрганизаций.Руководитель,
		|	РуководителиОрганизаций.РуководительФизическоеЛицо
		|ИЗ
		|	ВТОрганизацииОтбор КАК ВТОрганизации
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТРуководителиОрганизаций КАК РуководителиОрганизаций
		|		ПО ВТОрганизации.Организация = РуководителиОрганизаций.Организация
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Сотрудники.Сотрудник КАК Сотрудник,
		|	РуководителиПодразделений.Руководитель КАК Руководитель,
		|	РуководителиПодразделений.РуководительФизическоеЛицо КАК РуководительФизическоеЛицо
		|ПОМЕСТИТЬ ВТНайденныеРуководителиСотрудниковВнутренний
		|ИЗ
		|	#ВТКадровыеДанныеСотрудников КАК Сотрудники
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТРуководителиВсехПодразделенийВнутренний КАК РуководителиПодразделений
		|		ПО Сотрудники.МестоВСтруктуреПредприятия = РуководителиПодразделений.Подразделение
		|			И Сотрудники.Сотрудник <> РуководителиПодразделений.Руководитель
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	Сотрудники.Сотрудник,
		|	РуководителиВышестоящихПодразделений.Руководитель,
		|	РуководителиВышестоящихПодразделений.РуководительФизическоеЛицо
		|ИЗ
		|	#ВТКадровыеДанныеСотрудников КАК Сотрудники
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТРуководителиВсехПодразделенийВнутренний КАК РуководителиПодразделений
		|		ПО Сотрудники.МестоВСтруктуреПредприятия = РуководителиПодразделений.Подразделение
		|			И Сотрудники.Сотрудник = РуководителиПодразделений.Руководитель
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТРуководителиВсехПодразделенийВнутренний КАК РуководителиВышестоящихПодразделений
		|		ПО Сотрудники.МестоВСтруктуреПредприятия.Родитель = РуководителиВышестоящихПодразделений.Подразделение
		|			И Сотрудники.Сотрудник <> РуководителиВышестоящихПодразделений.Руководитель
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Сотрудники.Сотрудник КАК Сотрудник,
		|	РуководителиСотрудников.Руководитель КАК Руководитель,
		|	Сотрудники.МестоВСтруктуреПредприятия КАК МестоВСтруктуреПредприятия,
		|	Сотрудники.Подразделение КАК Подразделение,
		|	Сотрудники.ДолжностьПоШтатномуРасписанию КАК Позиция,
		|	РуководителиСотрудников.РуководительФизическоеЛицо КАК РуководительФизическоеЛицо
		|ПОМЕСТИТЬ #ВТРуководителиСотрудников
		|ИЗ
		|	#ВТКадровыеДанныеСотрудников КАК Сотрудники
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТНайденныеРуководителиСотрудниковВнутренний КАК РуководителиСотрудников
		|		ПО Сотрудники.Сотрудник = РуководителиСотрудников.Сотрудник";
	
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "#ВТКадровыеДанныеСотрудников", ИмяВТКадровыеДанныеСотрудников);
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "#ВТРуководителиСотрудников", ПараметрыСоздания.ИмяВыходнойТаблицы);
	
	Запрос.Выполнить();
	УдалитьВТ.Добавить("ВТРуководителиВсехПодразделенийВнутренний");
	УдалитьВТ.Добавить("ВТНайденныеРуководителиСотрудниковВнутренний");
	
	ЗарплатаКадры.УничтожитьВТ(Запрос.МенеджерВременныхТаблиц, УдалитьВТ);
	
КонецПроцедуры

// Описание параметров для СоздатьВТПодчиненныеСотрудники()
// Возвращаемое значение:
// 	Структура - параметры для СоздатьВТПодчиненныеСотрудники() со значениями по умолчанию.
//
Функция ПараметрыДляСоздатьВТПодчиненныеСотрудники() Экспорт

	СтруктураПараметров = Новый Структура;
	
	СтруктураПараметров.Вставить("ПолучатьКадровыеДанные", Истина);
	СтруктураПараметров.Вставить("ДатаСреза", ТекущаяДатаСеанса());
	СтруктураПараметров.Вставить("НаследованиеРуководителей", Ложь);
	СтруктураПараметров.Вставить("ИмяВыходнойТаблицы", "ВТПодчиненныеСотрудники");
	
	Возврат СтруктураПараметров;
	
КонецФункции

// Создает временную таблицу с подчиненными сотрудниками
// Параметры:
//	МенеджерВременныхТаблиц - МенеджерВременныхТаблиц - менеджер временных таблиц
//	ИмяВТРуководители		- Строка - имя временной таблицы, в которой содержатся сотрудники, для которых необходимо получить руководителей.
//	ПараметрыСоздания		- Структура - см. ПараметрыДляСоздатьВТПодчиненныеСотрудники()
//
Процедура СоздатьВТПодчиненныеСотрудники(МенеджерВременныхТаблиц, ИмяВТРуководители, ПараметрыСоздания) Экспорт

	УдалитьВТ = Новый Массив;
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;

	Если ПараметрыСоздания.ПолучатьКадровыеДанные Тогда
		Запрос.Текст = 
			"ВЫБРАТЬ
			|	&Период КАК Период,
			|	Сотрудники.Сотрудник КАК Сотрудник
			|ПОМЕСТИТЬ ВТСотрудникиПериодыВнутренний
			|ИЗ
			|	#ВТСотрудники КАК Сотрудники";
		Запрос.УстановитьПараметр("Период", ПараметрыСоздания.ДатаСреза);
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "#ВТСотрудники", ИмяВТРуководители);
		
		Запрос.Выполнить();
		УдалитьВТ.Добавить("ВТСотрудникиПериодыВнутренний");
		
		ОписательВТ = КадровыйУчет.ОписательВременныхТаблицДляСоздатьВТКадровыеДанныеСотрудников(МенеджерВременныхТаблиц, "ВТСотрудникиПериодыВнутренний");
		ОписательВТ.ИмяВТКадровыеДанныеСотрудников = "ВТКадровыеДанныеСотрудниковВнутренний";
		
		КадровыйУчет.СоздатьВТКадровыеДанныеСотрудников(ОписательВТ, Ложь, "ДолжностьПоШтатномуРасписанию, МестоВСтруктуреПредприятия");
		УдалитьВТ.Добавить("ВТКадровыеДанныеСотрудниковВнутренний");

		ИмяВТКадровыеДанныеСотрудников = "ВТКадровыеДанныеСотрудниковВнутренний";
	Иначе
		ИмяВТКадровыеДанныеСотрудников = ИмяВТРуководители;
	КонецЕсли;
	
	// Определяем подразделения, которыми управляют руководители.
	СоздатьВТКадровыеДанныеИПодразделенияРуководителей(
		Запрос.МенеджерВременныхТаблиц,
		ПараметрыСоздания.ДатаСреза,
		ПараметрыСоздания.НаследованиеРуководителей,
		ИмяВТКадровыеДанныеСотрудников);
		
	УдалитьВТ.Добавить("ВТКадровыеДанныеИПодразделенияРуководителей");
	
	// Получаем сотрудников этих подразделений.
	Запрос.Текст = 
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	КадровыеДанныеРуководителей.ПодчиненноеПодразделение КАК Подразделение
		|ПОМЕСТИТЬ ПодразделенияОтборВнутренний
		|ИЗ
		|	ВТКадровыеДанныеИПодразделенияРуководителей КАК КадровыеДанныеРуководителей
		|ГДЕ
		|	НЕ КадровыеДанныеРуководителей.ПодчиненноеПодразделение ЕСТЬ NULL";
	
	Запрос.Выполнить();
	УдалитьВТ.Добавить("ПодразделенияОтборВнутренний");
	
	ОрганизационнаяСтруктура.СоздатьВТПозицииПодразделений(Запрос.МенеджерВременныхТаблиц, "ПодразделенияОтборВнутренний");
	УдалитьВТ.Добавить("ВТПозицииПодразделений");
	
	Запрос.Текст = 
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ПозицииПодразделений.Позиция КАК ДолжностьПоШтатномуРасписанию
		|ИЗ
		|	ВТПозицииПодразделений КАК ПозицииПодразделений";
	
	РезультатЗапроса = Запрос.Выполнить();
	МассивПозиций = РезультатЗапроса.Выгрузить().ВыгрузитьКолонку("ДолжностьПоШтатномуРасписанию");
	
	ПараметрыПолученияСотрудников = КадровыйУчет.ПараметрыПолученияСотрудниковОрганизацийПоСпискуФизическихЛиц();
	ПараметрыПолученияСотрудников.НачалоПериода = ПараметрыСоздания.ДатаСреза;
	ПараметрыПолученияСотрудников.ОкончаниеПериода = ПараметрыСоздания.ДатаСреза;
	ПараметрыПолученияСотрудников.КадровыеДанные = "Подразделение, МестоВСтруктуреПредприятия";
	
	ЗарплатаКадрыОбщиеНаборыДанных.ДобавитьВКоллекциюОтбор(
		ПараметрыПолученияСотрудников.Отборы,
		"ДолжностьПоШтатномуРасписанию",
		"В",
		МассивПозиций);
	
	КадровыйУчет.СоздатьВТСотрудникиОрганизации(Запрос.МенеджерВременныхТаблиц, Ложь, ПараметрыПолученияСотрудников);
	УдалитьВТ.Добавить("ВТСотрудникиОрганизации");
	
	// Финальный запрос
	Запрос.Текст = 
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	КадровыеДанныеРуководителей.Руководитель КАК Руководитель,
		|	КадровыеДанныеРуководителей.ПозицияРуководителя КАК ПозицияРуководителя,
		|	КадровыеДанныеРуководителей.РуководимоеПодразделение КАК РуководимоеПодразделение,
		|	КадровыеДанныеСотрудников.Сотрудник КАК Сотрудник,
		|	КадровыеДанныеСотрудников.МестоВСтруктуреПредприятия КАК ПодразделениеСотрудника
		|ПОМЕСТИТЬ ВТНайденныеПодчиненныеСотрудники
		|ИЗ
		|	ВТКадровыеДанныеИПодразделенияРуководителей КАК КадровыеДанныеРуководителей
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТСотрудникиОрганизации КАК КадровыеДанныеСотрудников
		|		ПО КадровыеДанныеРуководителей.ПодчиненноеПодразделение = КадровыеДанныеСотрудников.МестоВСтруктуреПредприятия
		|			И КадровыеДанныеРуководителей.Руководитель <> КадровыеДанныеСотрудников.Сотрудник
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	КадровыеДанныеРуководителей.Сотрудник КАК Сотрудник,
		|	НайденныеСотрудники.ПозицияРуководителя КАК ПозицияСотрудника,
		|	НайденныеСотрудники.РуководимоеПодразделение КАК РуководимоеПодразделение,
		|	НайденныеСотрудники.Сотрудник КАК Подчиненный,
		|	НайденныеСотрудники.ПодразделениеСотрудника КАК ПодразделениеПодчиненного
		|ПОМЕСТИТЬ #ВТПодчиненныеСотрудники
		|ИЗ
		|	#ВТКадровыеДанныеСотрудников КАК КадровыеДанныеРуководителей
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТНайденныеПодчиненныеСотрудники КАК НайденныеСотрудники
		|		ПО КадровыеДанныеРуководителей.Сотрудник = НайденныеСотрудники.Руководитель";
	
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "#ВТПодчиненныеСотрудники", ПараметрыСоздания.ИмяВыходнойТаблицы);
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "#ВТКадровыеДанныеСотрудников", ИмяВТКадровыеДанныеСотрудников);
	
	Запрос.Выполнить();
	
	УдалитьВТ.Добавить("ВТНайденныеПодчиненныеСотрудники");
	
	ЗарплатаКадры.УничтожитьВТ(Запрос.МенеджерВременныхТаблиц, УдалитьВТ);
	
КонецПроцедуры

Процедура ЗаписатьПозициюРуководителя(Подразделение, ПозицияРуководителя) Экспорт

	МенеджерЗаписи = РегистрыСведений.ПозицииРуководителейПодразделений.СоздатьМенеджерЗаписи();
	
	МенеджерЗаписи.Подразделение = Подразделение;
	МенеджерЗаписи.ПозицияШтатногоРасписания = ПозицияРуководителя;
	
	МенеджерЗаписи.Записать(Истина);

КонецПроцедуры

Функция ПозицияРуководителя(Подразделение) Экспорт 
	
	Если Не ЗначениеЗаполнено(Подразделение) Тогда
		Возврат Неопределено;
	КонецЕсли;

	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Подразделение", Подразделение);
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ПозицииРуководителейПодразделений.ПозицияШтатногоРасписания КАК ПозицияРуководителя
		|ИЗ
		|	РегистрСведений.ПозицииРуководителейПодразделений КАК ПозицииРуководителейПодразделений
		|ГДЕ
		|	ПозицииРуководителейПодразделений.Подразделение = &Подразделение";
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Если РезультатЗапроса.Пустой() Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	Выборка = РезультатЗапроса.Выбрать();
	Выборка.Следующий();
	
	Возврат Выборка.ПозицияРуководителя;

КонецФункции

Функция СотрудникНаПозицииРуководителя(ПозицияРуководителя) Экспорт
	
	Если Не ЗначениеЗаполнено(ПозицияРуководителя) Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	СоздатьВТСотрудникиНаПозицияхРуководителей(Запрос.МенеджерВременныхТаблиц, ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве(ПозицияРуководителя));
		
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ВТСотрудникиНаПозицияхРуководителей.Сотрудник КАК Сотрудник
		|ИЗ
		|	ВТСотрудникиНаПозицияхРуководителей КАК ВТСотрудникиНаПозицияхРуководителей";
	РезультатЗапроса = Запрос.Выполнить();
	
	Если РезультатЗапроса.Пустой() Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	Выборка = РезультатЗапроса.Выбрать();
	Выборка.Следующий();
	
	Возврат Выборка.Сотрудник;

КонецФункции

Процедура ПриЗаполненииРуководителяТ13(Подразделение, ФИО, Должность, ДатаАктуальности, СтандартнаяОбработка) Экспорт
	
	Если Не РуководителиПодразделенийИспользуются() Тогда
		Возврат;
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(Подразделение) Тогда
		Возврат;
	КонецЕсли;
	
	МестоВСтруктуреПредприятия = ОрганизационнаяСтруктура.ПодразделениеВСтруктуреПредприятия(Подразделение);
	
	Если Не ЗначениеЗаполнено(МестоВСтруктуреПредприятия) Тогда
		Возврат;
	КонецЕсли;
	
	ДанныеРуководителя = ДанныеРуководителей(МестоВСтруктуреПредприятия)[МестоВСтруктуреПредприятия];
	
	Если Не ЗначениеЗаполнено(ДанныеРуководителя.ФизическоеЛицо) Тогда
		Возврат;
	КонецЕсли;
	
	ФИОФизЛиц = ЗарплатаКадры.СоответствиеФИОФизЛицСсылкам(ДатаАктуальности, ДанныеРуководителя.ФизическоеЛицо);
	
	ФИО = ФИОФизЛиц[ДанныеРуководителя.ФизическоеЛицо];
	Должность = Строка(ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ДанныеРуководителя.ПозицияРуководителя, "Должность"));
	СтандартнаяОбработка = Ложь;
	
КонецПроцедуры

Функция РуководителиПодразделенийИспользуются() Экспорт
	Возврат ПолучитьФункциональнуюОпцию("ИспользоватьЗарплатаКадрыКорпоративнаяПодсистемы")
				Или ПолучитьФункциональнуюОпцию("ИспользуетсяСервисКабинетСотрудника");
КонецФункции


#Область Формы

Процедура ПодразделенияПриСозданииНаСервере(Форма) Экспорт 
	
	Если Не РуководителиПодразделенийИспользуются() Тогда
		Возврат;
	КонецЕсли;
	
	Если Не ПравоДоступа("Чтение", Метаданные.РегистрыСведений.ПозицииРуководителейПодразделений) Тогда
		Возврат;
	КонецЕсли;
	
	РуководителиПодразделенийФормы.ПодразделенияПриСозданииНаСервере(Форма);
	
КонецПроцедуры

Процедура ПодразделенияПриЗаписиНаСервере(Форма, ТекущийОбъект, Отказ, ПараметрыЗаписи) Экспорт
	
	Если Не РуководителиПодразделенийИспользуются() Тогда
		Возврат;
	КонецЕсли;
	
	РуководителиПодразделенийФормы.ПодразделенияПриЗаписиНаСервере(Форма, ТекущийОбъект, Отказ, ПараметрыЗаписи);
	
КонецПроцедуры

Процедура СтруктураПредприятияПриСозданииНаСервере(Форма) Экспорт
	
	Если Не РуководителиПодразделенийИспользуются() Тогда
		Возврат;
	КонецЕсли;
	
	РуководителиПодразделенийФормы.СтруктураПредприятияПриСозданииНаСервере(Форма);
	
КонецПроцедуры

Процедура СтруктураПредприятияПриЗаписиНаСервере(Форма, Отказ, ТекущийОбъект, ПараметрыЗаписи) Экспорт
	
	Если Не РуководителиПодразделенийИспользуются() Тогда
		Возврат;
	КонецЕсли;
	
	РуководителиПодразделенийФормы.СтруктураПредприятияПриЗаписиНаСервере(Форма, Отказ, ТекущийОбъект, ПараметрыЗаписи);
	
КонецПроцедуры

#КонецОбласти 

#Область ПереносДанныхИзПрежнихПрограмм

Процедура ПозицииРуководителейПодразделенийПослеЗагрузки(Объект, ОбъектНайден, ПараметрыОбъекта, Параметры, Отказ) Экспорт
	
	Если Не РуководителиПодразделенийИспользуются() Тогда
		Возврат;
	КонецЕсли;
	
	Если ПараметрыОбъекта <> Неопределено Тогда
		
		СтруктурноеПодразделение = Неопределено;
		
		Запрос = Новый Запрос;
		Запрос.УстановитьПараметр("ПодразделениеОрганизации", ПараметрыОбъекта.Получить("Подразделение"));
		
		Запрос.Текст =
		"ВЫБРАТЬ
		|	СтруктураПредприятия.Ссылка КАК Ссылка
		|ИЗ
		|	Справочник.СтруктураПредприятия КАК СтруктураПредприятия
		|ГДЕ
		|	СтруктураПредприятия.Источник = &ПодразделениеОрганизации";
		
		Выборка = Запрос.Выполнить().Выбрать();
		Если Выборка.Следующий() Тогда
			СтруктурноеПодразделение = Выборка.Ссылка;
		КонецЕсли;
		
		Если СтруктурноеПодразделение <> Неопределено И ЗначениеЗаполнено(ПараметрыОбъекта.Получить("ПозицияШтатногоРасписания")) Тогда
			НаборЗаписей = РегистрыСведений.ПозицииРуководителейПодразделений.СоздатьНаборЗаписей();
			НаборЗаписей.Отбор.Подразделение.Установить(СтруктурноеПодразделение);
			НоваяЗапись = НаборЗаписей.Добавить();
			НоваяЗапись.Подразделение = СтруктурноеПодразделение;
			НоваяЗапись.ПозицияШтатногоРасписания = ПараметрыОбъекта.Получить("ПозицияШтатногоРасписания");
			НаборЗаписей.Записать();
		КонецЕсли;
		
	КонецЕсли;
	
	Отказ = Истина;
	
КонецПроцедуры

#КонецОбласти 

#Область КабинетСотрудника

Функция ПодразделенияПозицийРуководителей(Позиции) Экспорт

	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Позиции", Позиции);
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ПозицииРуководителейПодразделений.Подразделение КАК Подразделение
	|ИЗ
	|	РегистрСведений.ПозицииРуководителейПодразделений КАК ПозицииРуководителейПодразделений
	|ГДЕ
	|	ПозицииРуководителейПодразделений.ПозицияШтатногоРасписания В(&Позиции)";
	
	Возврат Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Подразделение");

КонецФункции


#КонецОбласти 

Функция ПодразделенияПозицииРуководителя(ПозицияРуководителя) Экспорт

	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ПозицияРуководителя", ПозицияРуководителя);
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ПозицииРуководителей.Подразделение
		|ИЗ
		|	РегистрСведений.ПозицииРуководителейПодразделений КАК ПозицииРуководителей
		|ГДЕ
		|	ПозицииРуководителей.ПозицияШтатногоРасписания = &ПозицияРуководителя";
	
	Возврат Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Подразделение");
	
КонецФункции

#Область КадровыеДанныеСотрудниковСотрудника

Функция ДобавитьПолеСведенийОРуководителяхСотрудников(ИмяПоля, ТекстыОписанияПолей, ИсточникиДанных) Экспорт
	
	ДобавленоПолеСведений = Ложь;
	Если НеобходимыСведенияОРуководителяхСотрудников(ИмяПоля) Тогда
		
		ДобавленоПолеСведений = Истина;
		ИсточникиДанных.Вставить("СведенияОРуководителяхСотрудников", Истина);
		
		КадровыйУчет.ДобавитьВКоллекциюИмяКадровыхДанных(ИсточникиДанных, "БазовыеКадровыеДанныеСотрудников", "ДолжностьПоШтатномуРасписанию");
		
		ПутьКДанным = ПутьКДаннымСведенийОРуководителяхСотрудников(ИмяПоля);
		ТекстыОписанияПолей.Добавить(ПутьКДанным + " КАК " + ИмяПоля);
		
	КонецЕсли;
	
	Возврат ДобавленоПолеСведений;
	
КонецФункции

Процедура ДобавитьТекстЗапросаВТСведенияОРуководителяхСотрудников(Запрос, ТолькоРазрешенные, ОписательВременнойТаблицыОтборов, ПоляОтбораПериодическихДанных, ИсточникиДанных) Экспорт
	
	Если ИсточникиДанных.Получить("СведенияОРуководителяхСотрудников") = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ИмяВТСведенияКадровойИсторииСотрудников = ИсточникиДанных.Получить("ИмяВТСведенияКадровойИсторииСотрудников");
	Если ИмяВТСведенияКадровойИсторииСотрудников = Неопределено Тогда
		ИмяВТСведенияКадровойИсторииСотрудников = "ВТКадроваяИсторияСотрудников";
	КонецЕсли;
	
	ЗапросыВТСведенияОРуководителяхСотрудников = Новый Массив;
	
	ЗапросВТМестаПозицийВСтруктуреПредприятия = ОрганизационнаяСтруктура.ЗапросВТМестаПозицийВСтруктуреПредприятия(
		ТолькоРазрешенные, ИмяВТСведенияКадровойИсторииСотрудников, "Период", "ДолжностьПоШтатномуРасписанию");
	
	ЗапросыВТСведенияОРуководителяхСотрудников.Добавить(ЗапросВТМестаПозицийВСтруктуреПредприятия.Текст);
	
	ЗапросыВТСведенияОРуководителяхСотрудников.Добавить(
		"ВЫБРАТЬ
		|	МестаПозицийВСтруктуреПредприятия.Период КАК Период,
		|	МестаПозицийВСтруктуреПредприятия.ПозицияШтатногоРасписания КАК ДолжностьПоШтатномуРасписанию,
		|	ПозицииРуководителейПодразделений.ПозицияШтатногоРасписания КАК ДолжностьРуководителяСтруктурногоПодразделения
		|ПОМЕСТИТЬ ВТДолжностиРуководителейСтруктурныхПодразделений
		|ИЗ
		|	ВТМестаПозицийВСтруктуреПредприятия КАК МестаПозицийВСтруктуреПредприятия
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПозицииРуководителейПодразделений КАК ПозицииРуководителейПодразделений
		|		ПО МестаПозицийВСтруктуреПредприятия.СтруктурноеПодразделение = ПозицииРуководителейПодразделений.Подразделение");
		
	ЗапросВТДанныеСотрудниковПозицийШтатногоРасписания =
		КадровыйУчетРасширенный.ЗапросВТДанныеСотрудниковПозицийШтатногоРасписания(
			ТолькоРазрешенные, "ВТДолжностиРуководителейСтруктурныхПодразделений", "Период",
			"ДолжностьРуководителяСтруктурногоПодразделения");
	
	ЗапросыВТСведенияОРуководителяхСотрудников.Добавить(ЗапросВТДанныеСотрудниковПозицийШтатногоРасписания.Текст);
	
	ЗапросыВТСведенияОРуководителяхСотрудников.Добавить(
		"ВЫБРАТЬ
		|	ВсеРуководителиСтруктурныхПодразделений.Период КАК Период,
		|	ВсеРуководителиСтруктурныхПодразделений.ПозицияШтатногоРасписания КАК ПозицияШтатногоРасписания,
		|	МИНИМУМ(ВсеРуководителиСтруктурныхПодразделений.ДатаПриема) КАК ДатаПриема
		|ПОМЕСТИТЬ ВТРанниеДатыПриемаРуководителейСтруктурныхПодразделений
		|ИЗ
		|	ВТДанныеСотрудниковПозицийШтатногоРасписания КАК ВсеРуководителиСтруктурныхПодразделений
		|СГРУППИРОВАТЬ ПО
		|	ВсеРуководителиСтруктурныхПодразделений.Период,
		|	ВсеРуководителиСтруктурныхПодразделений.ПозицияШтатногоРасписания
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ДолжностиРуководителейСтруктурныхПодразделений.Период КАК Период,
		|	ДолжностиРуководителейСтруктурныхПодразделений.ДолжностьПоШтатномуРасписанию КАК ДолжностьПоШтатномуРасписанию,
		|	ДолжностиРуководителейСтруктурныхПодразделений.ДолжностьРуководителяСтруктурногоПодразделения КАК
		|		ДолжностьРуководителяСтруктурногоПодразделения,
		|	МАКСИМУМ(ВсеРуководителиСтруктурныхПодразделений.Сотрудник) КАК РуководительСтруктурногоПодразделения
		|ПОМЕСТИТЬ ВТСведенияОРуководителяхСотрудников
		|ИЗ
		|	ВТДолжностиРуководителейСтруктурныхПодразделений КАК ДолжностиРуководителейСтруктурныхПодразделений
		|		{ЛЕВОЕ СОЕДИНЕНИЕ ВТРанниеДатыПриемаРуководителейСтруктурныхПодразделений КАК
		|			РанниеДатыПриемаРуководителейСтруктурныхПодразделений
		|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТДанныеСотрудниковПозицийШтатногоРасписания КАК ВсеРуководителиСтруктурныхПодразделений
		|			ПО РанниеДатыПриемаРуководителейСтруктурныхПодразделений.Период = ВсеРуководителиСтруктурныхПодразделений.Период
		|			И
		|				РанниеДатыПриемаРуководителейСтруктурныхПодразделений.ПозицияШтатногоРасписания = ВсеРуководителиСтруктурныхПодразделений.ПозицияШтатногоРасписания
		|			И
		|				РанниеДатыПриемаРуководителейСтруктурныхПодразделений.ДатаПриема = ВсеРуководителиСтруктурныхПодразделений.ДатаПриема
		|		ПО ДолжностиРуководителейСтруктурныхПодразделений.Период = РанниеДатыПриемаРуководителейСтруктурныхПодразделений.Период
		|		И
		|			ДолжностиРуководителейСтруктурныхПодразделений.ДолжностьРуководителяСтруктурногоПодразделения = РанниеДатыПриемаРуководителейСтруктурныхПодразделений.ПозицияШтатногоРасписания}
		|СГРУППИРОВАТЬ ПО
		|	ДолжностиРуководителейСтруктурныхПодразделений.Период,
		|	ДолжностиРуководителейСтруктурныхПодразделений.ДолжностьПоШтатномуРасписанию,
		|	ДолжностиРуководителейСтруктурныхПодразделений.ДолжностьРуководителяСтруктурногоПодразделения");
	
	ЧастиИсходногоЗапроса = СтрРазделить(Запрос.Текст, ";");
	ЧастиИсходногоЗапроса.Вставить(ЧастиИсходногоЗапроса.Количество() - 1,
		СтрСоединить(ЗапросыВТСведенияОРуководителяхСотрудников, ЗарплатаКадрыОбщиеНаборыДанных.РазделительЗапросов()));
	
	ЧастиЗапроса = Новый Массив;
	ЧастиЗапроса.Добавить(СтрСоединить(ЧастиИсходногоЗапроса, ЗарплатаКадрыОбщиеНаборыДанных.РазделительЗапросов()));
	
	ЧастиЗапроса.Добавить(
		"	{ЛЕВОЕ СОЕДИНЕНИЕ ВТСведенияОРуководителяхСотрудников КАК СведенияОРуководителяхСотрудников
		|	ПО ТаблицаОтборов." + ОписательВременнойТаблицыОтборов.ИмяПоляПериод + " = СведенияОРуководителяхСотрудников.Период
		|	И КадроваяИсторияСотрудников.ДолжностьПоШтатномуРасписанию = СведенияОРуководителяхСотрудников.ДолжностьПоШтатномуРасписанию}");
	
	Запрос.Текст = СтрСоединить(ЧастиЗапроса, Символы.ПС);
	
	КадровыйУчет.ДобавитьВКоллекциюИмяКадровыхДанных(
		ИсточникиДанных, "ВТКУничтожению", "ВТМестаПозицийВСтруктуреПредприятия");
	
	КадровыйУчет.ДобавитьВКоллекциюИмяКадровыхДанных(
		ИсточникиДанных, "ВТКУничтожению", "ВТДолжностиРуководителейСтруктурныхПодразделений");
	
	КадровыйУчет.ДобавитьВКоллекциюИмяКадровыхДанных(
		ИсточникиДанных, "ВТКУничтожению", "ВТДанныеСотрудниковПозицийШтатногоРасписания");
	
	КадровыйУчет.ДобавитьВКоллекциюИмяКадровыхДанных(
		ИсточникиДанных, "ВТКУничтожению", "ВТРанниеДатыПриемаРуководителейСтруктурныхПодразделений");
	
	КадровыйУчет.ДобавитьВКоллекциюИмяКадровыхДанных(
		ИсточникиДанных, "ВТКУничтожению", "ВТСведенияОРуководителяхСотрудников");
	
КонецПроцедуры

Процедура ЗаполнитьПоляПредставленийКадровыхДанныхСотрудников(ДополнительныеПоляПредставлений, ПутьКПолямСотрудника) Экспорт
	
	ОписаниеПоля = ДополнительныеПоляПредставлений.Добавить();
	ОписаниеПоля.ИмяПоля = "РуководительСтруктурногоПодразделения";
	ОписаниеПоля.ПустоеЗначениеНаЯзыкеЗапросов = "ЗНАЧЕНИЕ(Справочник.Сотрудники.ПустаяСсылка)";
	ОписаниеПоля.ПутьПоляСКД = ПутьКПолямСотрудника + ".РуководительСтруктурногоПодразделения";
	
	ОписаниеПоля = ДополнительныеПоляПредставлений.Добавить();
	ОписаниеПоля.ИмяПоля = "ДолжностьРуководителяСтруктурногоПодразделения";
	ОписаниеПоля.ПустоеЗначениеНаЯзыкеЗапросов = "ЗНАЧЕНИЕ(Справочник.ШтатноеРасписание.ПустаяСсылка)";
	ОписаниеПоля.ПутьПоляСКД = ПутьКПолямСотрудника + ".ДолжностьРуководителяСтруктурногоПодразделения";
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти 

#Область СлужебныеПроцедурыИФункции

// Описание параметров для СоздатьВТРуководителиПодразделений()
// Возвращаемое значение:
// 	Структура - параметры для СоздатьВТРуководителиПодразделений() со значениями по умолчанию.
//
Функция ПараметрыДляСоздатьВТРуководителиПодразделений()

	СтруктураПараметров = Новый Структура;
	
	СтруктураПараметров.Вставить("ДатаСреза", ТекущаяДатаСеанса());
	СтруктураПараметров.Вставить("НаследованиеРуководителей", Ложь);
	СтруктураПараметров.Вставить("ИмяВыходнойТаблицы", "ВТРуководителиПодразделений");
	
	Возврат СтруктураПараметров;
	
КонецФункции

// Создает временную таблицу с руководителями сотрудников
// Параметры:
//	МенеджерВременныхТаблиц - МенеджерВременныхТаблиц - менеджер временных таблиц
//	ИмяВТПодразделения		- Строка - имя временной таблицы, в которой содержатся подразделения, для которых необходимо получить руководителей.
//	ПараметрыСоздания		- Структура - см. ПараметрыДляСоздатьВТРуководителиПодразделений()
//
Процедура СоздатьВТРуководителиПодразделений(МенеджерВременныхТаблиц, ИмяВТПодразделения, ПараметрыСоздания)

	УдалитьВТ = Новый Массив;
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	
	Если ПараметрыСоздания.НаследованиеРуководителей Тогда
		СоздатьВТПозицииРуководителейПодразделенийСУчетомВышестоящихПодразделений(Запрос.МенеджерВременныхТаблиц, ИмяВТПодразделения);
	Иначе
		СоздатьВТПозицииРуководителейПодразделенийДляНепосредственноСамихПодразделений(Запрос.МенеджерВременныхТаблиц, ИмяВТПодразделения);
	КонецЕсли;
	УдалитьВТ.Добавить("ВТПодразделенияИПозицииРуководителей");
	
	// Получаем сотрудников
	
	Запрос.Текст =
	    "ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ВТПодразделенияИПозицииРуководителей.ПозицияРуководителя КАК Позиция
		|ИЗ
		|	ВТПодразделенияИПозицииРуководителей КАК ВТПодразделенияИПозицииРуководителей";
	
	РезультатЗапросаПозицийРуководителей = Запрос.Выполнить();
	
	СоздатьВТСотрудникиНаПозицияхРуководителей(
		Запрос.МенеджерВременныхТаблиц,
		ОбщегоНазначения.ВыгрузитьКолонку(РезультатЗапросаПозицийРуководителей.Выгрузить(), "Позиция"),
		ПараметрыСоздания.ДатаСреза,
		"ВТСотрудникиНаПозицияхРуководителейВнутренний");
		
	УдалитьВТ.Добавить("ВТСотрудникиНаПозицияхРуководителейВнутренний");
	
	Запрос.Текст =
		"ВЫБРАТЬ
		|	Подразделения.Подразделение КАК Подразделение,
		|	СотрудникиРуководители.Сотрудник КАК Руководитель,
		|	ВТПодразделенияИПозицииРуководителей.ПодразделениеРуководителя КАК ПодразделениеРуководителя,
		|	ВТПодразделенияИПозицииРуководителей.ПозицияРуководителя КАК ПозицияРуководителя,
		|	СотрудникиРуководители.ФизическоеЛицо КАК ФизическоеЛицо
		|ПОМЕСТИТЬ #ВТРуководителиПодразделений
		|ИЗ
		|	#ВТПодразделения КАК Подразделения
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТПодразделенияИПозицииРуководителей КАК ВТПодразделенияИПозицииРуководителей
		|			ЛЕВОЕ СОЕДИНЕНИЕ ВТСотрудникиНаПозицияхРуководителейВнутренний КАК СотрудникиРуководители
		|			ПО ВТПодразделенияИПозицииРуководителей.ПозицияРуководителя = СотрудникиРуководители.Позиция
		|		ПО Подразделения.Подразделение = ВТПодразделенияИПозицииРуководителей.Подразделение";
	
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "#ВТПодразделения", ИмяВТПодразделения);
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "#ВТРуководителиПодразделений", ПараметрыСоздания.ИмяВыходнойТаблицы);
	
	Запрос.Выполнить();
	
	ЗарплатаКадры.УничтожитьВТ(Запрос.МенеджерВременныхТаблиц, УдалитьВТ);
	
КонецПроцедуры

Процедура СоздатьВТПозицииРуководителейПодразделенийДляНепосредственноСамихПодразделений(МенеджерВременныхТаблиц, ИмяВТПодразделений, ИмяВыходнойТаблицы = "ВТПодразделенияИПозицииРуководителей")

	УдалитьВТ = Новый Массив;
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	
	ЗапросПозицииРуководителей = ЗапросПозицииРуководителейПодразделений(ИмяВТПодразделений);
	ЗарплатаКадры.СоздатьВТПоЗапросу(Запрос.МенеджерВременныхТаблиц, ЗапросПозицииРуководителей, "ВТПозицииРуководителейПодразделений");
	УдалитьВТ.Добавить("ВТПозицииРуководителейПодразделений");
	
	Запрос.Текст =
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ВТПодразделения.Подразделение КАК Подразделение,
		|	ПозицииРуководителейПодразделений.ПозицияРуководителя КАК ПозицияРуководителя,
		|	ВТПодразделения.Подразделение КАК ПодразделениеРуководителя
		|ПОМЕСТИТЬ #ВТПодразделенияИПозицииРуководителей
		|ИЗ
		|	#ВТИсходныеПодразделения КАК ВТПодразделения
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТПозицииРуководителейПодразделений КАК ПозицииРуководителейПодразделений
		|		ПО ВТПодразделения.Подразделение = ПозицииРуководителейПодразделений.Подразделение
		|ГДЕ
		|	ПозицииРуководителейПодразделений.ПозицияРуководителя <> ЗНАЧЕНИЕ(Справочник.ШтатноеРасписание.ПустаяСсылка)";
	
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "#ВТИсходныеПодразделения", ИмяВТПодразделений);
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "#ВТПодразделенияИПозицииРуководителей", ИмяВыходнойТаблицы);
	
	Запрос.Выполнить();
	
	ЗарплатаКадры.УничтожитьВТ(Запрос.МенеджерВременныхТаблиц, УдалитьВТ);

КонецПроцедуры

Процедура СоздатьВТПозицииРуководителейПодразделенийСУчетомВышестоящихПодразделений(МенеджерВременныхТаблиц, ИмяВТПодразделений, ИмяВыходнойТаблицы = "ВТПодразделенияИПозицииРуководителей")

	УдалитьВТ = Новый Массив;
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	
	// Включаем родителей, от которых могут наследоваться руководители.
	
	Запрос.Текст =
		"ВЫБРАТЬ
		|	ПодчиненностьСтруктурныхЕдиниц.СтруктурнаяЕдиница КАК Подразделение,
		|	ПодчиненностьСтруктурныхЕдиниц.ВышестоящаяСтруктурнаяЕдиница КАК ВышестоящееПодразделение,
		|	ПодчиненностьСтруктурныхЕдиниц.Уровень КАК Уровень
		|ПОМЕСТИТЬ ВТПодразделенияИРодители
		|ИЗ
		|	#ВТПодразделения КАК Подразделения
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ПодчиненностьСтруктурныхЕдиниц КАК ПодчиненностьСтруктурныхЕдиниц
		|		ПО Подразделения.Подразделение = ПодчиненностьСтруктурныхЕдиниц.СтруктурнаяЕдиница
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ВТПодразделенияИРодители.ВышестоящееПодразделение КАК Подразделение
		|ПОМЕСТИТЬ ВТПодразделенияРуководителиОтборВнутренний
		|ИЗ
		|	ВТПодразделенияИРодители КАК ВТПодразделенияИРодители";
	
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "#ВТПодразделения", ИмяВТПодразделений);
	
	Запрос.Выполнить();
	
	УдалитьВТ.Добавить("ВТПодразделенияИРодители");
	УдалитьВТ.Добавить("ВТПодразделенияРуководителиОтборВнутренний");
	
	// Получаем позиции руководителей.
	
	ЗапросПозицииРуководителей = ЗапросПозицииРуководителейПодразделений("ВТПодразделенияРуководителиОтборВнутренний");
	ЗарплатаКадры.СоздатьВТПоЗапросу(Запрос.МенеджерВременныхТаблиц, ЗапросПозицииРуководителей, "ВТПозицииРуководителейПодразделений");
	УдалитьВТ.Добавить("ВТПозицииРуководителейПодразделений");
	
	// Наследование позиций руководителей.
	
	Запрос.Текст =
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ВТПодразделенияИРодители.Подразделение КАК Подразделение,
		|	ПозицииРуководителейПодразделений.ПозицияРуководителя КАК ПозицияРуководителя,
		|	ВТПодразделенияИРодители.ВышестоящееПодразделение КАК ВышестоящееПодразделение,
		|	ВТПодразделенияИРодители.Уровень КАК Уровень
		|ПОМЕСТИТЬ ВТПодразделенияИРодителиРуководители
		|ИЗ
		|	ВТПодразделенияИРодители КАК ВТПодразделенияИРодители
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТПозицииРуководителейПодразделений КАК ПозицииРуководителейПодразделений
		|		ПО ВТПодразделенияИРодители.ВышестоящееПодразделение = ПозицииРуководителейПодразделений.Подразделение
		|ГДЕ
		|	ПозицииРуководителейПодразделений.ПозицияРуководителя <> ЗНАЧЕНИЕ(Справочник.ШтатноеРасписание.ПустаяСсылка)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТПодразделенияИРодителиРуководители.Подразделение КАК Подразделение,
		|	МИНИМУМ(ВТПодразделенияИРодителиРуководители.Уровень) КАК Уровень
		|ПОМЕСТИТЬ ВТУказателиПодразделений
		|ИЗ
		|	ВТПодразделенияИРодителиРуководители КАК ВТПодразделенияИРодителиРуководители
		|
		|СГРУППИРОВАТЬ ПО
		|	ВТПодразделенияИРодителиРуководители.Подразделение
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТПодразделенияИРодителиРуководители.Подразделение КАК Подразделение,
		|	ВТПодразделенияИРодителиРуководители.ПозицияРуководителя КАК ПозицияРуководителя,
		|	ВТПодразделенияИРодителиРуководители.ВышестоящееПодразделение КАК ПодразделениеРуководителя
		|ПОМЕСТИТЬ #ВТПодразделенияИПозицииРуководителей
		|ИЗ
		|	ВТПодразделенияИРодителиРуководители КАК ВТПодразделенияИРодителиРуководители
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТУказателиПодразделений КАК ВТУказателиПодразделений
		|		ПО ВТПодразделенияИРодителиРуководители.Подразделение = ВТУказателиПодразделений.Подразделение
		|			И ВТПодразделенияИРодителиРуководители.Уровень = ВТУказателиПодразделений.Уровень";
	
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "#ВТПодразделенияИПозицииРуководителей",ИмяВыходнойТаблицы);
	
	Запрос.Выполнить();
	
	УдалитьВТ.Добавить("ВТПодразделенияИРодителиРуководители");
	УдалитьВТ.Добавить("ВТУказателиПодразделений");
	
	ЗарплатаКадры.УничтожитьВТ(Запрос.МенеджерВременныхТаблиц, УдалитьВТ);

КонецПроцедуры

Процедура СоздатьВТСотрудникиНаПозицияхРуководителей(МенеджерВременныхТаблиц, МассивПозиций, ДатаСреза = Неопределено, ИмяВыходнойТаблицы = "ВТСотрудникиНаПозицияхРуководителей")

	УдалитьВТ = Новый Массив;
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	
	Если Не ЗначениеЗаполнено(ДатаСреза) Тогда
		ДатаСреза = ТекущаяДатаСеанса();
	КонецЕсли;
	
	ПараметрыПолученияСотрудников = КадровыйУчет.ПараметрыПолученияСотрудниковОрганизацийПоСпискуФизическихЛиц();
	ПараметрыПолученияСотрудников.НачалоПериода = ДатаСреза;
	ПараметрыПолученияСотрудников.ОкончаниеПериода = ДатаСреза;
	ПараметрыПолученияСотрудников.КадровыеДанные = "ДолжностьПоШтатномуРасписанию, Состояние";
	
	ЗарплатаКадрыОбщиеНаборыДанных.ДобавитьВКоллекциюОтбор(
		ПараметрыПолученияСотрудников.Отборы,
		"ДолжностьПоШтатномуРасписанию",
		"В",
		МассивПозиций);
	
	КадровыйУчет.СоздатьВТСотрудникиОрганизации(Запрос.МенеджерВременныхТаблиц, Истина, ПараметрыПолученияСотрудников);
	УдалитьВТ.Добавить("ВТСотрудникиОрганизации");
	
	Запрос.Текст =
		"ВЫБРАТЬ
		|	СотрудникиОрганизации.Сотрудник КАК Сотрудник,
		|	СотрудникиОрганизации.ДолжностьПоШтатномуРасписанию КАК Позиция,
		|	ВЫБОР
		|		КОГДА СотрудникиОрганизации.Состояние = ЗНАЧЕНИЕ(Перечисление.СостоянияСотрудника.Работа)
		|				ИЛИ СотрудникиОрганизации.Состояние = ЗНАЧЕНИЕ(Перечисление.СостоянияСотрудника.РаботаВОтпускеПоУходуЗаРебенком)
		|			ТОГДА 0
		|		ИНАЧЕ 1
		|	КОНЕЦ КАК Приоритет
		|ПОМЕСТИТЬ ВТПриоритетРуководителей
		|ИЗ
		|	ВТСотрудникиОрганизации КАК СотрудникиОрганизации
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТПриоритетРуководителей.Позиция КАК Позиция,
		|	МИНИМУМ(ВТПриоритетРуководителей.Приоритет) КАК Приоритет
		|ПОМЕСТИТЬ ВТПриоритетСостояния
		|ИЗ
		|	ВТПриоритетРуководителей КАК ВТПриоритетРуководителей
		|
		|СГРУППИРОВАТЬ ПО
		|	ВТПриоритетРуководителей.Позиция
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	МИНИМУМ(ВТПриоритетРуководителей.Сотрудник) КАК Сотрудник,
		|	ВТПриоритетРуководителей.Позиция КАК Позиция
		|ПОМЕСТИТЬ ВТСотрудникиНаПозицияхРуководителейБезФизическогоЛица
		|ИЗ
		|	ВТПриоритетРуководителей КАК ВТПриоритетРуководителей
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТПриоритетСостояния КАК ВТПриоритетСостояния
		|		ПО ВТПриоритетРуководителей.Позиция = ВТПриоритетСостояния.Позиция
		|			И ВТПриоритетРуководителей.Приоритет = ВТПриоритетСостояния.Приоритет
		|
		|СГРУППИРОВАТЬ ПО
		|	ВТПриоритетРуководителей.Позиция
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТСотрудникиНаПозицияхРуководителей.Сотрудник КАК Сотрудник,
		|	ВТСотрудникиНаПозицияхРуководителей.Позиция КАК Позиция,
		|	ВТСотрудникиОрганизации.ФизическоеЛицо КАК ФизическоеЛицо
		|ПОМЕСТИТЬ #ВТСотрудникиНаПозицияхРуководителей
		|ИЗ
		|	ВТСотрудникиНаПозицияхРуководителейБезФизическогоЛица КАК ВТСотрудникиНаПозицияхРуководителей
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТСотрудникиОрганизации КАК ВТСотрудникиОрганизации
		|		ПО ВТСотрудникиНаПозицияхРуководителей.Сотрудник = ВТСотрудникиОрганизации.Сотрудник";
	
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "#ВТСотрудникиНаПозицияхРуководителей", ИмяВыходнойТаблицы);
	
	Запрос.Выполнить();
	
	ЗарплатаКадры.УничтожитьВТ(Запрос.МенеджерВременныхТаблиц, УдалитьВТ);

КонецПроцедуры

Функция ЗапросПозицииРуководителейПодразделений(ИмяВТОтборПоПодразделениям)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ПозицииРуководителейПодразделений.Подразделение КАК Подразделение,
		|	ПозицииРуководителейПодразделений.ПозицияШтатногоРасписания КАК ПозицияРуководителя
		|ИЗ
		|	РегистрСведений.ПозицииРуководителейПодразделений КАК ПозицииРуководителейПодразделений
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ #ВТПодразделения КАК Подразделения
		|		ПО ПозицииРуководителейПодразделений.Подразделение = Подразделения.Подразделение";
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "#ВТПодразделения", ИмяВТОтборПоПодразделениям);
	
	Возврат Запрос;
	
КонецФункции

Процедура СоздатьВТКадровыеДанныеИПодразделенияРуководителей(МенеджерВременныхТаблиц, ДатаСреза, НаследованиеРуководителей, ИмяВТКадровыеДанныеСотрудников = "ВТКадровыеДанныеСотрудниковВнутренний")

	УдалитьВТ = Новый Массив;
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	Организации.Ссылка КАК Организация,
		|	&Период КАК Период
		|ПОМЕСТИТЬ ВТОрганизацииОтборВнутренний
		|ИЗ
		|	Справочник.Организации КАК Организации";
	Запрос.УстановитьПараметр("Период", ДатаСреза);
	
	Запрос.Выполнить();
	УдалитьВТ.Добавить("ВТОрганизацииОтборВнутренний");
	
	СоздатьВТРуководителиОрганизаций(Запрос.МенеджерВременныхТаблиц, ДатаСреза);
	УдалитьВТ.Добавить("ВТРуководителиОрганизаций");
	
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	КадровыеДанныеСотрудников.Сотрудник КАК Руководитель,
		|	КадровыеДанныеСотрудников.ДолжностьПоШтатномуРасписанию КАК Позиция,
		|	ПозицииРуководителейПодразделений.Подразделение КАК РуководимоеПодразделение
		|ПОМЕСТИТЬ ВТРуководителиВнутренний
		|ИЗ
		|	РегистрСведений.ПозицииРуководителейПодразделений КАК ПозицииРуководителейПодразделений
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ #ВТКадровыеДанныеСотрудников КАК КадровыеДанныеСотрудников
		|		ПО ПозицииРуководителейПодразделений.ПозицияШтатногоРасписания = КадровыеДанныеСотрудников.ДолжностьПоШтатномуРасписанию
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	РуководителиОрганизаций.Руководитель,
		|	КадровыеДанныеСотрудников.ДолжностьПоШтатномуРасписанию,
		|	СтруктураПредприятия.Ссылка
		|ИЗ
		|	ВТРуководителиОрганизаций КАК РуководителиОрганизаций
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.СтруктураПредприятия КАК СтруктураПредприятия
		|		ПО РуководителиОрганизаций.Организация = СтруктураПредприятия.Источник
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ #ВТКадровыеДанныеСотрудников КАК КадровыеДанныеСотрудников
		|		ПО РуководителиОрганизаций.Руководитель = КадровыеДанныеСотрудников.Сотрудник";
	
	УдалитьВТ.Добавить("ВТРуководителиВнутренний");
	
	Если НаследованиеРуководителей Тогда
		ПодчиненныеПодразделенияТекст = 
			"ВЫБРАТЬ
			|	Руководители.Руководитель КАК Руководитель,
			|	Руководители.Позиция КАК ПозицияРуководителя,
			|	Руководители.РуководимоеПодразделение КАК РуководимоеПодразделение,
			|	ПодчиненностьСтруктурныхЕдиниц.СтруктурнаяЕдиница КАК ПодчиненноеПодразделение
			|ПОМЕСТИТЬ ВТКадровыеДанныеИПодразделенияРуководителей
			|ИЗ
			|	ВТРуководителиВнутренний КАК Руководители
			|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ПодчиненностьСтруктурныхЕдиниц КАК ПодчиненностьСтруктурныхЕдиниц
			|		ПО Руководители.РуководимоеПодразделение = ПодчиненностьСтруктурныхЕдиниц.ВышестоящаяСтруктурнаяЕдиница";
	Иначе
		ПодчиненныеПодразделенияТекст = 
			"ВЫБРАТЬ
			|	Руководители.Руководитель КАК Руководитель,
			|	Руководители.Позиция КАК ПозицияРуководителя,
			|	Руководители.РуководимоеПодразделение КАК РуководимоеПодразделение,
			|	Руководители.РуководимоеПодразделение КАК ПодчиненноеПодразделение
			|ПОМЕСТИТЬ ВТКадровыеДанныеИПодразделенияРуководителей
			|ИЗ
			|	ВТРуководителиВнутренний КАК Руководители";
	КонецЕсли;
	
	ЗарплатаКадрыОбщиеНаборыДанных.ОбъединитьТекстыЗапросов(Запрос.Текст, ПодчиненныеПодразделенияТекст);
	
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "#ВТКадровыеДанныеСотрудников", ИмяВТКадровыеДанныеСотрудников);
	
	Запрос.Выполнить();
	
	ЗарплатаКадры.УничтожитьВТ(Запрос.МенеджерВременныхТаблиц, УдалитьВТ);
	
КонецПроцедуры

Процедура СоздатьВТРуководителиОрганизаций(МенеджерВременныхТаблиц, ДатаСреза = Неопределено)

	Если Не ЗначениеЗаполнено(ДатаСреза) Тогда
		ДатаСреза = ТекущаяДатаСеанса();
	КонецЕсли;
	
	УдалитьВТ = Новый Массив;
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	
	РуководителиОрганизаций = ТаблицаРуководителейОрганизаций(ДатаСреза);
	
	Запрос.Текст =
		"ВЫБРАТЬ
		|	РуководителиОрганизаций.Организация КАК Организация,
		|	РуководителиОрганизаций.РуководительФизическоеЛицо КАК РуководительФизическоеЛицо,
		|	РуководителиОрганизаций.Руководитель КАК Руководитель
		|ПОМЕСТИТЬ ВТРуководителиОрганизаций
		|ИЗ
		|	&РуководителиОрганизаций КАК РуководителиОрганизаций";

	Запрос.УстановитьПараметр("РуководителиОрганизаций", РуководителиОрганизаций);
	
	Запрос.Выполнить();
	
	ЗарплатаКадры.УничтожитьВТ(Запрос.МенеджерВременныхТаблиц, УдалитьВТ);
		
КонецПроцедуры

Функция ТаблицаРуководителейОрганизаций(ДатаСреза)

	ТаблицаРуководителейОрганизаций = Новый ТаблицаЗначений;
	ТаблицаРуководителейОрганизаций.Колонки.Добавить("Организация", Новый ОписаниеТипов("СправочникСсылка.Организации"));
	ТаблицаРуководителейОрганизаций.Колонки.Добавить("РуководительФизическоеЛицо", Новый ОписаниеТипов("СправочникСсылка.ФизическиеЛица"));
	ТаблицаРуководителейОрганизаций.Колонки.Добавить("Руководитель", Новый ОписаниеТипов("СправочникСсылка.Сотрудники"));
	
	Если ОбщегоНазначения.ПодсистемаСуществует("ЗарплатаКадрыПриложения.СведенияОбОтветственныхЛицах") Тогда
		МодульСведенияОбОтветственныхЛицах = ОбщегоНазначения.ОбщийМодуль("СведенияОбОтветственныхЛицах");
	Иначе
		Возврат ТаблицаРуководителейОрганизаций;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст =
		"ВЫБРАТЬ
		|	Организации.Ссылка КАК Организация
		|ИЗ
		|	Справочник.Организации КАК Организации";
	
	РезультатЗапроса = Запрос.Выполнить();
		
	Выборка = РезультатЗапроса.Выбрать();
	Пока Выборка.Следующий() Цикл
		// Получаем физическое лицо руководителя.
		СтруктураСведений = МодульСведенияОбОтветственныхЛицах.СведенияОбОтветственныхЛицах(Выборка.Организация, "Руководитель", ДатаСреза);
		
		НоваяСтрока = ТаблицаРуководителейОрганизаций.Добавить();
		НоваяСтрока.Организация = Выборка.Организация;
		НоваяСтрока.РуководительФизическоеЛицо = СтруктураСведений.Руководитель;
		
		// Получаем сотрудника руководителя.
		ТаблицаСотрудников = КадровыйУчет.ОсновныеСотрудникиФизическихЛиц(НоваяСтрока.РуководительФизическоеЛицо, Ложь, НоваяСтрока.Организация, ДатаСреза);
		
		НайденныеСтроки = ТаблицаСотрудников.Найти(НоваяСтрока.РуководительФизическоеЛицо, "ФизическоеЛицо");
		Если НайденныеСтроки <> Неопределено Тогда
			НоваяСтрока.Руководитель = НайденныеСтроки.Сотрудник;
		КонецЕсли;
	КонецЦикла; 
	
	Возврат ТаблицаРуководителейОрганизаций;
	
КонецФункции

#Область КадровыеДанныеСотрудниковСотрудника

Функция НеобходимыСведенияОРуководителяхСотрудников(Знач ИмяПоля)
	
	ИмяПоля = ВРег(ИмяПоля);
	
	Возврат ИмяПоля = ВРег("РуководительСтруктурногоПодразделения")
		Или ИмяПоля = ВРег("ДолжностьРуководителяСтруктурногоПодразделения");
	
КонецФункции

Функция ПутьКДаннымСведенийОРуководителяхСотрудников(Знач ИмяПоля)
	
	ИмяПоляВВерхнемРегистре = ВРег(ИмяПоля);
	
	ПутьКДанным = "";
	
	Если ИмяПоляВВерхнемРегистре = ВРег("РуководительСтруктурногоПодразделения") Тогда
		ПутьКДанным = "СведенияОРуководителяхСотрудников.РуководительСтруктурногоПодразделения";
	ИначеЕсли ИмяПоляВВерхнемРегистре = ВРег("ДолжностьРуководителяСтруктурногоПодразделения") Тогда
		ПутьКДанным = "СведенияОРуководителяхСотрудников.ДолжностьРуководителяСтруктурногоПодразделения";
	КонецЕсли;
	
	Возврат ПутьКДанным;
	
КонецФункции

#КонецОбласти 

#КонецОбласти 