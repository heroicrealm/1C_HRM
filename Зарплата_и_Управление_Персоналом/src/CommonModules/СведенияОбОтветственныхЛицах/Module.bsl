
#Область ПрограммныйИнтерфейс

// Возвращает сведения об ответственных лицах организации.
//
// Параметры:
//	Организация		- СправочникСсылка.Организации - ссылка на организацию.
//	Сведения		- Строка - с идентификаторами, разделенными запятыми.
//	ДатаСведений	- Дата - дата получения сведений.
//
// Возвращаемое значение:
//	Структура - структура со свойствами, совпадающими с параметром «Сведения».
//		Допустимые идентификаторы запрашиваемых значений:
//				(совпадают с колонкой "Ключ" таблицы СведенияОбОтветственныхЛицах.ТаблицаОтветственныхЛицОрганизаций())
//				Руководитель						- Строка - руководитель организации.
//				ГлавныйБухгалтер					- Строка - главный бухгалтер организации.
//				Кассир								- Строка - кассир организации.
//				РуководительКадровойСлужбы			- Строка - Руководитель кадровой службы организации.
//				ОтветственныйЗаВУР 					- Строка - ответственный за военно-учетную работу.
//				ОтветственныйЗаОхрануТруда			- Строка - ответственный за охрану труда.
//
Функция ОтветственныеЛицаОрганизации(Организация, Сведения, ДатаСведений = Неопределено) Экспорт 

	// Формирование структуры-результата
	
	ВозвращаемаяСтруктура = Новый Структура;
	
	ПоддерживаемыеИдентификаторы = ПоддерживаемыеИдентификаторыОтветственныхЛицОрганизаций();
	МассивИдентификаторов = СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок(Сведения, ",", Истина, Истина); 
	
	Для каждого ИдентификаторРоль Из МассивИдентификаторов Цикл
		Если ПоддерживаемыеИдентификаторы.Получить(ИдентификаторРоль) <> Неопределено Тогда
			ВозвращаемаяСтруктура.Вставить(ИдентификаторРоль);
		КонецЕсли;
	КонецЦикла; 
	
	// Получение сведений.
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	СведенияОбОтветственныхЛицахСрезПоследних.Руководитель КАК Руководитель,
		|	СведенияОбОтветственныхЛицахСрезПоследних.ГлавныйБухгалтер КАК ГлавныйБухгалтер,
		|	СведенияОбОтветственныхЛицахСрезПоследних.Кассир КАК Кассир,
		|	СведенияОбОтветственныхЛицахСрезПоследних.РуководительКадровойСлужбы КАК РуководительКадровойСлужбы,
		|	СведенияОбОтветственныхЛицахСрезПоследних.ОтветственныйЗаВУР КАК ОтветственныйЗаВУР,
		|	СведенияОбОтветственныхЛицахСрезПоследних.ОтветственныйЗаОхрануТруда КАК ОтветственныйЗаОхрануТруда
		|ИЗ
		|	РегистрСведений.СведенияОбОтветственныхЛицах.СрезПоследних(&Период, ) КАК СведенияОбОтветственныхЛицахСрезПоследних
		|ГДЕ
		|	СведенияОбОтветственныхЛицахСрезПоследних.Организация = &Организация";
	
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.УстановитьПараметр("Период", ?(ДатаСведений = Неопределено, ТекущаяДатаСеанса(), ДатаСведений));
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ТаблицаСведений = РезультатЗапроса.Выгрузить();
	Если ТаблицаСведений.Количество() = 0 Тогда
		Возврат ВозвращаемаяСтруктура;
	КонецЕсли;
	
	СтруктураСведенийОбОтветственных = ОбщегоНазначения.СтрокаТаблицыЗначенийВСтруктуру(ТаблицаСведений[0]);
	ЗаполнитьЗначенияСвойств(ВозвращаемаяСтруктура, СтруктураСведенийОбОтветственных);
	
	Возврат ВозвращаемаяСтруктура;

КонецФункции

// Возвращает сведения об ответственных лицах организации.
//
// Параметры:
//		Организация - ссылка на организацию.
//		Сведения - строка с идентификаторами, разделенными запятыми.
//		ДатаСведений - дата получения сведений.
//
// Возвращаемое значение:
//		СтруктураДанных - структура со свойствами, совпадающими с параметром «Сведения».
//			Допустимые идентификаторы запрашиваемых значений:
//			Руководитель						- руководитель организации.
//			ДолжностьРуководителя				- должность руководителя.
//			ДолжностьРуководителяСтрокой		- представление должности руководителя.
//
//			ГлавныйБухгалтер					- главный бухгалтер организации.
//
//			Кассир								- кассир организации.
//			ДолжностьКассира					- должность кассира.
//			ДолжностьКассираСтрокой				- представление должности кассира.
//
//			РуководительКадровойСлужбы					- Руководитель кадровой службы организации.
//			ДолжностьРуководителяКадровойСлужбы			- должность руководителя кадровой службы организации.
//			ДолжностьРуководителяКадровойСлужбыСтрокой	- представление должности руководителя кадровой службы организации.
//
//			ОтветственныйЗаВУР 					- ответственный за военно-учетную работу.
//			ДолжностьОтветственногоЗаВУР 		- должность ответственного за военно-учетную работу.
//			ДолжностьОтветственногоЗаВУРСтрокой - представление должности ответственного за военно-учетную работу.
//
Функция СведенияОбОтветственныхЛицах(Организация, Сведения, ДатаСведений = Неопределено) Экспорт

	УдалитьВТ = Новый Массив;
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	&Организация КАК Организация,
	|	&Период КАК Период
	|ПОМЕСТИТЬ ВТСведенияОбОтветственныхЛицахОтбор";
	
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.УстановитьПараметр("Период", ?(ДатаСведений = Неопределено, ТекущаяДатаСеанса(), ДатаСведений));
	
	Запрос.Выполнить();
	
	УдалитьВТ.Добавить("ВТСведенияОбОтветственныхЛицахОтбор");
	
	СоздатьВТСведенияОбОтветственныхЛицах(Запрос.МенеджерВременныхТаблиц, "ВТСведенияОбОтветственныхЛицахОтбор", Сведения, "ВТСведенияОбОтветственныхЛицахВнутренний");
	УдалитьВТ.Добавить("ВТСведенияОбОтветственныхЛицахВнутренний");
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	*
	|ИЗ
	|	ВТСведенияОбОтветственныхЛицахВнутренний КАК СведенияОбОтветственныхЛицах";
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ТаблицаРезультат = РезультатЗапроса.Выгрузить();
	Если ТаблицаРезультат.Количество() > 0 Тогда
		ВозвращаемаяСтруктура = ОбщегоНазначения.СтрокаТаблицыЗначенийВСтруктуру(ТаблицаРезультат[0]);
	Иначе
		ВозвращаемаяСтруктура = ПустаяСтруктураПоТаблицеЗначений(ТаблицаРезультат);
	КонецЕсли;
	
	ВозвращаемаяСтруктура.Удалить("Организация");
	
	ЗарплатаКадры.УничтожитьВТ(Запрос.МенеджерВременныхТаблиц, УдалитьВТ);
	
	Возврат ВозвращаемаяСтруктура;
	
КонецФункции
	
#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс

// Возвращает сведения о том, сведения о каких ответственных лицах организаций можно получить в конкретной текущей конфигурации
// 
Функция ТаблицаОтветственныхЛицОрганизаций() Экспорт

	ТаблицаОтветственныхЛиц = Новый ТаблицаЗначений;
	
	ТаблицаОтветственныхЛиц.Колонки.Добавить("Ключ", Новый ОписаниеТипов("Строка"));
	ТаблицаОтветственныхЛиц.Колонки.Добавить("Должность", Новый ОписаниеТипов("Строка"));
	ТаблицаОтветственныхЛиц.Колонки.Добавить("НаименованиеДолжности", Новый ОписаниеТипов("Строка"));
	ТаблицаОтветственныхЛиц.Колонки.Добавить("ОснованиеПодписи", Новый ОписаниеТипов("Строка"));
	
	ДополнитьТаблицуОтветственныхЛиц(
		ТаблицаОтветственныхЛиц,
		"Руководитель", "ДолжностьРуководителя", "ДолжностьРуководителяСтрокой", "ОснованиеПодписиРуководителя");
		
	ДополнитьТаблицуОтветственныхЛиц(
		ТаблицаОтветственныхЛиц,
		"ГлавныйБухгалтер", "ДолжностьГлавногоБухгалтера", "ДолжностьГлавногоБухгалтераСтрокой", "ОснованиеПодписиГлавногоБухгалтера");
		
	ДополнитьТаблицуОтветственныхЛиц(
		ТаблицаОтветственныхЛиц,
		"Кассир", "ДолжностьКассира", "ДолжностьКассираСтрокой", "ОснованиеПодписиКассира");
		
	ДополнитьТаблицуОтветственныхЛиц(
		ТаблицаОтветственныхЛиц,
		"РуководительКадровойСлужбы", "ДолжностьРуководителяКадровойСлужбы", "ДолжностьРуководителяКадровойСлужбыСтрокой", "ОснованиеПодписиРуководителяКадровойСлужбы");

	ДополнитьТаблицуОтветственныхЛиц(
		ТаблицаОтветственныхЛиц,
		"ОтветственныйЗаВУР", "ДолжностьОтветственногоЗаВУР", "ДолжностьОтветственногоЗаВУРСтрокой", "ОснованиеПодписиОтветственногоЗаВУР");
		
	Если ОбщегоНазначения.ПодсистемаСуществует("ЗарплатаКадрыКорпоративнаяПодсистемы.ОхранаТруда") Тогда
		МодульОхранаТруда = ОбщегоНазначения.ОбщийМодуль("ОхранаТруда");
		МодульОхранаТруда.ДополнитьТаблицуОтветственныхЛицОтветственнымЗаОхрануТруда(ТаблицаОтветственныхЛиц);
	КонецЕсли;
	
	Возврат ТаблицаОтветственныхЛиц;
	
КонецФункции

// Возвращает описание сведений об ответственных лицах организаций
// 
// Возвращаемое значение:
//		Соответствие - содержит структуры с описанием полей ответственных лиц.
//			* Ключ - имя роли ответственного лица (например "Руководитель")
//			* Значение - структура с описанием связанных  полей ответственного лица
//				- Должность - имя реквизита должности (например "ДолжностьРуководителя")
//				- НаименованиеДолжности - имя реквизита должности строкой (например "ДолжностьРуководителяСтрокой")
//				- ОснованиеПодписи - имя реквизита основания подписи (например "ОснованиеПодписиРуководителя")
//
Функция ПоддерживаемыеИдентификаторыОтветственныхЛицОрганизаций() Экспорт 

	ПоддерживаемыеИдентификаторы = Новый Соответствие;
	
	ТаблицаОтветственныхЛиц = ТаблицаОтветственныхЛицОрганизаций();
	Для каждого СтрокаОтветственногоЛица Из ТаблицаОтветственныхЛиц Цикл
		ОписаниеИдентификатора = Новый Структура("Должность, НаименованиеДолжности, ОснованиеПодписи");
		ЗаполнитьЗначенияСвойств(ОписаниеИдентификатора, СтрокаОтветственногоЛица);
		
		ПоддерживаемыеИдентификаторы.Вставить(СтрокаОтветственногоЛица.Ключ, ОписаниеИдентификатора);	
	КонецЦикла; 
	
	Возврат ПоддерживаемыеИдентификаторы;

КонецФункции

// Формирует временную таблицу ВТОтветственныеЛица, список организаций и периодов,
// по которым необходимо получить данные, берутся из временной таблицы в менеджере временных
// таблиц, переданном в качестве параметра. Временная таблица обязательно должна содержать
// колонки Организация и Период.
//
// Параметры:
//		МенеджерВременныхТаблиц - менеджер временных таблиц с таблицей отборов.
//		ИмяТаблицыОтборов - имя таблицы, содержащей колонки Организация и Период.
//		Сведения - строка с идентификаторами, разделенными запятыми.
//		ИмяПоляПериод - имя колонки, содержащей период, необязательный.
//
Процедура СоздатьВТСведенияОбОтветственныхЛицах(МенеджерВременныхТаблиц, ИмяТаблицыОтборов, Сведения, ИмяСоздаваемойВТ = "ВТСведенияОбОтветственныхЛицах") Экспорт 
	
	МассивСведений = СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок(СтрЗаменить(Сведения, " ",""), ",");	
	
	НаборНеобходимыхИдентификаторов = Новый Соответствие;
	ЗаполнитьНаборНеобходимыхИдентификаторовПоМассивуСведений(НаборНеобходимыхИдентификаторов, МассивСведений);
	
	МассивРолей = ОбщегоНазначения.ВыгрузитьКолонку(НаборНеобходимыхИдентификаторов, "Ключ");
	
	УдалитьВТ = Новый Массив;
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	
	ОписаниеФильтра = ЗарплатаКадрыОбщиеНаборыДанных.ОписаниеФильтраДляСоздатьВТИмяРегистра(ИмяТаблицыОтборов, "Организация,Период");
	
	ЗарплатаКадрыОбщиеНаборыДанных.СоздатьВТИмяРегистраСрезПоследних(
		"СведенияОбОтветственныхЛицах",
		МенеджерВременныхТаблиц,
		Ложь,
		ОписаниеФильтра,
		ЗарплатаКадрыОбщиеНаборыДанных.ПараметрыПостроенияДляСоздатьВТИмяРегистраСрез(),
		"ВТОтветственныеЛицаВнутренний");
		
	УдалитьВТ.Добавить("ВТОтветственныеЛицаВнутренний");
	
	СоздатьВТСведенияОбОтветственныхЛицахПоРолям(
		Запрос.МенеджерВременныхТаблиц, МассивРолей, "ВТОтветственныеЛицаВнутренний");
		
	УдалитьВТ.Добавить("ВТСведенияОбОтветственныхЛицахПоРолям");
		
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ОтветственныеЛица.Организация КАК Организация,";
		
	Для каждого ИдентификаторРоли Из НаборНеобходимыхИдентификаторов Цикл
		ПсевдонимСведений = ИдентификаторРоли.Ключ + "Сведения";
		ОписаниеПолейРоли = ИдентификаторРоли.Значение;
		
		МассивСтрок = Новый Массив;
		
		Если МассивСведений.Найти(ИдентификаторРоли.Ключ) <> Неопределено Тогда
			МассивСтрок.Добавить(СтрЗаменить("ОтветственныеЛица.#КлючРоли КАК #КлючРоли", "#КлючРоли", ИдентификаторРоли.Ключ));
		КонецЕсли;
		Если МассивСведений.Найти(ОписаниеПолейРоли.Должность) <> Неопределено Тогда
			МассивСтрок.Добавить(ПсевдонимСведений + ".Должность КАК" + " " + ОписаниеПолейРоли.Должность);
		КонецЕсли;
		Если МассивСведений.Найти(ОписаниеПолейРоли.НаименованиеДолжности) <> Неопределено Тогда
			МассивСтрок.Добавить(ПсевдонимСведений + ".Должность.Наименование КАК" + " " + ОписаниеПолейРоли.НаименованиеДолжности);
		КонецЕсли;
		Если МассивСведений.Найти(ОписаниеПолейРоли.ОснованиеПодписи) <> Неопределено Тогда
			МассивСтрок.Добавить(ПсевдонимСведений + ".ОснованиеПодписи КАК" + " " + ОписаниеПолейРоли.ОснованиеПодписи);
		КонецЕсли;
		
		Запрос.Текст = Запрос.Текст + ?(МассивРолей.Найти(ИдентификаторРоли.Ключ) = 0, "", ",") + СтрСоединить(МассивСтрок, ",");
	КонецЦикла;
	
	ТестПоместитьИз = 
		"ПОМЕСТИТЬ #ВТСведенияОбОтветственныхЛицах
		|ИЗ
		|	ВТОтветственныеЛицаВнутренний КАК ОтветственныеЛица";
	
	Запрос.Текст = Запрос.Текст + " " + СтрЗаменить(ТестПоместитьИз, "#ВТСведенияОбОтветственныхЛицах", ИмяСоздаваемойВТ);
	
	Для каждого ИдентификаторРоли Из НаборНеобходимыхИдентификаторов Цикл
		ПсевдонимСведений = ИдентификаторРоли.Ключ + "Сведения";
		
		ТекстЗапроса =
		"		ЛЕВОЕ СОЕДИНЕНИЕ ВТСведенияОбОтветственныхЛицахПоРолям КАК #ПсевдонимСведений
		|		ПО ОтветственныеЛица.Организация = #ПсевдонимСведений.Организация
		|			И ОтветственныеЛица.#КлючРоли = #ПсевдонимСведений.ФизическоеЛицо";
		
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "#ПсевдонимСведений", ПсевдонимСведений);
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "#КлючРоли", ИдентификаторРоли.Ключ);
		
		Запрос.Текст = Запрос.Текст + ТекстЗапроса;
	КонецЦикла;
	
	Запрос.Выполнить();
	
	ЗарплатаКадры.УничтожитьВТ(Запрос.МенеджерВременныхТаблиц, УдалитьВТ);
		
КонецПроцедуры

// Заполняет переданную таблицу "СведенияОбОтветственных" данными из сведений об ответственных лицах,
// по переданному списку физических лиц.
//
// Параметры:
//		СписокФизическихЛиц - массив - содержит физические лица.
//		СведенияОбОтветственных - Таблица значений - заполняемая сведениями таблица.
//
Процедура ЗаполнитьСведенияОбОтветственныхЛицах(СписокФизическихЛиц, СведенияОбОтветственных) Экспорт
	
	Если СписокФизическихЛиц.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	УдалитьВТ = Новый Массив;
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	Запрос.УстановитьПараметр("ТекущийПериод", ТекущаяДатаСеанса());
	Запрос.УстановитьПараметр("СписокФизическихЛиц", СписокФизическихЛиц);
	
	Запрос.УстановитьПараметр("РольРуководитель", 				НСтр("ru='Руководитель'"));
	Запрос.УстановитьПараметр("РольГлавныйБухгалтер", 			НСтр("ru='Главный бухгалтер'"));
	Запрос.УстановитьПараметр("РольКассир",						НСтр("ru='Кассир'"));
	Запрос.УстановитьПараметр("РольРуководительКадровойСлужбы", НСтр("ru='Руководитель кадровой службы'"));
	Запрос.УстановитьПараметр("РольОтветственныйЗаВУР", 		НСтр("ru='Ответственный за ВУР'"));
	
	Запрос.Текст =
		"ВЫБРАТЬ
		|	СведенияОбОтветственныхЛицахСрезПоследних.Организация КАК Организация,
		|	СведенияОбОтветственныхЛицахСрезПоследних.Руководитель КАК Руководитель,
		|	СведенияОбОтветственныхЛицахСрезПоследних.ГлавныйБухгалтер КАК ГлавныйБухгалтер,
		|	СведенияОбОтветственныхЛицахСрезПоследних.Кассир КАК Кассир,
		|	СведенияОбОтветственныхЛицахСрезПоследних.РуководительКадровойСлужбы КАК РуководительКадровойСлужбы,
		|	СведенияОбОтветственныхЛицахСрезПоследних.ОтветственныйЗаВУР КАК ОтветственныйЗаВУР
		|ПОМЕСТИТЬ ВТСведенияОбОтветственныхЛицах
		|ИЗ
		|	РегистрСведений.СведенияОбОтветственныхЛицах.СрезПоследних(&ТекущийПериод, ) КАК СведенияОбОтветственныхЛицахСрезПоследних
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	СведенияОбОтветственныхЛицах.Организация КАК Организация,
		|	СведенияОбОтветственныхЛицах.Руководитель КАК ФизическоеЛицо,
		|	&РольРуководитель КАК РольОтветственногоЛица
		|ПОМЕСТИТЬ ВТОтветственныеЛица
		|ИЗ
		|	ВТСведенияОбОтветственныхЛицах КАК СведенияОбОтветственныхЛицах
		|ГДЕ
		|	СведенияОбОтветственныхЛицах.Руководитель В(&СписокФизическихЛиц)
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	СведенияОбОтветственныхЛицах.Организация,
		|	СведенияОбОтветственныхЛицах.ГлавныйБухгалтер,
		|	&РольГлавныйБухгалтер
		|ИЗ
		|	ВТСведенияОбОтветственныхЛицах КАК СведенияОбОтветственныхЛицах
		|ГДЕ
		|	СведенияОбОтветственныхЛицах.ГлавныйБухгалтер В(&СписокФизическихЛиц)
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	СведенияОбОтветственныхЛицах.Организация,
		|	СведенияОбОтветственныхЛицах.Кассир,
		|	&РольКассир
		|ИЗ
		|	ВТСведенияОбОтветственныхЛицах КАК СведенияОбОтветственныхЛицах
		|ГДЕ
		|	СведенияОбОтветственныхЛицах.Кассир В(&СписокФизическихЛиц)
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	СведенияОбОтветственныхЛицах.Организация,
		|	СведенияОбОтветственныхЛицах.РуководительКадровойСлужбы,
		|	&РольРуководительКадровойСлужбы
		|ИЗ
		|	ВТСведенияОбОтветственныхЛицах КАК СведенияОбОтветственныхЛицах
		|ГДЕ
		|	СведенияОбОтветственныхЛицах.РуководительКадровойСлужбы В(&СписокФизическихЛиц)
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	СведенияОбОтветственныхЛицах.Организация,
		|	СведенияОбОтветственныхЛицах.ОтветственныйЗаВУР,
		|	&РольОтветственныйЗаВУР
		|ИЗ
		|	ВТСведенияОбОтветственныхЛицах КАК СведенияОбОтветственныхЛицах
		|ГДЕ
		|	СведенияОбОтветственныхЛицах.ОтветственныйЗаВУР В(&СписокФизическихЛиц)";
	
	Запрос.Выполнить();
	
	УдалитьВТ.Добавить("ВТСведенияОбОтветственныхЛицах");
	УдалитьВТ.Добавить("ВТОтветственныеЛица");
	
	Если ОбщегоНазначения.ПодсистемаСуществует("ЗарплатаКадрыКорпоративнаяПодсистемы.ОхранаТруда") Тогда
		МодульОхранаТруда = ОбщегоНазначения.ОбщийМодуль("ОхранаТруда");
		МодульОхранаТруда.ДополнитьВТОтветственныхЛицОтветственнымиЗаОхрануТруда(Запрос.МенеджерВременныхТаблиц, СписокФизическихЛиц);
	КонецЕсли;
	
	Запрос.Текст =
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ВТОтветственныеЛица.Организация КАК Организация,
		|	ВТОтветственныеЛица.ФизическоеЛицо КАК ФизическоеЛицо
		|ПОМЕСТИТЬ ВТОрганизацииФизическиеЛица
		|ИЗ
		|	ВТОтветственныеЛица КАК ВТОтветственныеЛица";
		
	Запрос.Выполнить();
	
	УдалитьВТ.Добавить("ВТОрганизацииФизическиеЛица");
	
	ПодписиДокументов.СоздатьВТОснованияПолномочийФизическихЛиц(Запрос.МенеджерВременныхТаблиц);
	УдалитьВТ.Добавить("ВТОснованияПолномочийФизическихЛиц");
	
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	Ответственные.Организация КАК СтруктурнаяЕдиница,
		|	Ответственные.ФизическоеЛицо КАК ФизическоеЛицо,
		|	Ответственные.РольОтветственногоЛица КАК РольОтветственногоЛица,
		|	ДолжностиФизическихЛиц.Должность КАК Должность,
		|	ВЫБОР
		|		КОГДА ДолжностиФизическихЛиц.Должность ЕСТЬ NULL
		|			ТОГДА """"
		|		ИНАЧЕ ПРЕДСТАВЛЕНИЕССЫЛКИ(ДолжностиФизическихЛиц.Должность)
		|	КОНЕЦ КАК ПредставлениеДолжности
		|ИЗ
		|	ВТОтветственныеЛица КАК Ответственные
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТОснованияПолномочийФизическихЛиц КАК ДолжностиФизическихЛиц
		|		ПО Ответственные.Организация = ДолжностиФизическихЛиц.Организация
		|			И Ответственные.ФизическоеЛицо = ДолжностиФизическихЛиц.ФизическоеЛицо";
	
	РезультатЗапроса = Запрос.Выполнить();
		
	Выборка = РезультатЗапроса.Выбрать();
	Пока Выборка.Следующий() Цикл
		НоваяСтрокаСведений = СведенияОбОтветственных.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрокаСведений, Выборка, "СтруктурнаяЕдиница,ФизическоеЛицо");
		НоваяСтрокаСведений.ПредставлениеДолжности = Выборка.РольОтветственногоЛица;
		Если Не ПустаяСтрока(Выборка.ПредставлениеДолжности) Тогда
			НоваяСтрокаСведений.ПредставлениеДолжности = НоваяСтрокаСведений.ПредставлениеДолжности
			+ " (" + Выборка.ПредставлениеДолжности + ")";
		КонецЕсли;
		
	КонецЦикла;
		
	ЗарплатаКадры.УничтожитьВТ(Запрос.МенеджерВременныхТаблиц, УдалитьВТ);
	
КонецПроцедуры

// См. обработчик обновления ОснованияПолномочийОтветственныхЛиц.ЗаполнитьДолжностиФизическихЛицИзОтветственныхЛиц().
//
Процедура СоздатьВТУдаленныеДолжностиОтветственныхЛицОрганизаций(МенеджерВременныхТаблиц) Экспорт

	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	СведенияОбОтветственныхЛицахСрезПоследних.Организация КАК Организация,
		|	СведенияОбОтветственныхЛицахСрезПоследних.Руководитель КАК ФизическоеЛицо,
		|	СведенияОбОтветственныхЛицахСрезПоследних.УдалитьДолжностьРуководителя КАК Должность
		|ПОМЕСТИТЬ ВТВсеДолжности
		|ИЗ
		|	РегистрСведений.СведенияОбОтветственныхЛицах.СрезПоследних КАК СведенияОбОтветственныхЛицахСрезПоследних
		|ГДЕ
		|	СведенияОбОтветственныхЛицахСрезПоследних.УдалитьДолжностьРуководителя <> ЗНАЧЕНИЕ(Справочник.Должности.ПустаяСсылка)
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	СведенияОбОтветственныхЛицахСрезПоследних.Организация,
		|	СведенияОбОтветственныхЛицахСрезПоследних.Кассир,
		|	СведенияОбОтветственныхЛицахСрезПоследних.УдалитьДолжностьКассира
		|ИЗ
		|	РегистрСведений.СведенияОбОтветственныхЛицах.СрезПоследних КАК СведенияОбОтветственныхЛицахСрезПоследних
		|ГДЕ
		|	СведенияОбОтветственныхЛицахСрезПоследних.УдалитьДолжностьКассира <> ЗНАЧЕНИЕ(Справочник.Должности.ПустаяСсылка)
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	СведенияОбОтветственныхЛицахСрезПоследних.Организация,
		|	СведенияОбОтветственныхЛицахСрезПоследних.РуководительКадровойСлужбы,
		|	СведенияОбОтветственныхЛицахСрезПоследних.УдалитьДолжностьРуководителяКадровойСлужбы
		|ИЗ
		|	РегистрСведений.СведенияОбОтветственныхЛицах.СрезПоследних КАК СведенияОбОтветственныхЛицахСрезПоследних
		|ГДЕ
		|	СведенияОбОтветственныхЛицахСрезПоследних.УдалитьДолжностьРуководителяКадровойСлужбы <> ЗНАЧЕНИЕ(Справочник.Должности.ПустаяСсылка)
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	СведенияОбОтветственныхЛицахСрезПоследних.Организация,
		|	СведенияОбОтветственныхЛицахСрезПоследних.ОтветственныйЗаВУР,
		|	СведенияОбОтветственныхЛицахСрезПоследних.УдалитьДолжностьОтветственногоЗаВУР
		|ИЗ
		|	РегистрСведений.СведенияОбОтветственныхЛицах.СрезПоследних КАК СведенияОбОтветственныхЛицахСрезПоследних
		|ГДЕ
		|	СведенияОбОтветственныхЛицахСрезПоследних.УдалитьДолжностьОтветственногоЗаВУР <> ЗНАЧЕНИЕ(Справочник.Должности.ПустаяСсылка)
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	СведенияОбОтветственныхЛицахСрезПоследних.Организация,
		|	СведенияОбОтветственныхЛицахСрезПоследних.ОтветственныйЗаОхрануТруда,
		|	СведенияОбОтветственныхЛицахСрезПоследних.УдалитьДолжностьОтветственногоЗаОхрануТруда
		|ИЗ
		|	РегистрСведений.СведенияОбОтветственныхЛицах.СрезПоследних КАК СведенияОбОтветственныхЛицахСрезПоследних
		|ГДЕ
		|	СведенияОбОтветственныхЛицахСрезПоследних.УдалитьДолжностьОтветственногоЗаОхрануТруда <> ЗНАЧЕНИЕ(Справочник.Должности.ПустаяСсылка)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТВсеДолжности.Организация КАК Организация,
		|	ВТВсеДолжности.ФизическоеЛицо КАК ФизическоеЛицо,
		|	МАКСИМУМ(ВТВсеДолжности.Должность) КАК Должность
		|ПОМЕСТИТЬ ВТУдаленныеДолжностиОтветственныхЛицОрганизаций
		|ИЗ
		|	ВТВсеДолжности КАК ВТВсеДолжности
		|
		|СГРУППИРОВАТЬ ПО
		|	ВТВсеДолжности.Организация,
		|	ВТВсеДолжности.ФизическоеЛицо
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ ВТВсеДолжности";
	
	Запрос.Выполнить();

КонецПроцедуры

#Область УправлениеДоступом

// См. УправлениеДоступомПереопределяемый.ПриЗаполненииСписковСОграничениемДоступа.
Процедура ПриЗаполненииСписковСОграничениемДоступа(Списки) Экспорт
	
	Списки.Вставить(Метаданные.РегистрыСведений.СведенияОбОтветственныхЛицах, Истина);
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура ДополнитьТаблицуОтветственныхЛиц(ТаблицаОтветственныхЛиц, Ключ, Должность, НаименованиеДолжности, ОснованиеПодписи);

	НоваяСтрока = ТаблицаОтветственныхЛиц.Добавить();
	
	НоваяСтрока.Ключ = Ключ;
	НоваяСтрока.Должность = Должность;
	НоваяСтрока.НаименованиеДолжности = НаименованиеДолжности;
	НоваяСтрока.ОснованиеПодписи = ОснованиеПодписи;

КонецПроцедуры

Процедура ЗаполнитьНаборНеобходимыхИдентификаторовПоМассивуСведений(НаборНеобходимыхИдентификаторов, МассивСведений)

	ПоддерживаемыеИдентификаторы = ПоддерживаемыеИдентификаторыОтветственныхЛицОрганизаций();
	Для каждого ИдентификаторРоли Из ПоддерживаемыеИдентификаторы Цикл
		// Ищем в роли
		Если МассивСведений.Найти(ИдентификаторРоли.Ключ) <> Неопределено Тогда
			НаборНеобходимыхИдентификаторов.Вставить(ИдентификаторРоли.Ключ, ИдентификаторРоли.Значение);
		КонецЕсли;
		
		РеквизитыРоли = ИдентификаторРоли.Значение;
		
		Если МассивСведений.Найти(РеквизитыРоли.Должность) <> Неопределено Тогда
			НаборНеобходимыхИдентификаторов.Вставить(ИдентификаторРоли.Ключ, ИдентификаторРоли.Значение);
		КонецЕсли;
		Если МассивСведений.Найти(РеквизитыРоли.НаименованиеДолжности) <> Неопределено Тогда
			НаборНеобходимыхИдентификаторов.Вставить(ИдентификаторРоли.Ключ, ИдентификаторРоли.Значение);
		КонецЕсли;
		Если МассивСведений.Найти(РеквизитыРоли.ОснованиеПодписи) <> Неопределено Тогда
			НаборНеобходимыхИдентификаторов.Вставить(ИдентификаторРоли.Ключ, ИдентификаторРоли.Значение);
		КонецЕсли;
		
	КонецЦикла; 

КонецПроцедуры

Процедура СоздатьВТСведенияОбОтветственныхЛицахПоРолям(МенеджерВременныхТаблиц, МассивРолей, ИмяТаблицыОтборов)
	
	УдалитьВТ = Новый Массив;
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	
	Запрос.Текст = ТекстЗапросаОтветственныхПоРолямПоСтрокеСведений(МассивРолей, ИмяТаблицыОтборов);
	
	ТекстТаблицыОтбора = 
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ВТОтветственныеПоРолям.Организация КАК Организация,
		|	ВТОтветственныеПоРолям.ФизическоеЛицо КАК ФизическоеЛицо
		|ПОМЕСТИТЬ ВТФизическиеЛицаОтборВнутренний
		|ИЗ
		|	ВТОтветственныеПоРолям КАК ВТОтветственныеПоРолям";
	
	ЗарплатаКадрыОбщиеНаборыДанных.ОбъединитьТекстыЗапросов(Запрос.Текст, ТекстТаблицыОтбора);
	
	Запрос.Выполнить();

	УдалитьВТ.Добавить("ВТОтветственныеПоРолям");
	УдалитьВТ.Добавить("ВТФизическиеЛицаОтборВнутренний");
	
	ПодписиДокументов.СоздатьВТОснованияПолномочийФизическихЛиц(Запрос.МенеджерВременныхТаблиц, "ВТФизическиеЛицаОтборВнутренний");
	УдалитьВТ.Добавить("ВТОснованияПолномочийФизическихЛиц");
	
	Запрос.Текст =
		"ВЫБРАТЬ
		|	Ответственные.Организация КАК Организация,
		|	Ответственные.ФизическоеЛицо КАК ФизическоеЛицо,
		|	Ответственные.РольОтветственногоЛица КАК РольОтветственногоЛица,
		|	ОснованияПолномочий.Должность КАК Должность,
		|	ОснованияПолномочий.ОснованиеПодписи КАК ОснованиеПодписи
		|ПОМЕСТИТЬ ВТСведенияОбОтветственныхЛицахПоРолям
		|ИЗ
		|	ВТОтветственныеПоРолям КАК Ответственные
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТОснованияПолномочийФизическихЛиц КАК ОснованияПолномочий
		|		ПО Ответственные.Организация = ОснованияПолномочий.Организация
		|			И Ответственные.ФизическоеЛицо = ОснованияПолномочий.ФизическоеЛицо";
	
	Запрос.Выполнить();
	
	ЗарплатаКадры.УничтожитьВТ(Запрос.МенеджерВременныхТаблиц, УдалитьВТ);

КонецПроцедуры

Функция ТекстЗапросаОтветственныхПоРолямПоСтрокеСведений(МассивРолей, ИмяТаблицыИсточника = "ВТСведенияОбОтветственныхЛицах", ИмяСоздаваемойВТ = "ВТОтветственныеПоРолям")
	
	ТекстЗапроса = "";
	
	Для каждого КлючРоли Из МассивРолей Цикл
		МассивСтрокЗапроса = Новый Массив;
		
		ТекстЗапроса = ТекстЗапроса + "ВЫБРАТЬ";
		
		МассивСтрокЗапроса.Добавить("СведенияОбОтветственныхЛицах.Организация КАК Организация");
		МассивСтрокЗапроса.Добавить(СтрЗаменить("СведенияОбОтветственныхЛицах.#КлючРоли КАК ФизическоеЛицо", "#КлючРоли", КлючРоли));
		МассивСтрокЗапроса.Добавить(СтрЗаменить("""#КлючРоли"" КАК РольОтветственногоЛица", "#КлючРоли", КлючРоли));
		
		ТекстЗапроса = ТекстЗапроса + " " + СтрСоединить(МассивСтрокЗапроса, ",");
		
		Если МассивРолей.Найти(КлючРоли) = 0 Тогда
			ТекстЗапроса = ТекстЗапроса + " " + СтрЗаменить("ПОМЕСТИТЬ #ВТОтветственныеПоРолям", "#ВТОтветственныеПоРолям", ИмяСоздаваемойВТ);
		КонецЕсли;
		
		ТекстЗапроса = ТекстЗапроса + " " + СтрЗаменить("ИЗ #ВТСведенияОбОтветственныхЛицах КАК СведенияОбОтветственныхЛицах", "#ВТСведенияОбОтветственныхЛицах", ИмяТаблицыИсточника);
		
		Если МассивРолей.Найти(КлючРоли) <> МассивРолей.Количество() - 1 Тогда
			ТекстЗапроса = ТекстЗапроса + " " + "ОБЪЕДИНИТЬ ВСЕ" + " ";
		КонецЕсли;
		
	КонецЦикла; 
	
	Возврат ТекстЗапроса;

КонецФункции

Функция ПустаяСтруктураПоТаблицеЗначений(ТаблицаЗначений)

	МассивСтрок = Новый Массив;
	Для Каждого Колонка Из ТаблицаЗначений.Колонки Цикл
		МассивСтрок.Добавить(Колонка.Имя);
	КонецЦикла;
	
	Возврат Новый Структура(СтрСоединить(МассивСтрок, ","));

КонецФункции

#КонецОбласти
