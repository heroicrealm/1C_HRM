////////////////////////////////////////////////////////////////////////////////
// Подсистема "Синхронизация данных".
// Серверные процедуры и функции, обслуживающие подписки на события.
//
////////////////////////////////////////////////////////////////////////////////

////////////////////////////////////////////////////////////////////////////////
// Обмен "АвтономнаяРабота" Зарплата и управление персоналом 3.0.
////////////////////////////////////////////////////////////////////////////////

#Область СлужебныйПрограммныйИнтерфейс

// Процедура-обработчик события "ПередЗаписью" ссылочных типов данных (кроме документов) для механизма регистрации
// объектов на узлах.
//
// Параметры:
//		Источник	- источник события, кроме типа ДокументОбъект.
//		Отказ		- Булево - флаг отказа от выполнения обработчика.
//
Процедура АвтономнаяРаботаРегистрация(Источник, Отказ) Экспорт
	
	Если ОбщегоНазначения.ЭтоАвтономноеРабочееМесто() Тогда
		Источник.ОбменДанными.Получатели.Добавить(ПланыОбмена.ГлавныйУзел());
	Иначе
		ОбменДаннымиСобытия.МеханизмРегистрацииОбъектовПередЗаписью("АвтономнаяРабота", Источник, Отказ);
	КонецЕсли;
	
	Если ЗарплатаКадры.ОтключитьБизнесЛогикуПриЗаписи(Источник) Тогда
		Возврат;
	КонецЕсли;
	
КонецПроцедуры

// Процедура-обработчик события "ПередЗаписью" констант для механизма регистрации объектов на узлах.
//
// Параметры:
//		Источник	- КонстантаМенеджерЗначения - источник события.
//		Отказ		- Булево - флаг отказа от выполнения обработчика.
//
Процедура АвтономнаяРаботаРегистрацияКонстанты(Источник, Отказ) Экспорт
	
	Если ОбщегоНазначения.ЭтоАвтономноеРабочееМесто() Тогда
		Источник.ОбменДанными.Получатели.Добавить(ПланыОбмена.ГлавныйУзел());
	Иначе
		ОбменДаннымиСобытия.МеханизмРегистрацииОбъектовПередЗаписьюКонстанты("АвтономнаяРабота", Источник, Отказ);
	КонецЕсли;
	
	Если ЗарплатаКадры.ОтключитьБизнесЛогикуПриЗаписи(Источник) Тогда
		Возврат;
	КонецЕсли;
	
КонецПроцедуры

// Процедура-обработчик события "ПередЗаписью" документов для механизма регистрации объектов на узлах.
// 
// Параметры:
//		Источник 		- ДокументОбъект - источник события.
//		Отказ 			- Булево - флаг отказа от выполнения обработчика.
//		РежимЗаписи 	- РежимЗаписиДокумента - Режим записи
//		РежимПроведения - РежимПроведенияДокумента - Режим проведения
//
Процедура АвтономнаяРаботаРегистрацияДокумента(Источник, Отказ, РежимЗаписи, РежимПроведения) Экспорт
	
	Если ОбщегоНазначения.ЭтоАвтономноеРабочееМесто() Тогда
		Источник.ОбменДанными.Получатели.Добавить(ПланыОбмена.ГлавныйУзел());
	Иначе
		ОбменДаннымиСобытия.МеханизмРегистрацииОбъектовПередЗаписьюДокумента("АвтономнаяРабота", Источник, Отказ,
			РежимЗаписи, РежимПроведения);
	КонецЕсли;
	
	Если ЗарплатаКадры.ОтключитьБизнесЛогикуПриЗаписи(Источник) Тогда
		Возврат;
	КонецЕсли;
	
КонецПроцедуры

// Процедура-обработчик события "ПередЗаписью" регистров для механизма регистрации объектов на узлах.
//
// Параметры:
//		Источник	- НаборЗаписейРегистра - источник события.
//		Отказ		- Булево - флаг отказа от выполнения обработчика.
//		Замещение	- Булево - признак замещения существующего набора записей.
//
Процедура АвтономнаяРаботаРегистрацияНабора(Источник, Отказ, Замещение) Экспорт
	
	Если ОбщегоНазначения.ЭтоАвтономноеРабочееМесто() Тогда
		Источник.ОбменДанными.Получатели.Добавить(ПланыОбмена.ГлавныйУзел());
	Иначе
		ОбменДаннымиСобытия.МеханизмРегистрацииОбъектовПередЗаписьюРегистра("АвтономнаяРабота", Источник, Отказ,
			Замещение);
	КонецЕсли;
	
	Если ЗарплатаКадры.ОтключитьБизнесЛогикуПриЗаписи(Источник) Тогда
		Возврат;
	КонецЕсли;
	
КонецПроцедуры

// Процедура-обработчик события "ПередЗаписью" регистров расчета для механизма регистрации объектов на узлах.
// 
// Параметры:
//		Источник 							- РегистрРасчетаНаборЗаписей - источник события.
//		Отказ 								- Булево - флаг отказа от выполнения обработчика.
//		Замещение 							- Булево - признак замещения существующего набора записей.
//		ТолькоЗапись 						- Булево
//		ЗаписьФактическогоПериодаДействия 	- Булево
//		ЗаписьПерерасчетов 					- Булево
//
Процедура АвтономнаяРаботаРегистрацияНабораРасчета(Источник, Отказ, Замещение, ТолькоЗапись,
	ЗаписьФактическогоПериодаДействия, ЗаписьПерерасчетов) Экспорт
	
	Если ОбщегоНазначения.ЭтоАвтономноеРабочееМесто() Тогда
		Источник.ОбменДанными.Получатели.Добавить(ПланыОбмена.ГлавныйУзел());
	Иначе
		ОбменДаннымиСобытия.МеханизмРегистрацииОбъектовПередЗаписьюРегистра("АвтономнаяРабота", Источник, Отказ,
			Замещение);
	КонецЕсли;
	
	Если ЗарплатаКадры.ОтключитьБизнесЛогикуПриЗаписи(Источник) Тогда
		Возврат;
	КонецЕсли;
	
КонецПроцедуры

// Процедура-обработчик события "ПередУдалением" ссылочных типов данных для механизма регистрации объектов на узлах.
//
// Параметры:
//		Источник	- источник события.
//		Отказ		- Булево - флаг отказа от выполнения обработчика.
//
Процедура АвтономнаяРаботаРегистрацияУдаления(Источник, Отказ) Экспорт
	
	Если ОбщегоНазначения.ЭтоАвтономноеРабочееМесто() Тогда
		Источник.ОбменДанными.Получатели.Добавить(ПланыОбмена.ГлавныйУзел());
	Иначе
		ОбменДаннымиСобытия.МеханизмРегистрацииОбъектовПередУдалением("АвтономнаяРабота", Источник, Отказ);
	КонецЕсли;
	
	Если ЗарплатаКадры.ОтключитьБизнесЛогикуПриЗаписи(Источник) Тогда
		Возврат;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти
