
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ЗаполнитьЗначенияСвойств(ЭтотОбъект, Параметры, "Заголовок,СотрудникСсылка,ДатаПриема,ФизическоеЛицоСсылка,ТекущаяОрганизация,ТекущееПодразделение");
	СозданиеНового = Параметры.СозданиеНового;
	
	ПроинициализироватьФорму(Параметры.АдресВХранилище);
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	СотрудникиКлиент.ЗарегистрироватьОткрытиеФормы(ЭтотОбъект, ИмяФормы);
	СотрудникиКлиент.ПроверитьРежимТолькоПросмотраДополнительнойФормы(ЭтотОбъект, Истина, Ложь);
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, ЗавершениеРаботы, ТекстПредупреждения, СтандартнаяОбработка)
	
	Оповещение = Новый ОписаниеОповещения("СохранитьИЗакрыть", ЭтотОбъект);
	ОбщегоНазначенияКлиент.ПоказатьПодтверждениеЗакрытияФормы(Оповещение, Отказ, ЗавершениеРаботы, ТекстПредупреждения);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	СотрудникиКлиент.ОбработкаОповещения(ЭтотОбъект, ИмяСобытия, Параметр, Источник);
	Если ИмяСобытия = "ОтредактированаИстория" И СотрудникСсылка = Источник Тогда
		
		Если Параметр.ИмяРегистра = "БухучетЗарплатыСотрудников" Тогда
			
			Если БухучетЗарплатыСотрудниковНаборЗаписейПрочитан Тогда
				
				РедактированиеПериодическихСведенийКлиент.ОбработкаОповещения(ЭтотОбъект, СотрудникСсылка,
					ИмяСобытия, Параметр, Источник);
				
				БухучетЗарплатыСотрудниковОбновитьПолеПериод(ЭтотОбъект, ОбщегоНазначенияКлиент.ДатаСеанса());
				
			КонецЕсли;
			
			БухучетЗарплатыСотрудниковОбновитьСтраницы(ЭтотОбъект);
			УстановитьВидимостьЕНВД(Элементы, 
				ИспользуетсяЕНВД(БухучетЗарплатыСотрудников.Период));
			
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ОбработкаПроверкиЗаполненияНаСервере(Отказ, ПроверяемыеРеквизиты)
	
	Если ДоступныМестаВыплатыЗарплатыСотрудников
		И ПравоДоступа("Изменение", Метаданные.РегистрыСведений.ЛицевыеСчетаСотрудниковПоЗарплатнымПроектам) Тогда
		
		МестоВыплаты = РеквизитФормыВЗначение("МестаВыплатыЗарплатыСотрудников");
		ВзаиморасчетыССотрудникамиРасширенный.ПроверитьМестоВыплатыЗарплатыСотрудника(МестоВыплаты, Отказ);
		
		Если МестоВыплаты.Вид = Перечисления.ВидыМестВыплатыЗарплаты.ПустаяСсылка() Тогда
			МестоВыплаты = РеквизитФормыВЗначение("МестаВыплатыЗарплатыПодразделений");
		КонецЕсли;
		
		Если МестоВыплаты.Вид = Перечисления.ВидыМестВыплатыЗарплаты.ЗарплатныйПроект
			И ЗначениеЗаполнено(ЛицевыеСчетаСотрудниковПоЗарплатнымПроектам.ЗарплатныйПроект) Тогда
			
			Если Не ЗначениеЗаполнено(ЛицевыеСчетаСотрудниковПоЗарплатнымПроектам.ДокументОснование) Тогда
				
				Если ОбменСБанкамиПоЗарплатнымПроектамФормы.ЗаписьЛицевыеСчетаСотрудниковПоЗарплатнымПроектамИзменена(ЭтотОбъект) Тогда
					
					Если Не ЗначениеЗаполнено(ЛицевыеСчетаСотрудниковПоЗарплатнымПроектам.ЗарплатныйПроект) Тогда
						
						ТекстСообщения = НСтр("ru='Не заполнен зарплатный проект'");
						ОбщегоНазначения.СообщитьПользователю(
							ТекстСообщения, , "ЗарплатныйПроект", "ЛицевыеСчетаСотрудниковПоЗарплатнымПроектам", Отказ);
						
					ИначеЕсли Не ЗначениеЗаполнено(ЛицевыеСчетаСотрудниковПоЗарплатнымПроектамПрежняя.ЗарплатныйПроект)
						И Не ЗначениеЗаполнено(ЛицевыеСчетаСотрудниковПоЗарплатнымПроектам.НомерЛицевогоСчета) Тогда
						
						ТекстСообщения = НСтр("ru='Не заполнен номер лицевого счета'");
						ОбщегоНазначения.СообщитьПользователю(
							ТекстСообщения, , "НомерЛицевогоСчета", "ЛицевыеСчетаСотрудниковПоЗарплатнымПроектам", Отказ);
						
					КонецЕсли;
					
				КонецЕсли;
			
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЕсли;
	
	Если ДоступенБухучетЗарплатыСотрудников Тогда
		РедактированиеПериодическихСведений.ПроверитьЗаписьВФорме(ЭтотОбъект, "БухучетЗарплатыСотрудников", СотрудникСсылка, Отказ);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти


#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ВидМестаВыплатыЗарплатыКакВсемПриИзменении(Элемент)
	
	Если Не МестаВыплатыЗарплатыСотрудниковЗаблокироватьСотрудника() Тогда
		Возврат;
	КонецЕсли;
	
	Если МестаВыплатыЗарплатыПодразделений.Вид = ПредопределенноеЗначение("Перечисление.ВидыМестВыплатыЗарплаты.ЗарплатныйПроект") Тогда
		МестоВыплатыЗарплатныйПроектДоступноПолеПриИзмененииНаСервере();
	КонецЕсли;
	
	МестаВыплатыЗарплатыСотрудниковУстановитьДоступность(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура ВидМестаВыплатыЗарплатыКассаПриИзменении(Элемент)
	
	Если Не МестаВыплатыЗарплатыСотрудниковЗаблокироватьСотрудника() Тогда
		Возврат;
	КонецЕсли;
	
	МестаВыплатыЗарплатыСотрудниковУстановитьДоступность(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура ВидМестаВыплатыЗарплатыЗарплатныйПроектПриИзменении(Элемент)
	
	Если Не МестаВыплатыЗарплатыСотрудниковЗаблокироватьСотрудника() Тогда
		Возврат;
	КонецЕсли;
	
	МестоВыплатыЗарплатныйПроектДоступноПолеПриИзмененииНаСервере();
	МестаВыплатыЗарплатыСотрудниковУстановитьДоступность(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура ВидМестаВыплатыРаздатчикПриИзменении(Элемент)
	
	Если Не МестаВыплатыЗарплатыСотрудниковЗаблокироватьСотрудника() Тогда
		Возврат;
	КонецЕсли;
	
	МестаВыплатыЗарплатыСотрудниковУстановитьДоступность(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура ВидМестаВыплатыЗарплатыБанковскийСчетПриИзменении(Элемент)
	
	Если Не МестаВыплатыЗарплатыСотрудниковЗаблокироватьСотрудника() Тогда
		Возврат;
	КонецЕсли;
	
	МестаВыплатыЗарплатыСотрудниковУстановитьДоступность(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура МестоВыплатыКассаДоступноПолеОткрытие(Элемент, СтандартнаяОбработка)
	МестаВыплатыЗарплатыКлиентРасширенный.МестоВыплатыОткрытие(Элемент, СтандартнаяОбработка);
КонецПроцедуры

&НаКлиенте
Процедура МестоВыплатыКассаНеДоступноПолеОткрытие(Элемент, СтандартнаяОбработка)
	МестаВыплатыЗарплатыКлиентРасширенный.МестоВыплатыОткрытие(Элемент, СтандартнаяОбработка);
КонецПроцедуры

&НаКлиенте
Процедура МестоВыплатыЗарплатныйПроектДоступноПолеОткрытие(Элемент, СтандартнаяОбработка)
	МестаВыплатыЗарплатыКлиентРасширенный.МестоВыплатыОткрытие(Элемент, СтандартнаяОбработка);
КонецПроцедуры

&НаКлиенте
Процедура МестоВыплатыКассаДоступноПолеПриИзменении(Элемент)
	
	МестаВыплатыЗарплатыСотрудниковЗаблокироватьСотрудника();
	
КонецПроцедуры

&НаКлиенте
Процедура МестоВыплатыКассаДоступноПолеНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	Если Не МестаВыплатыЗарплатыСотрудниковЗаблокироватьСотрудника() Тогда
		СтандартнаяОбработка = Ложь;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура МестоВыплатыЗарплатныйПроектДоступноПолеПриИзменении(Элемент)
	
	Если Не МестаВыплатыЗарплатыСотрудниковЗаблокироватьСотрудника() Тогда
		Возврат;
	КонецЕсли;
	
	МестоВыплатыЗарплатныйПроектДоступноПолеПриИзмененииНаСервере(МестаВыплатыЗарплатыСотрудников.МестоВыплаты);
	
КонецПроцедуры

&НаКлиенте
Процедура МестоВыплатыЗарплатныйПроектДоступноПолеНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	Если Не МестаВыплатыЗарплатыСотрудниковЗаблокироватьСотрудника() Тогда
		СтандартнаяОбработка = Ложь;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура МестоВыплатыЗарплатныйПроектНеДоступноПолеОткрытие(Элемент, СтандартнаяОбработка)
	МестаВыплатыЗарплатыКлиентРасширенный.МестоВыплатыОткрытие(Элемент, СтандартнаяОбработка);
КонецПроцедуры

&НаКлиенте
Процедура МестоВыплатыРаздатчикДоступноПолеПриИзменении(Элемент)
	
	МестаВыплатыЗарплатыСотрудниковЗаблокироватьСотрудника();
	
КонецПроцедуры

&НаКлиенте
Процедура МестоВыплатыРаздатчикДоступноПолеНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	Если Не МестаВыплатыЗарплатыСотрудниковЗаблокироватьСотрудника() Тогда
		СтандартнаяОбработка = Ложь;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура МестоВыплатыРаздатчикДоступноПолеОткрытие(Элемент, СтандартнаяОбработка)
	МестаВыплатыЗарплатыКлиентРасширенный.МестоВыплатыОткрытие(Элемент, СтандартнаяОбработка);
КонецПроцедуры

&НаКлиенте
Процедура МестоВыплатыРаздатчикНеДоступноПолеОткрытие(Элемент, СтандартнаяОбработка)
	МестаВыплатыЗарплатыКлиентРасширенный.МестоВыплатыОткрытие(Элемент, СтандартнаяОбработка);
КонецПроцедуры

&НаКлиенте
Процедура МестоВыплатыБанковскийСчетДоступноПолеПриИзменении(Элемент)
	
	МестаВыплатыЗарплатыСотрудниковЗаблокироватьСотрудника();
	
КонецПроцедуры

&НаКлиенте
Процедура МестоВыплатыБанковскийСчетДоступноПолеНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	Если Не МестаВыплатыЗарплатыСотрудниковЗаблокироватьСотрудника() Тогда
		СтандартнаяОбработка = Ложь;
		Возврат;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура МестоВыплатыБанковскийСчетДоступноПолеОткрытие(Элемент, СтандартнаяОбработка)
	МестаВыплатыЗарплатыКлиентРасширенный.МестоВыплатыОткрытие(Элемент, СтандартнаяОбработка);
КонецПроцедуры

&НаКлиенте
Процедура МестоВыплатыБанковскийСчетНеДоступноПолеОткрытие(Элемент, СтандартнаяОбработка)
	МестаВыплатыЗарплатыКлиентРасширенный.МестоВыплатыОткрытие(Элемент, СтандартнаяОбработка);
КонецПроцедуры

&НаКлиенте
Процедура МестоВыплатыЛицевойСчетДоступноПолеПриИзменении(Элемент)
	
	Если Не ЛицевыеСчетаСотрудниковПоЗарплатнымПроектамЗаблокироватьСотрудника() Тогда
		Возврат;
	КонецЕсли;
	
	ЛицевыеСчетаСотрудниковПоЗарплатнымПроектамПриИзменении();
	
КонецПроцедуры

&НаКлиенте
Процедура БухучетЗарплатыСотрудниковСтатьяФинансированияПриИзменении(Элемент)
	
	Если Не БухучетЗарплатыСотрудниковЗаблокироватьСотрудника() Тогда
		Возврат;
	КонецЕсли;
	
	БухучетЗарплатыСотрудниковОбновитьПолеПериод(ЭтотОбъект, ОбщегоНазначенияКлиент.ДатаСеанса());
	УстановитьВидимостьЕНВД(Элементы, 
		ИспользуетсяЕНВД(БухучетЗарплатыСотрудников.Период));
	
КонецПроцедуры

&НаКлиенте
Процедура БухучетЗарплатыСотрудниковСтатьяФинансированияНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	Если Не БухучетЗарплатыСотрудниковЗаблокироватьСотрудника() Тогда
		СтандартнаяОбработка = Ложь;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура БухучетЗарплатыСотрудниковСпособОтраженияЗарплатыВБухучетеПриИзменении(Элемент)
	
	Если Не БухучетЗарплатыСотрудниковЗаблокироватьСотрудника() Тогда
		Возврат;
	КонецЕсли;
	
	БухучетЗарплатыСотрудниковОбновитьПолеПериод(ЭтотОбъект, ОбщегоНазначенияКлиент.ДатаСеанса());
	УстановитьВидимостьЕНВД(Элементы, 
		ИспользуетсяЕНВД(БухучетЗарплатыСотрудников.Период));
	
КонецПроцедуры

&НаКлиенте
Процедура БухучетЗарплатыСотрудниковСпособОтраженияЗарплатыВБухучетеНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	Если Не БухучетЗарплатыСотрудниковЗаблокироватьСотрудника() Тогда
		СтандартнаяОбработка = Ложь;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура БухучетЗарплатыСотрудниковОтношениеКЕНВДПриИзменении(Элемент)
	
	Если Не БухучетЗарплатыСотрудниковЗаблокироватьСотрудника() Тогда
		Возврат;
	КонецЕсли;
	
	БухучетЗарплатыСотрудниковОбновитьПолеПериод(ЭтотОбъект, ОбщегоНазначенияКлиент.ДатаСеанса());
	
КонецПроцедуры

&НаКлиенте
Процедура БухучетЗарплатыСотрудниковОтношениеКЕНВДНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	Если Не БухучетЗарплатыСотрудниковЗаблокироватьСотрудника() Тогда
		СтандартнаяОбработка = Ложь;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура БухучетЗарплатыСотрудниковПериодПриИзменении(Элемент)
	
	БухучетЗарплатыСотрудниковЗаблокироватьСотрудника();
	УстановитьВидимостьЕНВД(Элементы, 
		ИспользуетсяЕНВД(БухучетЗарплатыСотрудников.Период));
	
КонецПроцедуры

&НаКлиенте
Процедура БухучетЗарплатыСотрудниковПериодНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	Если Не БухучетЗарплатыСотрудниковЗаблокироватьСотрудника() Тогда
		СтандартнаяОбработка = Ложь;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти


#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура БухучетЗарплатыСотрудниковИстория(Команда)

	СотрудникиКлиент.ОткрытьФормуРедактированияИстории("БухучетЗарплатыСотрудников", СотрудникСсылка, ЭтотОбъект);

КонецПроцедуры

&НаКлиенте
Процедура OK(Команда)
	
	СохранитьИЗакрытьНаКлиенте();
	
КонецПроцедуры

&НаКлиенте
Процедура Отмена(Команда)
	
	Модифицированность = Ложь;
	Закрыть();
	
КонецПроцедуры

#КонецОбласти


#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ПроинициализироватьФорму(АдресВХранилище)
	
	УстановитьПривилегированныйРежим(Истина);
	
	ЦветСтиляЦветТекстаПоля = ЦветаСтиля.ЦветТекстаПоля;
	ОтражениеЗарплатыВБухучете.УстановитьСписокВыбораОтношениеКЕНВД(Элементы, "БухучетЗарплатыСотрудниковОтношениеКЕНВД");
	
	ЗапрашиваемыеКадровыеДанные = Новый Массив;
	ЗаполняемыеРеквизитыФормы = Новый Массив;
	
	Если Не ЗначениеЗаполнено(ФизическоеЛицоСсылка) Тогда
		ЗапрашиваемыеКадровыеДанные.Добавить("ФизическоеЛицо");
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(ТекущаяОрганизация) Тогда
		ЗапрашиваемыеКадровыеДанные.Добавить("ТекущаяОрганизация");
		ЗаполняемыеРеквизитыФормы.Добавить("ТекущаяОрганизация");
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(ТекущееПодразделение) Тогда
		ЗапрашиваемыеКадровыеДанные.Добавить("ТекущееПодразделение");
		ЗаполняемыеРеквизитыФормы.Добавить("ТекущееПодразделение");
	КонецЕсли;
	
	Если ЗапрашиваемыеКадровыеДанные.Количество() > 0 Тогда
		
		ЗапрашиваемыеКадровыеДанные.Добавить("ГоловнаяОрганизация");
		КадровыеДанные = КадровыйУчетВызовСервера.КадровыеДанныеСотрудника(СотрудникСсылка, ЗапрашиваемыеКадровыеДанные, ТекущаяДатаСеанса());
		
		Если ЗаполняемыеРеквизитыФормы.Количество() > 0 Тогда
			ЗаполнитьЗначенияСвойств(ЭтотОбъект, КадровыеДанные, СтрСоединить(ЗаполняемыеРеквизитыФормы, ","));
		КонецЕсли;
		
		Если Не ЗначениеЗаполнено(ТекущаяОрганизация) Тогда
			ТекущаяОрганизация = КадровыеДанные.ГоловнаяОрганизация;
		КонецЕсли;
		
		Если Не ЗначениеЗаполнено(ФизическоеЛицоСсылка) Тогда
			ФизическоеЛицоСсылка = КадровыеДанные.ФизическоеЛицо;
		КонецЕсли;
		
	КонецЕсли;
	
	СотрудникиФормы.ПрочитатьДанныеИзХранилищаВФорму(
		ЭтотОбъект,
		СотрудникиКлиентСервер.ОписаниеДополнительнойФормы(ИмяФормы),
		АдресВХранилище);
	
	// Место выплаты зарплаты владельца.
	Если НЕ МестаВыплатыЗарплатыПодразделенийПрочитан Тогда
		
		Если ЗначениеЗаполнено(ТекущееПодразделение) Тогда
			МестоВыплатыВладельца = ВзаиморасчетыССотрудникамиРасширенный.МестоВыплатыЗарплатыПодразделенияОрганизации(ТекущееПодразделение);
		КонецЕсли;
		
		Если МестоВыплатыВладельца = Неопределено И ЗначениеЗаполнено(ТекущаяОрганизация) Тогда
			МестоВыплатыВладельца = ВзаиморасчетыССотрудникамиРасширенный.МестоВыплатыЗарплатыОрганизации(ТекущаяОрганизация);
		КонецЕсли;
		
		Если МестоВыплатыВладельца <> Неопределено Тогда
			ЗаполнитьЗначенияСвойств(МестаВыплатыЗарплатыПодразделений, МестоВыплатыВладельца);
		КонецЕсли;
		
		МестаВыплатыЗарплатыПодразделенийПрочитан = Истина;
		
	КонецЕсли;
	
	// Место выплаты зарплаты сотрудника.
	Если НЕ МестаВыплатыЗарплатыСотрудниковПрочитан Тогда
		
		ЗначениеВДанныеФормы(ВзаиморасчетыССотрудникамиРасширенный.МестоВыплатыЗарплатыСотрудника(СотрудникСсылка, ФизическоеЛицоСсылка), МестаВыплатыЗарплатыСотрудников);
		МестаВыплатыЗарплатыСотрудниковПрочитан = Истина;
		
		МестаВыплатыЗарплатыСотрудниковПрежняя = ОбщегоНазначения.СтруктураПоМенеджеруЗаписи(МестаВыплатыЗарплатыСотрудников,
			Метаданные.РегистрыСведений.МестаВыплатыЗарплатыСотрудников);
		
	КонецЕсли;
	
	Если ЛицевыеСчетаСотрудниковПоЗарплатнымПроектамПрежняя = Неопределено Тогда
		ЛицевыеСчетаСотрудниковПрочитать();
	КонецЕсли;
	
	МестаВыплатыЗарплатыСотрудниковНастроитьПоля();
	МестаВыплатыЗарплатыСотрудниковУстановитьДоступность(ЭтотОбъект);
	
	Если БухучетЗарплатыСотрудниковПрежняя = Неопределено Тогда
		РедактированиеПериодическихСведений.ПрочитатьЗаписьДляРедактированияВФорме(ЭтотОбъект, "БухучетЗарплатыСотрудников", СотрудникСсылка);
	КонецЕсли;
	
	УстановитьПривилегированныйРежим(Ложь);
	
	БухучетЗарплатыСотрудниковОбновитьПолеПериод(ЭтотОбъект, ТекущаяДатаСеанса());
	
	ДоступныМестаВыплатыЗарплатыСотрудников = ПравоДоступа("Изменение", Метаданные.РегистрыСведений.МестаВыплатыЗарплатыСотрудников);
	ДоступенБухучетЗарплатыСотрудников = ПравоДоступа("Изменение", Метаданные.РегистрыСведений.БухучетЗарплатыСотрудников);
	
	РедактированиеБухучетаИнфоНадпись = НСтр("ru = 'Сведения на указанную дату зарегистрированы кадровым документом, для редактирования откройте историю изменения бухгалтерского учета.'");
	БухучетЗарплатыСотрудниковОбновитьСтраницы(ЭтотОбъект);
	УстановитьВидимостьЕНВД(Элементы, 
		ИспользуетсяЕНВД(БухучетЗарплатыСотрудников.Период));
	
	РедактированиеРазрешено =
		ДоступныМестаВыплатыЗарплатыСотрудников
		Или ПравоДоступа("Изменение", Метаданные.РегистрыСведений.ЛицевыеСчетаСотрудниковПоЗарплатнымПроектам)
		Или ДоступенБухучетЗарплатыСотрудников;
	
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
		Элементы,
		"ФормаOK",
		"Видимость",
		РедактированиеРазрешено);
	
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
		Элементы,
		"ФормаОтмена",
		"Заголовок",
		?(РедактированиеРазрешено, НСтр("ru = 'Отмена'"), НСтр("ru = 'Закрыть'")));
	
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
		Элементы,
		"ФормаOK",
		"КнопкаПоУмолчанию",
		РедактированиеРазрешено);
	
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
		Элементы,
		"ФормаОтмена",
		"КнопкаПоУмолчанию",
		НЕ РедактированиеРазрешено);
	
КонецПроцедуры

&НаКлиенте
Функция ЗаблокироватьОбъектВФормеВладельце() Экспорт
	
	Возврат СотрудникиКлиент.ЗаблокироватьОбъектВФормеВладельцеДополнительнойФормы(ЭтотОбъект, Истина, Ложь);
	
КонецФункции

&НаСервере
Процедура ПрочитатьНаборЗаписейПериодическихСведенийПоСтруктуре(ИмяРегистра, СтруктураВедущихОбъектов) Экспорт
	
	РедактированиеПериодическихСведений.ПрочитатьНаборЗаписейПоСтруктуре(ЭтотОбъект, ИмяРегистра, СтруктураВедущихОбъектов);
	
КонецПроцедуры

&НаСервере
Процедура ПрочитатьНаборЗаписейПериодическихСведений(ИмяРегистра, ВедущийОбъект) Экспорт
	
	РедактированиеПериодическихСведений.ПрочитатьНаборЗаписей(ЭтотОбъект, ИмяРегистра, ВедущийОбъект);
	
КонецПроцедуры

&НаСервере
Функция АдресДанныхДополнительнойФормыНаСервере(ОписаниеДополнительнойФормы)
	
	Возврат СотрудникиФормы.АдресДанныхДополнительнойФормы(ОписаниеДополнительнойФормы, ЭтотОбъект);
	
КонецФункции

&НаКлиенте
Процедура СохранитьИЗакрыть(Результат, ДополнительныеПараметры) Экспорт 
	
	СохранитьИЗакрытьНаКлиенте();
	
КонецПроцедуры

&НаКлиенте
Процедура СохранитьИЗакрытьНаКлиенте(ЗакрытьФорму = Истина) Экспорт 

	Если НЕ ТолькоПросмотр Тогда
		ТекущийЭлемент = Элементы.ФормаOK;
	КонецЕсли;
	
	ДополнительныеПараметры = Новый Структура("ЗакрытьФорму", ЗакрытьФорму);
	
	Оповещение = Новый ОписаниеОповещения("СохранитьИЗакрытьНаКлиентеЗавершение", ЭтотОбъект, ДополнительныеПараметры);
	СохранитьДанные(Ложь, Оповещение);
	
КонецПроцедуры

&НаКлиенте
Процедура СохранитьИЗакрытьНаКлиентеЗавершение(Отказ, ДополнительныеПараметры) Экспорт 

	Если Не Отказ И Открыта() Тогда
		
		Модифицированность = Ложь;
		Если ДополнительныеПараметры.ЗакрытьФорму Тогда
			Закрыть();
		КонецЕсли; 
		
	КонецЕсли; 
	
КонецПроцедуры

&НаКлиенте
Процедура СохранитьДанные(Отказ, ОповещениеЗавершения = Неопределено)
	
	Если Не Модифицированность Тогда
		Если ОповещениеЗавершения <> Неопределено Тогда 
			ВыполнитьОбработкуОповещения(ОповещениеЗавершения, Отказ);
		КонецЕсли;
		Возврат;
	КонецЕсли;
	
	Если Не СозданиеНового
		И Не Отказ Тогда
		
		Если ДоступенБухучетЗарплатыСотрудников Тогда
			БухучетЗарплатыСотрудниковЗапроситьРежимИзменения(БухучетЗарплатыСотрудников.Период, Отказ, ОповещениеЗавершения);
		Иначе
			СохранитьДанныеЗавершение(Отказ, ОповещениеЗавершения);
		КонецЕсли;
		
	Иначе
		СохранитьДанныеЗавершение(Отказ, ОповещениеЗавершения);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СохранитьДанныеЗавершение(Отказ, ОповещениеЗавершения) Экспорт 
	
	Если Не Отказ Тогда
		
		Если ДоступныМестаВыплатыЗарплатыСотрудников
			И МестаВыплатыЗарплатыСотрудников.Вид = ПредопределенноеЗначение("Перечисление.ВидыМестВыплатыЗарплаты.ЗарплатныйПроект") Тогда
			
			МестаВыплатыЗарплатыСотрудников.МестоВыплаты = ЛицевыеСчетаСотрудниковПоЗарплатнымПроектам.ЗарплатныйПроект;
			
		КонецЕсли;
		
		Если ПроверитьЗаполнение() Тогда
			
			ВозвращаемыйПараметр = Новый Структура;
			ВозвращаемыйПараметр.Вставить("ИмяФормы", ИмяФормы);
			ВозвращаемыйПараметр.Вставить("АдресВХранилище", АдресДанныхДополнительнойФормыНаСервере(СотрудникиКлиентСервер.ОписаниеДополнительнойФормы(ИмяФормы)));
			
			Оповестить(
				"ИзмененыДанныеДополнительнойФормы",
				ВозвращаемыйПараметр,
				ВладелецФормы);
			
		Иначе
			Отказ = Истина;
		КонецЕсли;
		
	КонецЕсли; 
	
	Если ОповещениеЗавершения <> Неопределено Тогда 
		ВыполнитьОбработкуОповещения(ОповещениеЗавершения, Отказ);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура МестаВыплатыЗарплатыСотрудниковНастроитьПоля()
	
	// установка типов полей
	ОписателиПолейМестВыплаты = Новый Соответствие;
	
	МестаВыплатыЗарплатыСотрудниковДобавитьОписаниеПоля(ОписателиПолейМестВыплаты, "МестоВыплатыКассаДоступноПоле",				Перечисления.ВидыМестВыплатыЗарплаты.Касса);
	МестаВыплатыЗарплатыСотрудниковДобавитьОписаниеПоля(ОписателиПолейМестВыплаты, "МестоВыплатыКассаНеДоступноПоле",				Перечисления.ВидыМестВыплатыЗарплаты.Касса);
	
	МестаВыплатыЗарплатыСотрудниковДобавитьОписаниеПоля(ОписателиПолейМестВыплаты, "МестоВыплатыЗарплатныйПроектДоступноПоле",		Перечисления.ВидыМестВыплатыЗарплаты.ЗарплатныйПроект);
	МестаВыплатыЗарплатыСотрудниковДобавитьОписаниеПоля(ОписателиПолейМестВыплаты, "МестоВыплатыЗарплатныйПроектНеДоступноПоле",	Перечисления.ВидыМестВыплатыЗарплаты.ЗарплатныйПроект);
	
	МестаВыплатыЗарплатыСотрудниковДобавитьОписаниеПоля(ОписателиПолейМестВыплаты, "МестоВыплатыРаздатчикДоступноПоле",			Перечисления.ВидыМестВыплатыЗарплаты.Раздатчик);
	МестаВыплатыЗарплатыСотрудниковДобавитьОписаниеПоля(ОписателиПолейМестВыплаты, "МестоВыплатыРаздатчикНеДоступноПоле",			Перечисления.ВидыМестВыплатыЗарплаты.Раздатчик);
	
	МестаВыплатыЗарплатыСотрудниковДобавитьОписаниеПоля(ОписателиПолейМестВыплаты, "МестоВыплатыБанковскийСчетДоступноПоле",		Перечисления.ВидыМестВыплатыЗарплаты.БанковскийСчет);
	МестаВыплатыЗарплатыСотрудниковДобавитьОписаниеПоля(ОписателиПолейМестВыплаты, "МестоВыплатыБанковскийСчетНеДоступноПоле",		Перечисления.ВидыМестВыплатыЗарплаты.БанковскийСчет);
	
	МестаВыплатыЗарплатыФормыРасширенный.НастроитьПоляМестВыплатыЗарплаты(ОписателиПолейМестВыплаты);
	
	
	// настройка параметров выбора
	
	// банковский счет
	ПараметрыВыбора = 
		ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве(Новый ПараметрВыбора("Отбор.Владелец", ФизическоеЛицоСсылка));
	Элементы.МестоВыплатыБанковскийСчетДоступноПоле.ПараметрыВыбора = Новый ФиксированныйМассив(ПараметрыВыбора); 

КонецПроцедуры

&НаСервере
Процедура МестаВыплатыЗарплатыСотрудниковДобавитьОписаниеПоля(ОписателиПолейМестВыплаты, ИмяЭлемента, ВидМеста)
	
	Элемент = Элементы.Найти(ИмяЭлемента);
	Если Элемент <> Неопределено Тогда
		ОписателиПолейМестВыплаты.Вставить(Элемент, ВидМеста);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура МестаВыплатыЗарплатыСотрудниковУстановитьДоступность(Форма) Экспорт
	
	Элементы = Форма.Элементы;
	
	СтруктураГруппы = "Группа, СтраницаДоступно, СтраницаНеДоступно";
	
	ГруппыМестВыплаты = Новый Соответствие;
	
	ГруппыМестВыплаты.Вставить(ПредопределенноеЗначение("Перечисление.ВидыМестВыплатыЗарплаты.ПустаяСсылка"),
		Новый Структура(СтруктураГруппы, Элементы.МестоВыплатыКакВсем, Элементы.МестоВыплатыКакВсемДоступно, Элементы.МестоВыплатыКакВсемНеДоступно));
	ГруппыМестВыплаты.Вставить(ПредопределенноеЗначение("Перечисление.ВидыМестВыплатыЗарплаты.Касса"),
		Новый Структура(СтруктураГруппы, Элементы.МестоВыплатыКасса, Элементы.МестоВыплатыКассаДоступно, Элементы.МестоВыплатыКассаНеДоступно));
	ГруппыМестВыплаты.Вставить(ПредопределенноеЗначение("Перечисление.ВидыМестВыплатыЗарплаты.ЗарплатныйПроект"),
		Новый Структура(СтруктураГруппы, Элементы.МестоВыплатыЗарплатныйПроект, Элементы.МестоВыплатыЗарплатныйПроектДоступно, Элементы.МестоВыплатыЗарплатныйПроектНеДоступно));
	ГруппыМестВыплаты.Вставить(ПредопределенноеЗначение("Перечисление.ВидыМестВыплатыЗарплаты.Раздатчик"),
		Новый Структура(СтруктураГруппы, Элементы.МестоВыплатыРаздатчик, Элементы.МестоВыплатыРаздатчикДоступно, Элементы.МестоВыплатыРаздатчикНеДоступно));
	ГруппыМестВыплаты.Вставить(ПредопределенноеЗначение("Перечисление.ВидыМестВыплатыЗарплаты.БанковскийСчет"),
		Новый Структура(СтруктураГруппы, Элементы.МестоВыплатыБанковскийСчет, Элементы.МестоВыплатыБанковскийСчетДоступно, Элементы.МестоВыплатыБанковскийСчетНеДоступно));
	
	ГруппаМестВыплаты = ГруппыМестВыплаты[Форма.МестаВыплатыЗарплатыСотрудников.Вид];
	Для Каждого ГруппаМестВыплаты Из ГруппыМестВыплаты Цикл
		Если ГруппаМестВыплаты.Ключ = Форма.МестаВыплатыЗарплатыСотрудников.Вид Тогда
			ГруппаМестВыплаты.Значение.Группа.ТекущаяСтраница = ГруппаМестВыплаты.Значение.СтраницаДоступно
		Иначе
			ГруппаМестВыплаты.Значение.Группа.ТекущаяСтраница = ГруппаМестВыплаты.Значение.СтраницаНеДоступно
		КонецЕсли
	КонецЦикла;
	
	Если Форма.МестаВыплатыЗарплатыСотрудников.Вид = ПредопределенноеЗначение("Перечисление.ВидыМестВыплатыЗарплаты.ЗарплатныйПроект") Тогда
		ВыплатаЧерезЗарплатныйПроект = Истина;
	ИначеЕсли Форма.МестаВыплатыЗарплатыСотрудников.Вид = ПредопределенноеЗначение("Перечисление.ВидыМестВыплатыЗарплаты.ПустаяСсылка")
			И Форма.МестаВыплатыЗарплатыПодразделений.Вид = ПредопределенноеЗначение("Перечисление.ВидыМестВыплатыЗарплаты.ЗарплатныйПроект") Тогда
		
		ВыплатаЧерезЗарплатныйПроект = Истина;
		
	Иначе
		ВыплатаЧерезЗарплатныйПроект = Ложь;
	КонецЕсли;
	
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
		Форма.Элементы,
		"ЛицевойСчет",
		"Видимость",
		ВыплатаЧерезЗарплатныйПроект);
	
КонецПроцедуры

&НаСервере
Процедура МестоВыплатыЗарплатныйПроектДоступноПолеПриИзмененииНаСервере(ЗарплатныйПроект = Неопределено)
	
	ЛицевыеСчетаСотрудниковПрочитать(ЗарплатныйПроект);
	
КонецПроцедуры

&НаКлиенте
Функция МестаВыплатыЗарплатыСотрудниковЗаблокироватьСотрудника()
	
	Если Не ЗаблокироватьОбъектВФормеВладельце() Тогда
		
		ЗаполнитьЗначенияСвойств(МестаВыплатыЗарплатыСотрудников, МестаВыплатыЗарплатыСотрудниковПрежняя);
		Возврат Ложь;
		
	КонецЕсли;
	
	Возврат Истина;
	
КонецФункции

// Работа с лицевыми счетами

&НаКлиенте
Функция ЛицевыеСчетаСотрудниковПоЗарплатнымПроектамЗаблокироватьСотрудника()
	
	Если Не ЗаблокироватьОбъектВФормеВладельце() Тогда
		
		ЗаполнитьЗначенияСвойств(ЛицевыеСчетаСотрудниковПоЗарплатнымПроектам, ЛицевыеСчетаСотрудниковПоЗарплатнымПроектамПрежняя);
		Возврат Ложь;
		
	КонецЕсли;
	
	Возврат Истина;
	
КонецФункции

&НаКлиентеНаСервереБезКонтекста
Процедура ЛицевыеСчетаСотрудниковПоЗарплатнымПроектамУстановитьОтображение(Форма)
	
	Элементы = Форма.Элементы;
	ФизическоеЛицоСсылка = Форма.ФизическоеЛицоСсылка;
	ТекущаяОрганизация = Форма.ТекущаяОрганизация;
	
	ЛицевыеСчетаСотрудниковПоЗарплатнымПроектам = Форма.ЛицевыеСчетаСотрудниковПоЗарплатнымПроектам;
	ЛицевыеСчетаСотрудниковПоЗарплатнымПроектамПрежняя = Форма.ЛицевыеСчетаСотрудниковПоЗарплатнымПроектамПрежняя;
	
	Если НЕ ПустаяСтрока(ЛицевыеСчетаСотрудниковПоЗарплатнымПроектам.НомерЛицевогоСчета) Тогда
		
		СтруктураПояснения = СтруктураПоясненияКНомеруЛицевогоСчета(
			ФизическоеЛицоСсылка,
			ЛицевыеСчетаСотрудниковПоЗарплатнымПроектам.ЗарплатныйПроект,
			ЛицевыеСчетаСотрудниковПоЗарплатнымПроектам.НомерЛицевогоСчета,
			ЛицевыеСчетаСотрудниковПоЗарплатнымПроектам,
			ЛицевыеСчетаСотрудниковПоЗарплатнымПроектамПрежняя,
			Ложь);
		
	Иначе
		СтруктураПояснения = Неопределено;
	КонецЕсли;
	
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
		Элементы,
		"ЛицевыеСчетаСотрудниковПоЗарплатнымПроектамНомерЛицевогоСчета",
		"ТолькоПросмотр",
		Не ЗначениеЗаполнено(ЛицевыеСчетаСотрудниковПоЗарплатнымПроектам.ЗарплатныйПроект));
	
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
		Элементы,
		"ЛицевыеСчетаСотрудниковПоЗарплатнымПроектамДатаОткрытияЛицевогоСчета",
		"ТолькоПросмотр",
		Не ЗначениеЗаполнено(ЛицевыеСчетаСотрудниковПоЗарплатнымПроектам.ЗарплатныйПроект)
			Или Не ЗначениеЗаполнено(ЛицевыеСчетаСотрудниковПоЗарплатнымПроектам.НомерЛицевогоСчета));
	
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
		Элементы,
		"ЛицевойСчет",
		"ТолькоПросмотр",
		ЗначениеЗаполнено(ЛицевыеСчетаСотрудниковПоЗарплатнымПроектам.ДокументОснование));
	
	Если СтруктураПояснения <> Неопределено
		И Не ПустаяСтрока(СтруктураПояснения.СообщенияПроверки) Тогда
		
		Если СтруктураПояснения.Картинка.Вид = ВидКартинки.Пустая Тогда
			ПодсказкаЛицевогоСчета = Новый ФорматированнаяСтрока("");
		Иначе
			ПодсказкаЛицевогоСчета = Новый ФорматированнаяСтрока(СтруктураПояснения.Картинка);
		КонецЕсли;
		
		ПодсказкаЛицевогоСчета = Новый ФорматированнаяСтрока(
			ПодсказкаЛицевогоСчета,
			" ",
			Новый ФорматированнаяСтрока(СтруктураПояснения.СообщенияПроверки, , СтруктураПояснения.ЭлементЦветТекста));
		
	ИначеЕсли ЗначениеЗаполнено(ТекущаяОрганизация) Тогда
		ПодсказкаЛицевогоСчета = "";
	Иначе
		
		ПодсказкаЛицевогоСчета = Новый ФорматированнаяСтрока(
			БиблиотекаКартинок.Информация,
			" ",
			НСтр("ru = 'Для ввода лицевого счета, необходимо оформить прием на работу'"));
		
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ЛицевыеСчетаСотрудниковПоЗарплатнымПроектам.ДокументОснование) Тогда
		
		Если ЗначениеЗаполнено(ПодсказкаЛицевогоСчета) Тогда
			
			ПодсказкаЛицевогоСчета = Новый ФорматированнаяСтрока(
				ПодсказкаЛицевогоСчета,
				Символы.ПС);
			
		КонецЕсли;
		
		ПодсказкаЛицевогоСчета = Новый ФорматированнаяСтрока(
			ПодсказкаЛицевогоСчета,
			НСтр("ru='Введен документом'") + ": ",
			Новый ФорматированнаяСтрока(
				Строка(ЛицевыеСчетаСотрудниковПоЗарплатнымПроектам.ДокументОснование),
				,
				,
				,
				ПолучитьНавигационнуюСсылку(ЛицевыеСчетаСотрудниковПоЗарплатнымПроектам.ДокументОснование)));
		
	КонецЕсли;
	
	ЗарплатаКадрыКлиентСервер.УстановитьРасширеннуюПодсказкуЭлементуФормы(
		Форма, "ЛицевойСчет", ПодсказкаЛицевогоСчета);
	
КонецПроцедуры

&НаСервере
Процедура ЛицевыеСчетаСотрудниковПрочитать(Знач ЗарплатныйПроект = Неопределено)
	
	Если Не ЗначениеЗаполнено(ЗарплатныйПроект) Тогда
		
		Если МестаВыплатыЗарплатыСотрудников.Вид = ПредопределенноеЗначение("Перечисление.ВидыМестВыплатыЗарплаты.ЗарплатныйПроект") Тогда
			
			ЗарплатныйПроект = МестаВыплатыЗарплатыСотрудников.МестоВыплаты;
			
		ИначеЕсли МестаВыплатыЗарплатыСотрудников.Вид = ПредопределенноеЗначение("Перечисление.ВидыМестВыплатыЗарплаты.ПустаяСсылка")
			И МестаВыплатыЗарплатыПодразделений.Вид = ПредопределенноеЗначение("Перечисление.ВидыМестВыплатыЗарплаты.ЗарплатныйПроект") Тогда
			
			ЗарплатныйПроект = МестаВыплатыЗарплатыПодразделений.МестоВыплаты;
			
		КонецЕсли;
		
	КонецЕсли;
	
	ЛицевыеСчетаСотрудниковПоЗарплатнымПроектамМенеджерЗаписи = РегистрыСведений.ЛицевыеСчетаСотрудниковПоЗарплатнымПроектам.СоздатьМенеджерЗаписи();
	ЛицевыеСчетаСотрудниковПоЗарплатнымПроектамМенеджерЗаписи.ФизическоеЛицо = ФизическоеЛицоСсылка;
	ЛицевыеСчетаСотрудниковПоЗарплатнымПроектамМенеджерЗаписи.Организация = ТекущаяОрганизация;
	
	Если ЗначениеЗаполнено(ЗарплатныйПроект) Тогда
		
		ЛицевыеСчетаСотрудниковПоЗарплатнымПроектамМенеджерЗаписи.ЗарплатныйПроект = ЗарплатныйПроект;
		ЛицевыеСчетаСотрудниковПоЗарплатнымПроектамМенеджерЗаписи.Прочитать();
		
		Если Не ЛицевыеСчетаСотрудниковПоЗарплатнымПроектамМенеджерЗаписи.Выбран() Тогда
			
			ЛицевыеСчетаСотрудниковПоЗарплатнымПроектамМенеджерЗаписи.ФизическоеЛицо = ФизическоеЛицоСсылка;
			ЛицевыеСчетаСотрудниковПоЗарплатнымПроектамМенеджерЗаписи.Организация = ТекущаяОрганизация;
			ЛицевыеСчетаСотрудниковПоЗарплатнымПроектамМенеджерЗаписи.ЗарплатныйПроект = ЗарплатныйПроект;
			
		КонецЕсли;
		
	КонецЕсли;
	
	ЗначениеВРеквизитФормы(ЛицевыеСчетаСотрудниковПоЗарплатнымПроектамМенеджерЗаписи, "ЛицевыеСчетаСотрудниковПоЗарплатнымПроектам");
	
	ЛицевыеСчетаСотрудниковПоЗарплатнымПроектамПрежняя = ОбщегоНазначения.СтруктураПоМенеджеруЗаписи(
		ЛицевыеСчетаСотрудниковПоЗарплатнымПроектам, Метаданные.РегистрыСведений.ЛицевыеСчетаСотрудниковПоЗарплатнымПроектам);
	
	ЛицевыеСчетаСотрудниковПоЗарплатнымПроектамУстановитьОтображение(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура ЛицевыеСчетаСотрудниковПоЗарплатнымПроектамПриИзменении()
	
	Если Не ЗначениеЗаполнено(ЛицевыеСчетаСотрудниковПоЗарплатнымПроектам.ДатаОткрытияЛицевогоСчета) Тогда
		ЛицевыеСчетаСотрудниковПоЗарплатнымПроектам.ДатаОткрытияЛицевогоСчета = НачалоМесяца(ОбщегоНазначенияКлиент.ДатаСеанса());
	КонецЕсли;
	
	МестаВыплатыЗарплатыСотрудниковУстановитьДоступность(ЭтотОбъект);
	ЛицевыеСчетаСотрудниковПоЗарплатнымПроектамУстановитьОтображение(ЭтотОбъект);
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция СтруктураПоясненияКНомеруЛицевогоСчета(ФизическоеЛицо, ЗарплатныйПроект, НомерЛицевогоСчета, ЛицевыеСчета, ЛицевыеСчетаПрежняя, ПерсонализироватьСообщение)
	СтруктураПояснения = ОбменСБанкамиПоЗарплатнымПроектамФормы.СтруктураПоясненияКНомеруЛицевогоСчета(
		ФизическоеЛицо,
		ЗарплатныйПроект,
		НомерЛицевогоСчета,
		ЛицевыеСчета,
		ЛицевыеСчетаПрежняя,
		ПерсонализироватьСообщение);
	Возврат СтруктураПояснения	
КонецФункции


&НаКлиентеНаСервереБезКонтекста
Процедура БухучетЗарплатыСотрудниковОбновитьПолеПериод(Форма, ДатаСеанса) Экспорт
	
	// Не обязательно заполнение поля Период если данные по умолчанию и при этом 
	// записи о бухучете еще нет.
	Если ЗарплатаКадрыКлиентСервер.СведенияОБухучетеСотрудникаПоУмолчанию(Форма.БухучетЗарплатыСотрудников) И 
		НЕ ЗначениеЗаполнено(Форма.БухучетЗарплатыСотрудниковПрежняя.Период) Тогда
		Если ЗначениеЗаполнено(Форма.БухучетЗарплатыСотрудников.Период) Тогда
			Форма.БухучетЗарплатыСотрудников.Период = '00010101';
		КонецЕсли;
	Иначе
		Если НЕ ЗначениеЗаполнено(Форма.БухучетЗарплатыСотрудников.Период) Тогда
			Если ЗначениеЗаполнено(Форма.ДатаПриема) Тогда
				Форма.БухучетЗарплатыСотрудников.Период = НачалоДня(Форма.ДатаПриема);
			Иначе
				Форма.БухучетЗарплатыСотрудников.Период = НачалоДня(ДатаСеанса);
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
	РедактированиеПериодическихСведенийКлиентСервер.ОбновитьОтображениеПолейВвода(Форма, "БухучетЗарплатыСотрудников", Форма.СотрудникСсылка);
	
КонецПроцедуры

&НаКлиенте
Процедура БухучетЗарплатыСотрудниковЗапроситьРежимИзменения(ДатаИзменения, Отказ, ОповещениеЗавершения)
	
	ДополнительныеПараметры = Новый Структура("ОповещениеЗавершения", ОповещениеЗавершения);
	Оповещение = Новый ОписаниеОповещения("БухучетЗарплатыСотрудниковЗапроситьРежимИзмененияЗавершение", ЭтотОбъект, ДополнительныеПараметры);
	
	ТекстКнопкиДа = НСтр("ru = 'Изменился бухучет'");
	ТекстВопроса = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
		НСтр("ru =  'При редактировании изменился бухгалтерский учет для сотрудника. 
					|Если просто исправлены прежние данные (они были ошибочны), нажмите ""Исправлена ошибка"".
					|Если бухучет сотрудника изменился с %1, нажмите ""Изменился бухучет""'"), 
		Формат(ДатаИзменения, "ДЛФ=DD"));
	
	РедактированиеПериодическихСведенийКлиент.ЗапроситьРежимИзмененияРегистра(ЭтотОбъект, "БухучетЗарплатыСотрудников", ТекстВопроса, ТекстКнопкиДа, Отказ, Оповещение);
	
КонецПроцедуры

&НаКлиенте
Процедура БухучетЗарплатыСотрудниковЗапроситьРежимИзмененияЗавершение(Отказ, ДополнительныеПараметры) Экспорт 
	
	СохранитьДанныеЗавершение(Отказ, ДополнительныеПараметры.ОповещениеЗавершения);
	
КонецПроцедуры

&НаКлиенте
Функция БухучетЗарплатыСотрудниковЗаблокироватьСотрудника()
	
	Если Не ЗаблокироватьОбъектВФормеВладельце() Тогда
		
		ЗаполнитьЗначенияСвойств(БухучетЗарплатыСотрудников, БухучетЗарплатыСотрудниковПрежняя);
		Возврат Ложь;
		
	КонецЕсли;
	
	Возврат Истина;
	
КонецФункции

&НаКлиентеНаСервереБезКонтекста
Процедура БухучетЗарплатыСотрудниковОбновитьСтраницы(Форма)
	
	Если ЗначениеЗаполнено(Форма.БухучетЗарплатыСотрудников.ДействуетДо) Тогда
		
		ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
			Форма.Элементы,
			"БухучетСтраницы",
			"ТекущаяСтраница",
			Форма.Элементы.БухучетСтраницаДействуетПоОкончании);
		
		ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
			Форма.Элементы,
			"РедактированиеБухучетаИнфоНадпись",
			"Видимость",
			Истина);
		
	Иначе
		
		ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
			Форма.Элементы,
			"БухучетСтраницы",
			"ТекущаяСтраница",
			Форма.Элементы.БухучетСтраницаДействует);
		
		ТолькоПросмотр = ЗначениеЗаполнено(Форма.БухучетЗарплатыСотрудников.ДокументОснование);
		
		ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
			Форма.Элементы,
			"БухучетЗарплатыСотрудниковСтатьяФинансирования",
			"ТолькоПросмотр",
			ТолькоПросмотр);
		
		ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
			Форма.Элементы,
			"БухучетЗарплатыСотрудниковСпособОтраженияЗарплатыВБухучете",
			"ТолькоПросмотр",
			ТолькоПросмотр);
		
		ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
			Форма.Элементы,
			"БухучетЗарплатыСотрудниковОтношениеКЕНВД",
			"ТолькоПросмотр",
			ТолькоПросмотр);
		
		ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
			Форма.Элементы,
			"БухучетЗарплатыСотрудниковПериод",
			"ТолькоПросмотр",
			ТолькоПросмотр);
		
		ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
			Форма.Элементы,
			"РедактированиеБухучетаИнфоНадпись",
			"Видимость",
			ТолькоПросмотр);
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура УстановитьВидимостьЕНВД(ЭлементыФормы, ИспользуетсяЕНВД)

	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
		ЭлементыФормы,
		"БухучетЗарплатыСотрудниковОтношениеКЕНВД",
		"Видимость",
		ИспользуетсяЕНВД);
		
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
		ЭлементыФормы,
		"БухучетЗарплатыСотрудниковОтношениеКЕНВДПоОкончании",
		"Видимость",
		ИспользуетсяЕНВД);	

КонецПроцедуры

&НаСервереБезКонтекста
Функция ИспользуетсяЕНВД(Период)

	Возврат ОтражениеЗарплатыВБухучете.ИспользуетсяЕНВД(Период);

КонецФункции

#КонецОбласти
