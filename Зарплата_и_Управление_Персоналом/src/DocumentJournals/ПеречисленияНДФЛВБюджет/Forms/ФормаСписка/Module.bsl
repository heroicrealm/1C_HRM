#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ЗарплатаКадры.ПриСозданииНаСервереФормыСДинамическимСписком(ЭтотОбъект, "Список");
	
	СформироватьПодменюСоздатьДокумент();
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПараметрыРазмещения = ПодключаемыеКоманды.ПараметрыРазмещения();
	ПараметрыРазмещения.КоманднаяПанель = Элементы.КоманднаяПанельФормы;
	ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект, ПараметрыРазмещения);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	УстановитьУсловноеОформлениеСписка();
	УстановитьВидимостьПолейСписка();
	
КонецПроцедуры
			
#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыСписок

&НаКлиенте
Процедура СписокПриАктивизацииСтроки(Элемент)
	ПодключаемыеКомандыКлиент.НачатьОбновлениеКоманд(ЭтотОбъект);
КонецПроцедуры

&НаСервере
Процедура СписокПередЗагрузкойПользовательскихНастроекНаСервере(Элемент, Настройки)
	ЗарплатаКадры.ПроверитьПользовательскиеНастройкиДинамическогоСписка(ЭтотОбъект, Настройки);
КонецПроцедуры

&НаСервере
Процедура СписокПриОбновленииСоставаПользовательскихНастроекНаСервере(СтандартнаяОбработка)
	
	ЗарплатаКадры.ПроверитьПользовательскиеНастройкиДинамическогоСписка(ЭтотОбъект, , СтандартнаяОбработка);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

// СтандартныеПодсистемы.ПодключаемыеКоманды
&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
	ПодключаемыеКомандыКлиент.ВыполнитьКоманду(ЭтотОбъект, Команда, Элементы.Список);
КонецПроцедуры

&НаСервере
Процедура Подключаемый_ВыполнитьКомандуНаСервере(Контекст, Результат) Экспорт
	ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, Контекст, Элементы.Список, Результат);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Элементы.Список);
КонецПроцедуры
// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

&НаКлиенте
Процедура Подключаемый_СоздатьДокумент(Команда)
	
	ПараметрыОткрытия = Новый Структура;
	ЗарплатаКадрыКлиент.ДинамическийСписокПередНачаломДобавления(ЭтотОбъект, ПараметрыОткрытия, КомандыСозданияДокументов.Получить(Команда.Имя).ПолноеИмя);
	
	ЗарплатаКадрыРасширенныйКлиент.СоздатьДокументПоОписанию(ЭтаФорма, Команда.Имя, ПараметрыОткрытия.ЗначенияЗаполнения);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура УстановитьУсловноеОформлениеСписка()

	ТекстПустогоЗначения = НСтр("ru='<не указаны>'");
	
	// Список, поле ПеречислениеНДФЛРеквизиты.
	ЭлементОформления = УсловноеОформление.Элементы.Добавить();
	// Вид оформления
	ЭлементОформления.Оформление.УстановитьЗначениеПараметра("Текст", ТекстПустогоЗначения);
	ЭлементОформления.Оформление.УстановитьЗначениеПараметра("ЦветТекста", ЦветаСтиля.ПоясняющийТекст);
	// Оформляемое поле
	ПолеОформления = ЭлементОформления.Поля.Элементы.Добавить();
	ПолеОформления.Поле = Новый ПолеКомпоновкиДанных("ПеречислениеНДФЛРеквизиты");
	// условие для оформления
	ЭлементОтбора = ЭлементОформления.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ЭлементОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных.НеЗаполнено;
	ЭлементОтбора.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Список.ПеречислениеНДФЛРеквизиты");

КонецПроцедуры

&НаСервере
Процедура УстановитьВидимостьПолейСписка()
	
	ВедутсяРасчетыСБюджетом = ПолучитьФункциональнуюОпцию("ВестиРасчетыСБюджетомПоНДФЛ");
	ИспользоватьСтатьюРасходов = ПолучитьФункциональнуюОпцию("РаботаВБюджетномУчреждении");
	
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
		Элементы,
		"ДатаПлатежа",
		"Видимость",
		ВедутсяРасчетыСБюджетом);
	
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
		Элементы,
		"Сумма",
		"Видимость",
		ВедутсяРасчетыСБюджетом);
	
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
		Элементы,
		"РегистрацияВНалоговомОргане",
		"Видимость",
		ВедутсяРасчетыСБюджетом);
		
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
		Элементы,
		"СтатьяРасходов",
		"Видимость",
		ИспользоватьСтатьюРасходов И ВедутсяРасчетыСБюджетом);
		
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
		Элементы,
		"СтатьяФинансирования",
		"Видимость",
		ВедутсяРасчетыСБюджетом);
	
КонецПроцедуры

&НаСервере
Процедура СформироватьПодменюСоздатьДокумент()

	КоллекцияОбъектов = Метаданные.ЖурналыДокументов.ПеречисленияНДФЛВБюджет.РегистрируемыеДокументы;
	НовыеКомандыСозданияДокументов = Неопределено;
	Для каждого МетаданныеДокумента Из КоллекцияОбъектов Цикл
		
		Если Не ОбщегоНазначения.ОбъектМетаданныхДоступенПоФункциональнымОпциям(МетаданныеДокумента)
			Или Не ПравоДоступа("Добавление", МетаданныеДокумента) Тогда
				Продолжить;
		КонецЕсли;
		
		ИмяОбъектаМетаданных = МетаданныеДокумента.Имя;
		Если ИмяОбъектаМетаданных = "ПеречислениеНДФЛВБюджет" Тогда
			ПорядокКоманды = 1;
		Иначе
			Продолжить;
		КонецЕсли;
		
		ПолноеИмяОбъектаМетаданных = МетаданныеДокумента.ПолноеИмя();
		ОписаниеКоманды = ЗарплатаКадрыРасширенный.ОписаниеКомандыСозданияДокумента(ПолноеИмяОбъектаМетаданных, МетаданныеДокумента.Представление());
		ОписаниеКоманды.Порядок = ПорядокКоманды;
		ЗарплатаКадрыРасширенный.ДобавитьВКоллекциюКомандуСозданияДокумента(НовыеКомандыСозданияДокументов, ОписаниеКоманды)
		
	КонецЦикла;

	Если НовыеКомандыСозданияДокументов <> Неопределено Тогда
		
		КомандыСозданияДокументов = Новый ФиксированноеСоответствие(НовыеКомандыСозданияДокументов);
		
		Если КомандыСозданияДокументов.Количество() > 0 Тогда
			
			ЭлементПодменюСоздать = Элементы.Найти("ПодменюСоздать");
			
			ТаблицаПорядка = Новый ТаблицаЗначений;
			ТаблицаПорядка.Колонки.Добавить("ИмяКоманды");
			ТаблицаПорядка.Колонки.Добавить("Представление");
			ТаблицаПорядка.Колонки.Добавить("Порядок");
			
			Для каждого ОписаниеКоманды Из КомандыСозданияДокументов Цикл
				НоваяСтрокаПорядка = ТаблицаПорядка.Добавить();
				ЗаполнитьЗначенияСвойств(НоваяСтрокаПорядка, ОписаниеКоманды.Значение);
				НоваяСтрокаПорядка.ИмяКоманды = ОписаниеКоманды.Ключ;
			КонецЦикла;
			
			ТаблицаПорядка.Сортировать("Порядок,Представление");
			
			Для каждого СтрокаПорядка Из ТаблицаПорядка Цикл
				
				ИмяКоманды = СтрокаПорядка.ИмяКоманды;
				ОписаниеКоманды = КомандыСозданияДокументов.Получить(ИмяКоманды);
				
				// Добавляем команду
				НоваяКоманда = Команды.Добавить(ИмяКоманды);
				НоваяКоманда.Заголовок	= ОписаниеКоманды.Представление;
				
				НоваяКоманда.Действие	= "Подключаемый_СоздатьДокумент";
				
				// Добавляем кнопку
				Кнопка = Элементы.Добавить(ИмяКоманды, Тип("КнопкаФормы"), ЭлементПодменюСоздать); 
				Кнопка.ИмяКоманды	= НоваяКоманда.Имя;
				
			КонецЦикла;
		
		КонецЕсли;
		
	КонецЕсли;

КонецПроцедуры

#КонецОбласти

