
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	НайтиЗадублированныхФизическихЛиц();
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	Если ЗадублированныеФизическиеЛица.ПолучитьЭлементы().Количество() = 0 Тогда
		
		Отказ = Истина;
		
		ТекстПредупреждения = НСтр("ru='Не найдены карточки с задвоенными данными'");
		ПоказатьПредупреждение(, ТекстПредупреждения);
		
	Иначе
		
		РазвернутьДерево();
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗадублированныеФизическиеЛицаВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	ВыполнитьВыбор();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Выбрать(Команда)
	
	ВыполнитьВыбор();

КонецПроцедуры

&НаКлиенте
Процедура ОбновитьСписок(Команда)
	
	НайтиЗадублированныхФизическихЛиц();
	РазвернутьДерево();
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура НайтиЗадублированныхФизическихЛиц()
	
	ЗадублированныеФизическиеЛица.ПолучитьЭлементы().Очистить();
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	КадровыйУчетРасширенный.СоздатьВТЗадублированныеФизическиеЛица(Запрос.МенеджерВременныхТаблиц);
	
	Запрос.Текст =
		"ВЫБРАТЬ
		|	ЗадублированныеФизическиеЛица.ОбластьПоиска КАК ОбластьПоиска,
		|	ЗадублированныеФизическиеЛица.Значение КАК Значение,
		|	ЗадублированныеФизическиеЛица.ФизическоеЛицо КАК ФизическоеЛицо,
		|	ЗадублированныеФизическиеЛица.ИНН КАК ИНН,
		|	ЗадублированныеФизическиеЛица.СтраховойНомерПФР КАК СтраховойНомерПФР,
		|	ЗадублированныеФизическиеЛица.ДокументВид КАК ДокументВид,
		|	ЗадублированныеФизическиеЛица.ДокументНомер КАК ДокументНомер,
		|	ЗадублированныеФизическиеЛица.ДокументСерия КАК ДокументСерия
		|ИЗ
		|	ВТЗадублированныеФизическиеЛица КАК ЗадублированныеФизическиеЛица
		|ИТОГИ
		|	МАКСИМУМ(ИНН),
		|	МАКСИМУМ(СтраховойНомерПФР),
		|	МАКСИМУМ(ДокументВид),
		|	МАКСИМУМ(ДокументНомер),
		|	МАКСИМУМ(ДокументСерия)
		|ПО
		|	ОбластьПоиска,
		|	Значение";
		
	Запрос.УстановитьПараметр("ИНН", НСтр("ru='ИНН'"));
	Запрос.УстановитьПараметр("СНИЛС", НСтр("ru='СНИЛС'"));
	Запрос.УстановитьПараметр("ДокументУдостоверяющийЛичность", НСтр("ru='Документ, удостоверяющий личность'"));
	
	ДеревоЗначений = Запрос.Выполнить().Выгрузить(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	ЗаполнитьЗадублированныеФизическиеЛица(ЗадублированныеФизическиеЛица.ПолучитьЭлементы(), ДеревоЗначений);
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьЗадублированныеФизическиеЛица(КоллекцияСтрокДанныхФормы, СтрокаДанных)
	
	Для каждого СтрокаСтрокиДанных Из СтрокаДанных.Строки Цикл
		
		НоваяСтрокаКоллекции = КоллекцияСтрокДанныхФормы.Добавить();
		
		ЗаполнитьЗначенияСвойств(НоваяСтрокаКоллекции, СтрокаСтрокиДанных);
		Если СтрокаСтрокиДанных.Значение = Null Тогда
			НоваяСтрокаКоллекции.Представление = СтрокаСтрокиДанных.ОбластьПоиска;
		ИначеЕсли СтрокаСтрокиДанных.ФизическоеЛицо = Null Тогда
			НоваяСтрокаКоллекции.Представление = СтрокаСтрокиДанных.Значение;
		Иначе
			НоваяСтрокаКоллекции.Представление = СтрокаСтрокиДанных.ФизическоеЛицо;
		КонецЕсли;
		
		ЗаполнитьЗадублированныеФизическиеЛица(НоваяСтрокаКоллекции.ПолучитьЭлементы(), СтрокаСтрокиДанных)
		
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура РазвернутьДерево()
	
	Для каждого СтрокаДерева Из ЗадублированныеФизическиеЛица.ПолучитьЭлементы() Цикл
		Элементы.ЗадублированныеФизическиеЛица.Развернуть(СтрокаДерева.ПолучитьИдентификатор(), Истина);
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ВыполнитьВыбор()
	
	ТекущиеДанные = Элементы.ЗадублированныеФизическиеЛица.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено
		ИЛИ ТекущиеДанные.ПолучитьРодителя() = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если ТекущиеДанные.ПолучитьРодителя().ПолучитьРодителя() <> Неопределено Тогда
		ТекущиеДанные = ТекущиеДанные.ПолучитьРодителя();
	КонецЕсли;
	
	ВыбранныеДанные = Новый Массив;
	Для каждого ДанныеВыбора Из ТекущиеДанные.ПолучитьЭлементы() Цикл
		ВыбранныеДанные.Добавить(ДанныеВыбора.ФизическоеЛицо);
	КонецЦикла;
	
	ОповеститьОВыборе(ВыбранныеДанные);
	
КонецПроцедуры

#КонецОбласти
