#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ТаблицаОтправки = Список.Выгрузить();
	
	// Добавление строк в таблицу отправки.
	Сообщения = ПолучитьСообщенияПользователю(Истина);
	Соответствие = РазобратьМассивПоТипам(Параметры.МассивСсылок);
	КоличествоВидов = 0;
	Для Каждого КлючИЗначение Из Соответствие Цикл
		Тип              = КлючИЗначение.Ключ;
		МассивСсылок     = КлючИЗначение.Значение;
		ОбъектМетаданных = Метаданные.НайтиПоТипу(Тип);
		ПолноеИмя = ОбъектМетаданных.ПолноеИмя();
		Менеджер  = ОбщегоНазначения.МенеджерОбъектаПоПолномуИмени(ПолноеИмя);
		Менеджер.ПриЗаполненииПараметровОтправки(МассивСсылок, ТаблицаОтправки);
		Найденные = ТаблицаОтправки.НайтиСтроки(Новый Структура("ПолноеИмяДокумента", ""));
		Если Найденные.Количество() = 0 Тогда
			Продолжить;
		КонецЕсли;
		Для Каждого СтрокаТаблицы Из Найденные Цикл
			СтрокаТаблицы.ПолноеИмяДокумента = ПолноеИмя;
		КонецЦикла;
		ПредставлениеТипа = Строка(Тип);
		Представление = СтрШаблон("%1 (%2)", ПредставлениеТипа, Формат(Найденные.Количество(), "ЧГ="));
		Элементы.ПолноеИмяДокумента.СписокВыбора.Добавить(ПолноеИмя, Представление);
		Элементы.СписокПолноеИмяДокумента.СписокВыбора.Добавить(ПолноеИмя, ПредставлениеТипа);
	КонецЦикла;
	Найденные = ТаблицаОтправки.НайтиСтроки(Новый Структура("ДополнительныеПараметры", Неопределено));
	Для Каждого СтрокаТаблицы Из Найденные Цикл
		СтрокаТаблицы.ДополнительныеПараметры = Новый Структура;
	КонецЦикла;
	КоличествоВидов = Элементы.ПолноеИмяДокумента.СписокВыбора.Количество();
	Элементы.ПолноеИмяДокумента.Видимость = КоличествоВидов > 1;
	Если КоличествоВидов = 1 Тогда
		Заголовок = Менеджер.ЗаголовокФормыОтправкиСведенийВФСС();
	КонецЕсли;
	Для Каждого Сообщение Из Сообщения Цикл
		Сообщение.Сообщить();
	КонецЦикла;
	Если ТаблицаОтправки.Количество() = 0 Тогда
		ТекстОшибкиПриОткрытииФормы = НСтр("ru = 'Выбранные документы не подготовлены к отправке (вероятно, не проведены)'");
		Возврат;
	КонецЕсли;
	
	ОформлениеКД = ОбщегоНазначенияБЗК.ДобавитьУсловноеОформление(ЭтотОбъект, "СписокИндексКартинки, СписокРезультат");
	ОбщегоНазначенияБЗК.УстановитьПараметрУсловногоОформления(ОформлениеКД, "Видимость", Ложь);
	ОбщегоНазначенияБЗК.УстановитьПараметрУсловногоОформления(ОформлениеКД, "Отображать", Ложь);
	ОбщегоНазначенияБЗК.ДобавитьОтборУсловногоОформления(
		ОформлениеКД,
		"Список.Результат",
		ВидСравненияКомпоновкиДанных.НеЗаполнено);
	
	ОформлениеКД = ОбщегоНазначенияБЗК.ДобавитьУсловноеОформление(ЭтотОбъект, "СписокОтправить");
	ОбщегоНазначенияБЗК.УстановитьПараметрУсловногоОформления(ОформлениеКД, "Видимость", Ложь);
	ОбщегоНазначенияБЗК.УстановитьПараметрУсловногоОформления(ОформлениеКД, "Отображать", Ложь);
	ОбщегоНазначенияБЗК.УстановитьПараметрУсловногоОформления(ОформлениеКД, "Доступность", Ложь);
	ОбщегоНазначенияБЗК.ДобавитьОтборУсловногоОформления(ОформлениеКД, "Список.Отправить", "=", Ложь);
	ОбщегоНазначенияБЗК.ДобавитьОтборУсловногоОформления(
		ОформлениеКД,
		"Список.Результат",
		ВидСравненияКомпоновкиДанных.Заполнено);
	
	// Получение страхователей.
	Организации = КоллекцииБЗК.УникальныеЗначенияКолонки(ТаблицаОтправки, "Организация");
	КоллекцииБЗК.УдалитьПустыеЗначенияМассива(Организации);
	Если Организации.Количество() = 0 Тогда
		ТекстОшибкиПриОткрытииФормы = НСтр("ru = 'В выбранных документах не заполнена организация'");
		Возврат;
	ИначеЕсли Организации.Количество() = 1 Тогда
		Элементы.Организация.Видимость = Ложь;
		Страхователь = СЭДОФСС.СтраховательОрганизации(Организации[0]);
		ТаблицаОтправки.ЗаполнитьЗначения(Страхователь, "Страхователь");
	Иначе
		Элементы.Организация.СписокВыбора.ЗагрузитьЗначения(Организации);
		Для Каждого Организация Из Организации Цикл
			Страхователь = СЭДОФСС.СтраховательОрганизации(Организации[0]);
			Найденные = ТаблицаОтправки.НайтиСтроки(Новый Структура("Организация", Организация));
			Для Каждого СтрокаТаблицы Из Найденные Цикл
				СтрокаТаблицы.Страхователь = Страхователь;
			КонецЦикла;
		КонецЦикла;
	КонецЕсли;
	
	ОбновитьЭлементыФормы();
	
	Список.Загрузить(ТаблицаОтправки);
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	Если ЗначениеЗаполнено(ТекстОшибкиПриОткрытииФормы) Тогда
		Отказ = Истина;
		ИнформированиеПользователяКлиент.Предупредить(ТекстОшибкиПриОткрытииФормы);
		Возврат;
	КонецЕсли;
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ОрганизацияПриИзменении(Элемент)
	ОтборСтрок = Новый Структура;
	Если ЗначениеЗаполнено(ОрганизацияФильтр) Тогда
		ОтборСтрок.Вставить("Организация", ОрганизацияФильтр);
	КонецЕсли;
	Элементы.Список.ОтборСтрок = Новый ФиксированнаяСтруктура(ОтборСтрок);
	ОбновитьЭлементыФормы();
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыСписок

&НаКлиенте
Процедура СписокВыбор(ТаблицаФормы, ИдентификаторСтроки, ПолеФормы, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	СтрокаТаблицы = ТаблицаФормы.ДанныеСтроки(ИдентификаторСтроки);
	Если СтрокаТаблицы = Неопределено Тогда
		Возврат;
	КонецЕсли;
	Если ПолеФормы = Элементы.СписокРезультат
		Или ПолеФормы = Элементы.СписокИндексКартинки Тогда
		Значение = СтрокаТаблицы.ЗначениеРасшифровки;
	Иначе
		Значение = Неопределено;
	КонецЕсли;
	Если Не ЗначениеЗаполнено(Значение) Тогда
		Значение = СтрокаТаблицы.Ссылка;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Значение) Тогда
		Если ТипЗнч(Значение) = Тип("Строка") Тогда
			Если СтрокаТаблицы.ИндексКартинки = СЭДОФССКлиентСервер.ИндексКартинкиПредупреждение() Тогда
				ЗаголовокТекста = НСтр("ru = 'Подробная информация об ошибке'");
				Картинка = БиблиотекаКартинок.Предупреждение32;
			Иначе
				ЗаголовокТекста = НСтр("ru = 'Подробная информация'");
				Картинка = БиблиотекаКартинок.Информация32;
			КонецЕсли;
			ИнформированиеПользователяКлиент.ПоказатьПодробности(Значение, ЗаголовокТекста, Картинка);
		Иначе
			ПоказатьЗначение(, Значение);
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ВключитьФлажки(Команда)
	Для Каждого СтрокаСписка Из Список Цикл
		Если Не ЗначениеЗаполнено(СтрокаСписка.Результат) Тогда
			СтрокаСписка.Отправить = Истина;
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура ОтключитьФлажки(Команда)
	Для Каждого СтрокаСписка Из Список Цикл
		СтрокаСписка.Отправить = Ложь;
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура ОтправитьВФонд(Команда)
	Контекст = КонтекстОтправки();
	ПродолжитьОтправку(Контекст);
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ОбновитьЭлементыФормы()
	Элементы.СписокОрганизация.Видимость = Элементы.Организация.Видимость
		И Не ЗначениеЗаполнено(ОрганизацияФильтр);
	Элементы.СписокПолноеИмяДокумента.Видимость = Элементы.ПолноеИмяДокумента.Видимость
		И Не ЗначениеЗаполнено(ПолноеИмяДокумента);
КонецПроцедуры

&НаСервере
Функция КонтекстОтправки()
	ТаблицаОтправки = Список.Выгрузить(Новый Структура("Отправить", Истина));
	// Подготовка прикладных параметров отправки.
	Соответствие = РазобратьМассивПоТипам(ТаблицаОтправки.ВыгрузитьКолонку("Ссылка"));
	Для Каждого КлючИЗначение Из Соответствие Цикл
		Тип              = КлючИЗначение.Ключ;
		МассивСсылок     = КлючИЗначение.Значение;
		ОбъектМетаданных = Метаданные.НайтиПоТипу(Тип);
		ПолноеИмя = ОбъектМетаданных.ПолноеИмя();
		Менеджер  = ОбщегоНазначения.МенеджерОбъектаПоПолномуИмени(ПолноеИмя);
		Менеджер.ПриПодготовкеВыбранныхДокументовКОтправке(МассивСсылок, ТаблицаОтправки);
	КонецЦикла;
	// Подготовка БРОшных параметров отправки.
	Для Каждого СтрокаСписка Из ТаблицаОтправки Цикл
		Шаблон = СтрШаблон(
			НСтр("ru = 'Не удалось отправить сведения о застрахованном лице по сотруднику %1:%2'"),
			СтрокаСписка.ФизическоеЛицо,
			"%1");
		СтрокаСписка.ПараметрыБРО = ЭлектронныйДокументооборотСФСС.ПараметрыОтправитьСообщениеСЭДО(
			СтрокаСписка.ТипСообщения,
			СтрокаСписка.ТекстXML,
			СтрокаСписка.Страхователь,
			Шаблон);
	КонецЦикла;
	Список.Загрузить(ТаблицаОтправки);
	
	// Подготовка итератора.
	Контекст = Новый Структура("Индекс, ВГраница");
	Контекст.Индекс   = -1;
	Контекст.ВГраница = Список.Количество() - 1;
	
	// Подготовка элементов формы.
	Элементы.Список.ОтборСтрок = Новый ФиксированнаяСтруктура("Отправить", Истина);
	Элементы.Список.ИзменятьПорядокСтрок = Ложь;
	Элементы.Список.ИзменятьСоставСтрок = Ложь;
	Элементы.ОтправитьВФонд.Видимость = Ложь;
	Элементы.ОтправляемыеДокументыВключитьФлажки.Видимость = Ложь;
	Элементы.ОтправляемыеДокументыОтключитьФлажки.Видимость = Ложь;
	
	Возврат Контекст;
КонецФункции

&НаКлиенте
Процедура ПродолжитьОтправку(Контекст)
	Контекст.Индекс = Контекст.Индекс + 1;
	Если Контекст.Индекс > Контекст.ВГраница Тогда
		Закрыть();
		Возврат;
	КонецЕсли;
	СтрокаСписка = Список[Контекст.Индекс];
	СтрокаСписка.ДатаОтправки = ОбщегоНазначенияКлиент.ДатаСеанса();
	Обработчик = Новый ОписаниеОповещения("ПослеОтправкиВФонд", ЭтотОбъект, Контекст);
	ЭлектронныйДокументооборотСФССКлиент.ОтправитьСообщениеСЭДО(Обработчик, СтрокаСписка.ПараметрыБРО, Ложь);
КонецПроцедуры

&НаКлиенте
Процедура ПослеОтправкиВФонд(Результат, Контекст) Экспорт
	СтрокаСписка = Список[Контекст.Индекс];
	СтрокаСписка.Доставлен             = Результат.Выполнено;
	СтрокаСписка.ДоставкаИдентификатор = Результат.ИдентификаторЗапроса;
	СтрокаСписка.Результат             = Результат.ОписаниеОшибки;
	Если СтрокаСписка.Доставлен Или ЗначениеЗаполнено(СтрокаСписка.ДоставкаИдентификатор) Тогда
		СтрокаСписка.ИндексКартинки = СЭДОФССКлиентСервер.ИндексКартинкиОтправлен();
	Иначе
		ЕстьОшибкиПриОтправке = Истина;
		СтрокаСписка.ИндексКартинки = СЭДОФССКлиентСервер.ИндексКартинкиПредупреждение();
	КонецЕсли;
	Если Контекст.Индекс = Контекст.ВГраница Тогда
		Изменения = ЗаписатьРезультатыОтправки();
		СтандартныеПодсистемыКлиент.ОповеститьФормыОбИзменении(Изменения);
		Если ЕстьОшибкиПриОтправке Тогда
			Элементы.СписокЗакрыть.ПоложениеВКоманднойПанели = ПоложениеКнопкиВКоманднойПанели.ВКоманднойПанелиИВДополнительномПодменю;
			Элементы.СписокЗакрыть.КнопкаПоУмолчанию = Истина;
		Иначе
			Закрыть();
		КонецЕсли;
	Иначе
		ПродолжитьОтправку(Контекст);
	КонецЕсли;
КонецПроцедуры

&НаСервере
Функция ЗаписатьРезультатыОтправки()
	Измененные = Новый Массив;
	
	Найденные = Список.НайтиСтроки(Новый Структура("Отправить", Истина));
	Для Каждого СтрокаСписка Из Найденные Цикл
		Менеджер = ОбщегоНазначения.МенеджерОбъектаПоПолномуИмени(СтрокаСписка.ПолноеИмяДокумента);
		Менеджер.ЗарегистрироватьРезультатыОтправки(СтрокаСписка, Измененные);
	КонецЦикла;
	
	Возврат СтандартныеПодсистемыСервер.ПодготовитьОповещениеФормОбИзменении(Измененные);
КонецФункции

&НаСервереБезКонтекста
Функция РазобратьМассивПоТипам(Массив)
	Соответствие = Новый Соответствие;
	Для Каждого Элемент Из Массив Цикл
		Тип = ТипЗнч(Элемент);
		МассивТипа = Соответствие[Тип];
		Если МассивТипа = Неопределено Тогда
			МассивТипа = Новый Массив;
			Соответствие.Вставить(Тип, МассивТипа);
		КонецЕсли;
		ОбщегоНазначенияБЗК.ДобавитьЗначениеВМассив(МассивТипа, Элемент);
	КонецЦикла;
	Возврат Соответствие;
КонецФункции

#КонецОбласти
