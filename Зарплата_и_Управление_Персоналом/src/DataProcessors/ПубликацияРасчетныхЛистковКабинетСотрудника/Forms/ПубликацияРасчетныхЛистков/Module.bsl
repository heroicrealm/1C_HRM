
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Параметры.Свойство("ПодготовитьДанныеДляТехПоддержки", ПодготовитьДанныеДляТехПоддержки);
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы,
				"ДекорацияПодготовитьДанныеДляТехПоддержки", "Видимость", ПодготовитьДанныеДляТехПоддержки);
	
	// Организация Месяц МесяцОпубликованных
	ЗначенияДляЗаполнения = Новый Структура("Организация,Месяц", "Объект.Организация", "Объект.Месяц");
	ЗарплатаКадры.ЗаполнитьПервоначальныеЗначенияВФорме(ЭтотОбъект, ЗначенияДляЗаполнения);
	Если Не ЗначениеЗаполнено(Объект.Месяц) Тогда
		Объект.Месяц = ТекущаяДатаСеанса();
	КонецЕсли;
	ЗарплатаКадрыКлиентСервер.ЗаполнитьМесяцПоДате(ЭтотОбъект, "Объект.Месяц", "МесяцСтрокой");
	
	УстановитьПривилегированныйРежим(Истина);
	Настройки = РегистрыСведений.НастройкиСервисаКабинетСотрудника.НастройкиСервиса();
	ИдентификаторПриложения = Настройки.ИдентификаторПриложения;
	Если Не Настройки.АбонентСервисаИнициализирован Тогда
		КабинетСотрудникаМенеджерСервиса.ИнициализироватьАбонентаСервиса();
	КонецЕсли;
	// Проверка доступности приложения по наличию ключей.
	ЕстьКлючиПриложения = КабинетСотрудника.ЕстьКлючиПриложения();
	КлючиПриложенияАктуальные = Ложь;
	Если ЕстьКлючиПриложения Тогда
		КлючиПриложенияАктуальные = КабинетСотрудника.КлючиПриложенияАктуальные();
	КонецЕсли;
	УстановитьПривилегированныйРежим(Ложь);
	
	СервисДоступен = ЕстьКлючиПриложения И КлючиПриложенияАктуальные;
	Элементы.ГруппаПриложениеНедоступно.Видимость = Не СервисДоступен;
	Элементы.ГруппаПубликация.Доступность = СервисДоступен;
	
	Если СервисДоступен Тогда
		НачальноеЗаполнение();
	Иначе
		ОпубликованныеРасчетныеЛистки.Параметры.УстановитьЗначениеПараметра("Месяц", 					Дата(1,1,1));
		ОпубликованныеРасчетныеЛистки.Параметры.УстановитьЗначениеПараметра("Организация", 				Справочники.Организации.ПустаяСсылка());
		ОпубликованныеРасчетныеЛистки.Параметры.УстановитьЗначениеПараметра("СостоянияОпубликованы", 	Новый Массив);
		ОпубликованныеРасчетныеЛистки.Параметры.УстановитьЗначениеПараметра("ВсеФизическиеЛица", 		Ложь);
		ОпубликованныеРасчетныеЛистки.Параметры.УстановитьЗначениеПараметра("ФизическиеЛица", 			Новый Массив);
	КонецЕсли;
	
	Элементы.ОпубликованныеОзнакомился.Видимость = Не КабинетСотрудника.ВерсияПриложенияМеньшеВерсии("3.0.3.1");
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура МесяцПриИзменении(Элемент)
	ЗарплатаКадрыКлиент.ВводМесяцаПриИзменении(ЭтаФорма, "Объект.Месяц", "МесяцСтрокой");
	ОбновитьСписокКПубликации();
КонецПроцедуры

&НаКлиенте
Процедура МесяцНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	Оповещение = Новый ОписаниеОповещения("МесяцНачалоВыбораЗавершение", ЭтотОбъект);
	ЗарплатаКадрыКлиент.ВводМесяцаНачалоВыбора(ЭтаФорма, ЭтаФорма, "Объект.Месяц", "МесяцСтрокой", Ложь, Оповещение);
КонецПроцедуры

&НаКлиенте
Процедура МесяцНачалоВыбораЗавершение(ЗначениеВыбрано, ДополнительныеПараметры) Экспорт
	ОбновитьСписокКПубликации();
КонецПроцедуры

&НаКлиенте
Процедура МесяцРегулирование(Элемент, Направление, СтандартнаяОбработка)
	ЗарплатаКадрыКлиент.ВводМесяцаРегулирование(ЭтаФорма, "Объект.Месяц", "МесяцСтрокой", Направление);
	ПодключитьОбработчикОжидания("ОбработчикОжиданияМесяцПриРегулировании", 0.3, Истина);
КонецПроцедуры

&НаКлиенте
Процедура ОбработчикОжиданияМесяцПриРегулировании()
	ОбновитьСписокКПубликации();
КонецПроцедуры

&НаКлиенте
Процедура МесяцАвтоПодбор(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, Ожидание, СтандартнаяОбработка)
	ЗарплатаКадрыКлиент.ВводМесяцаАвтоПодборТекста(Текст, ДанныеВыбора, СтандартнаяОбработка);
КонецПроцедуры

&НаКлиенте
Процедура МесяцОкончаниеВводаТекста(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, СтандартнаяОбработка)
	ЗарплатаКадрыКлиент.ВводМесяцаОкончаниеВводаТекста(Текст, ДанныеВыбора, СтандартнаяОбработка);
КонецПроцедуры

&НаКлиенте
Процедура МесяцОпубликованногоПриИзменении(Элемент)
	ЗарплатаКадрыКлиент.ВводМесяцаПриИзменении(ЭтаФорма, "Объект.МесяцОпубликованных", "МесяцОпубликованногоСтрокой");
	ОбновитьСписокОпубликованных();
КонецПроцедуры

&НаКлиенте
Процедура МесяцОпубликованногоНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	Оповещение = Новый ОписаниеОповещения("МесяцОпубликованногоНачалоВыбораЗавершение", ЭтотОбъект);
	ЗарплатаКадрыКлиент.ВводМесяцаНачалоВыбора(ЭтаФорма, ЭтаФорма, "Объект.МесяцОпубликованных", "МесяцОпубликованногоСтрокой", Ложь, Оповещение);
КонецПроцедуры

&НаКлиенте
Процедура МесяцОпубликованногоНачалоВыбораЗавершение(ЗначениеВыбрано, ДополнительныеПараметры) Экспорт
	ОбновитьСписокОпубликованных();
КонецПроцедуры

&НаКлиенте
Процедура МесяцОпубликованногоРегулирование(Элемент, Направление, СтандартнаяОбработка)
	ЗарплатаКадрыКлиент.ВводМесяцаРегулирование(ЭтаФорма, "Объект.МесяцОпубликованных", "МесяцОпубликованногоСтрокой", Направление);
	ПодключитьОбработчикОжидания("ОбработчикОжиданияМесяцОпубликованногоПриРегулировании", 0.3, Истина);
КонецПроцедуры

&НаКлиенте
Процедура ОбработчикОжиданияМесяцОпубликованногоПриРегулировании()
	ОбновитьСписокОпубликованных();
КонецПроцедуры

&НаКлиенте
Процедура МесяцОпубликованногоАвтоПодбор(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, Ожидание, СтандартнаяОбработка)
	ЗарплатаКадрыКлиент.ВводМесяцаАвтоПодборТекста(Текст, ДанныеВыбора, СтандартнаяОбработка);
КонецПроцедуры

&НаКлиенте
Процедура МесяцОпубликованногоОкончаниеВводаТекста(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, СтандартнаяОбработка)
	ЗарплатаКадрыКлиент.ВводМесяцаОкончаниеВводаТекста(Текст, ДанныеВыбора, СтандартнаяОбработка);
КонецПроцедуры

&НаКлиенте
Процедура ОрганизацияПриИзменении(Элемент)
	ОбновитьСписокКПубликации();
	ОбновитьСписокОпубликованных();
КонецПроцедуры

&НаКлиенте
Процедура ПодразделениеПриИзменении(Элемент)
	ОбновитьСписокКПубликации();
КонецПроцедуры

&НаКлиенте
Процедура ПодразделениеОпубликованногоПриИзменении(Элемент)
	ОбновитьСписокОпубликованных();
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыФизическиеЛицаКПубликации

&НаКлиенте
Процедура ФизическиеЛицаКПубликацииПубликуетсяПриИзменении(Элемент)
	
	ПубликуемыеСтроки = Объект.ФизическиеЛицаКПубликации.НайтиСтроки(Новый Структура("Публиковать", Истина));
	ЗаголовокНадписьКПубликации(Элементы, ПубликуемыеСтроки.Количество());
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Опубликовать(Команда)
	
	Если ПубликацияНедоступна() Тогда
		Возврат;
	КонецЕсли;
	
	Если ПодготовитьДанныеДляТехПоддержки Тогда
		ПоказатьВопросПередПубликацией(Ложь, Ложь)
	Иначе
		ОпубликоватьРасчетныеЛистки(Ложь, Ложь);
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ОпубликоватьПовторно(Команда)
	
	Если ПубликацияНедоступна() Тогда
		Возврат;
	КонецЕсли;
	
	Если ПодготовитьДанныеДляТехПоддержки Тогда
		ПоказатьВопросПередПубликацией(Истина, Ложь)
	Иначе
		ОпубликоватьРасчетныеЛистки(Истина, Ложь);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОпубликоватьПовторноВсе(Команда)
	
	Если ПубликацияНедоступна() Тогда
		Возврат;
	КонецЕсли;
	
	Если ПодготовитьДанныеДляТехПоддержки Тогда
		ПоказатьВопросПередПубликацией(Истина, Истина)
	Иначе
		ОпубликоватьРасчетныеЛистки(Истина, Истина);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОтметитьВсе(Команда)
	
	Для каждого СтрокаТЧ Из Объект.ФизическиеЛицаКПубликации Цикл
		СтрокаТЧ.Публиковать = Истина;
	КонецЦикла;
	
	ЗаголовокНадписьКПубликации(Элементы, Объект.ФизическиеЛицаКПубликации.Количество());
	
КонецПроцедуры

&НаКлиенте
Процедура СнятьВсе(Команда)
	
	Для каждого СтрокаТЧ Из Объект.ФизическиеЛицаКПубликации Цикл
		СтрокаТЧ.Публиковать = Ложь;
	КонецЦикла;
	
	ЗаголовокНадписьКПубликации(Элементы, 0);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ОбновитьСписокКПубликации(ОбновитьСписокПубликации = Ложь);
	
	НеПубликуемые = Новый Соответствие;
	Если ОбновитьСписокПубликации Тогда
		Для каждого СтрокаТЧ Из Объект.ФизическиеЛицаКПубликации Цикл
			Если Не СтрокаТЧ.Публиковать Тогда
				НеПубликуемые.Вставить(СтрокаТЧ.ФизическоеЛицо, Истина);
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
	Объект.ФизическиеЛицаКПубликации.Очистить();
	Если ЗначениеЗаполнено(Объект.Организация) Тогда
		
		Запрос = Новый Запрос;
		Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
		
		ПараметрыПолученияСотрудников = КадровыйУчет.ПараметрыПолученияСотрудниковОрганизацийПоСпискуФизическихЛиц();
		ПараметрыПолученияСотрудников.Организация = Объект.Организация;
		ПараметрыПолученияСотрудников.Подразделение = Объект.Подразделение;
		ПараметрыПолученияСотрудников.НачалоПериода = Объект.Месяц;
		ПараметрыПолученияСотрудников.ОкончаниеПериода = КонецМесяца(Объект.Месяц);
		ПараметрыПолученияСотрудников.КадровыеДанные = "Организация";
		КадровыйУчет.СоздатьВТСотрудникиОрганизации(Запрос.МенеджерВременныхТаблиц, Истина, ПараметрыПолученияСотрудников);
		
		СостоянияПубликации = Новый Массив;
		СостоянияПубликации.Добавить(Перечисления.СостоянияРасчетныхЛистковКабинетСотрудника.Опубликован);
		СостоянияПубликации.Добавить(Перечисления.СостоянияРасчетныхЛистковКабинетСотрудника.СотрудникОзнакомился);
		Запрос.УстановитьПараметр("СостоянияПубликации", СостоянияПубликации);
		Запрос.УстановитьПараметр("МесяцПубликации", Объект.Месяц);
		Запрос.УстановитьПараметр("Организация", Объект.Организация);
		Запрос.УстановитьПараметр("ПерваяПоловинаМесяца", Ложь);
		
		Если КабинетСотрудника.ВерсияПриложенияМеньшеВерсии("3.0.3.96") Тогда
			Запрос.Текст = 
			"ВЫБРАТЬ РАЗЛИЧНЫЕ
			|	ВТСотрудникиОрганизации.ФизическоеЛицо КАК ФизическоеЛицо
			|ПОМЕСТИТЬ ВТФизическиеЛица
			|ИЗ
			|	ВТСотрудникиОрганизации КАК ВТСотрудникиОрганизации
			|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ПубликуемыеОбъектыКабинетСотрудника КАК ПубликуемыеОбъектыКабинетСотрудника
			|		ПО ВТСотрудникиОрганизации.Сотрудник = ПубликуемыеОбъектыКабинетСотрудника.ОбъектПубликации
			|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ОшибкиЗаполненияПубликуемыхОбъектовКабинетСотрудника КАК ОшибкиЗаполнения
			|		ПО ВТСотрудникиОрганизации.ФизическоеЛицо = ОшибкиЗаполнения.ОбъектПубликации
			|ГДЕ
			|	НЕ ЕСТЬNULL(ОшибкиЗаполнения.ЕстьОшибки, ЛОЖЬ)
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	ТаблицаФизическиеЛица.ФизическоеЛицо КАК ФизическоеЛицо,
			|	ИСТИНА КАК Публиковать
			|ИЗ
			|	ВТФизическиеЛица КАК ТаблицаФизическиеЛица
			|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ФизическиеЛица КАК ФизическиеЛица
			|		ПО ТаблицаФизическиеЛица.ФизическоеЛицо = ФизическиеЛица.Ссылка
			|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РасчетныеЛисткиКабинетСотрудника КАК РасчетныеЛисткиКабинетСотрудника
			|		ПО ТаблицаФизическиеЛица.ФизическоеЛицо = РасчетныеЛисткиКабинетСотрудника.ФизическоеЛицо
			|			И (РасчетныеЛисткиКабинетСотрудника.Организация = &Организация)
			|			И (РасчетныеЛисткиКабинетСотрудника.Месяц = &МесяцПубликации)
			|			И (РасчетныеЛисткиКабинетСотрудника.ПерваяПоловинаМесяца = &ПерваяПоловинаМесяца)
			|			И (РасчетныеЛисткиКабинетСотрудника.СостояниеПубликации В (&СостоянияПубликации))
			|ГДЕ
			|	РасчетныеЛисткиКабинетСотрудника.ФизическоеЛицо ЕСТЬ NULL
			|
			|УПОРЯДОЧИТЬ ПО
			|	ФизическиеЛица.Наименование";
		Иначе
			Запрос.Текст = 
			"ВЫБРАТЬ РАЗЛИЧНЫЕ
			|	ВТСотрудникиОрганизации.ФизическоеЛицо КАК ФизическоеЛицо
			|ПОМЕСТИТЬ ВТФизическиеЛица
			|ИЗ
			|	ВТСотрудникиОрганизации КАК ВТСотрудникиОрганизации
			|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ФизическиеЛицаКабинетСотрудника КАК ФизическиеЛица
			|		ПО ВТСотрудникиОрганизации.ФизическоеЛицо = ФизическиеЛица.ФизическоеЛицо
			|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ОшибкиЗаполненияПубликуемыхОбъектовКабинетСотрудника КАК ОшибкиЗаполнения
			|		ПО ВТСотрудникиОрганизации.ФизическоеЛицо = ОшибкиЗаполнения.ОбъектПубликации
			|ГДЕ
			|	НЕ ЕСТЬNULL(ОшибкиЗаполнения.ЕстьОшибки, ЛОЖЬ)
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	ТаблицаФизическиеЛица.ФизическоеЛицо КАК ФизическоеЛицо,
			|	ИСТИНА КАК Публиковать
			|ИЗ
			|	ВТФизическиеЛица КАК ТаблицаФизическиеЛица
			|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ФизическиеЛица КАК ФизическиеЛица
			|		ПО ТаблицаФизическиеЛица.ФизическоеЛицо = ФизическиеЛица.Ссылка
			|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РасчетныеЛисткиКабинетСотрудника КАК РасчетныеЛисткиКабинетСотрудника
			|		ПО ТаблицаФизическиеЛица.ФизическоеЛицо = РасчетныеЛисткиКабинетСотрудника.ФизическоеЛицо
			|			И (РасчетныеЛисткиКабинетСотрудника.Организация = &Организация)
			|			И (РасчетныеЛисткиКабинетСотрудника.Месяц = &МесяцПубликации)
			|			И (РасчетныеЛисткиКабинетСотрудника.ПерваяПоловинаМесяца = &ПерваяПоловинаМесяца)
			|			И (РасчетныеЛисткиКабинетСотрудника.СостояниеПубликации В (&СостоянияПубликации))
			|ГДЕ
			|	РасчетныеЛисткиКабинетСотрудника.ФизическоеЛицо ЕСТЬ NULL
			|
			|УПОРЯДОЧИТЬ ПО
			|	ФизическиеЛица.Наименование";
		КонецЕсли;
		
		УстановитьПривилегированныйРежим(Истина);
		// Привилегированный режим допустим, т.к. ВТСотрудникиОрганизации содержит только разрешенные данные.
		Выборка = Запрос.Выполнить().Выбрать();
		УстановитьПривилегированныйРежим(Ложь);
		Пока Выборка.Следующий() Цикл
			НоваяСтрока = Объект.ФизическиеЛицаКПубликации.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, Выборка);
			Если ОбновитьСписокПубликации Тогда
				Если НеПубликуемые[НоваяСтрока.ФизическоеЛицо] <> Неопределено Тогда
					НоваяСтрока.Публиковать = Ложь;
				КонецЕсли;
			КонецЕсли;
		КонецЦикла;
		
	КонецЕсли;
	
	ПубликуемыеСтроки = Объект.ФизическиеЛицаКПубликации.НайтиСтроки(Новый Структура("Публиковать", Истина));
	ЗаголовокНадписьКПубликации(Элементы, ПубликуемыеСтроки.Количество());
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьСписокОпубликованных();
	ОбновитьСписокОпубликованныхНаСервере();
КонецПроцедуры

&НаСервере
Процедура ОбновитьСписокОпубликованныхНаСервере()
	
	СостоянияПубликации = Новый Массив;
	СостоянияПубликации.Добавить(Перечисления.СостоянияРасчетныхЛистковКабинетСотрудника.Опубликован);
	СостоянияПубликации.Добавить(Перечисления.СостоянияРасчетныхЛистковКабинетСотрудника.СотрудникОзнакомился);
	
	ПараметрыЗапроса = Новый Структура("Организация,Месяц,СостоянияОпубликованы,ФизическиеЛица,ВсеФизическиеЛица");
	ПараметрыЗапроса.Организация 			= Объект.Организация;
	ПараметрыЗапроса.Месяц 					= Объект.МесяцОпубликованных;
	ПараметрыЗапроса.СостоянияОпубликованы 	= СостоянияПубликации;
	ПараметрыЗапроса.ФизическиеЛица 		= Новый Массив;
	ПараметрыЗапроса.ВсеФизическиеЛица 		= Ложь;
	
	Если ЗначениеЗаполнено(Объект.Организация) И ЗначениеЗаполнено(Объект.ПодразделениеОпубликованных) Тогда
		
		ПараметрыПолученияСотрудников = КадровыйУчет.ПараметрыПолученияСотрудниковОрганизацийПоСпискуФизическихЛиц();
		ПараметрыПолученияСотрудников.Организация = Объект.Организация;
		ПараметрыПолученияСотрудников.Подразделение = Объект.ПодразделениеОпубликованных;
		ПараметрыПолученияСотрудников.НачалоПериода = Объект.МесяцОпубликованных;
		ПараметрыПолученияСотрудников.ОкончаниеПериода = КонецМесяца(Объект.МесяцОпубликованных);
		
		СотрудникиОрганизации = КадровыйУчет.СотрудникиОрганизации(Истина, ПараметрыПолученияСотрудников);
		ПараметрыЗапроса.ФизическиеЛица = ОбщегоНазначения.ВыгрузитьКолонку(СотрудникиОрганизации, "ФизическоеЛицо", Истина);
		
	Иначе
		ПараметрыЗапроса.ВсеФизическиеЛица = Истина;
	КонецЕсли;
	
	ОпубликованныеРасчетныеЛистки.Параметры.УстановитьЗначениеПараметра("Месяц", 					ПараметрыЗапроса.Месяц);
	ОпубликованныеРасчетныеЛистки.Параметры.УстановитьЗначениеПараметра("Организация", 				ПараметрыЗапроса.Организация);
	ОпубликованныеРасчетныеЛистки.Параметры.УстановитьЗначениеПараметра("СостоянияОпубликованы", 	ПараметрыЗапроса.СостоянияОпубликованы);
	ОпубликованныеРасчетныеЛистки.Параметры.УстановитьЗначениеПараметра("ВсеФизическиеЛица", 		ПараметрыЗапроса.ВсеФизическиеЛица);
	ОпубликованныеРасчетныеЛистки.Параметры.УстановитьЗначениеПараметра("ФизическиеЛица", 			ПараметрыЗапроса.ФизическиеЛица);
	
	Запрос = Новый Запрос();
	Для каждого ЭлементКоллекции Из ПараметрыЗапроса Цикл
		Запрос.УстановитьПараметр(ЭлементКоллекции.Ключ, ЭлементКоллекции.Значение);
	КонецЦикла;
	Запрос.Текст =
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	КОЛИЧЕСТВО(РасчетныеЛисткиКабинетСотрудника.ДатаПубликации) КАК Количество
	|ИЗ
	|	РегистрСведений.РасчетныеЛисткиКабинетСотрудника КАК РасчетныеЛисткиКабинетСотрудника
	|ГДЕ
	|	РасчетныеЛисткиКабинетСотрудника.Организация = &Организация
	|	И РасчетныеЛисткиКабинетСотрудника.Месяц = &Месяц
	|	И РасчетныеЛисткиКабинетСотрудника.СостояниеПубликации В(&СостоянияОпубликованы)
	|	И (&ВсеФизическиеЛица
	|			ИЛИ РасчетныеЛисткиКабинетСотрудника.ФизическоеЛицо В (&ФизическиеЛица))";
	РезультатЗапроса = Запрос.Выполнить();
	КоличествоОпубликованных = 0;
	Если Не РезультатЗапроса.Пустой() Тогда
		Выборка = РезультатЗапроса.Выбрать();
		Выборка.Следующий();
		КоличествоОпубликованных = Выборка.Количество;
	КонецЕсли;
	
	Элементы.НадписьОпубликованныеКПубликации.Заголовок = СтрШаблон(НСтр("ru = 'Опубликовано расчетных листков: %1'"), КоличествоОпубликованных);
	
КонецПроцедуры

&НаСервере
Функция ДлительнаяОперацияОпубликоватьНаСервере(ПараметрыПубликации)
	
	ПараметрыВыполненияВФоне = ДлительныеОперации.ПараметрыВыполненияВФоне(УникальныйИдентификатор);
	ПараметрыВыполненияВФоне.Вставить("НаименованиеФоновогоЗадания",
		СтрШаблон(НСтр("ru = 'Выгрузка расчетных листов в 1С:Кабинет сотрудника'")));
	ПараметрыВыполненияВФоне.ОжидатьЗавершение = 0;
	
	ДлительнаяОперация = ДлительныеОперации.ВыполнитьВФоне(
		"КабинетСотрудника.ОпубликоватьРасчетныеЛистыВФоне",
		ПараметрыПубликации,
		ПараметрыВыполненияВФоне);
		
	Возврат ДлительнаяОперация;
	
КонецФункции

&НаСервере
Процедура НачальноеЗаполнение()

	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ ПЕРВЫЕ 1
	|	РасчетныеЛисткиКабинетСотрудника.Месяц КАК Месяц
	|ИЗ
	|	РегистрСведений.РасчетныеЛисткиКабинетСотрудника КАК РасчетныеЛисткиКабинетСотрудника
	|
	|УПОРЯДОЧИТЬ ПО
	|	Месяц УБЫВ";
	РезультатЗапроса = Запрос.Выполнить();
	Если РезультатЗапроса.Пустой() Тогда
		Объект.МесяцОпубликованных = Объект.Месяц;
	Иначе
		Выборка = РезультатЗапроса.Выбрать();
		Выборка.Следующий();
		Объект.МесяцОпубликованных = Выборка.Месяц;
	КонецЕсли;
	ЗарплатаКадрыКлиентСервер.ЗаполнитьМесяцПоДате(ЭтотОбъект, "Объект.МесяцОпубликованных", "МесяцОпубликованногоСтрокой");
	
	ОбновитьСписокКПубликации();
	ОбновитьСписокОпубликованныхНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура ОпубликованныеПередНачаломИзменения(Элемент, Отказ)
	Отказ = Истина;
КонецПроцедуры

&НаСервере
Функция ФизическиеЛицаСОпубликованнымиЛистками()
	
	ФизическиеЛица = Новый Массив;
	Если ЗначениеЗаполнено(Объект.ПодразделениеОпубликованных) Тогда
		
		Запрос = Новый Запрос;
		Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
		
		ПараметрыПолученияСотрудников = КадровыйУчет.ПараметрыПолученияСотрудниковОрганизацийПоСпискуФизическихЛиц();
		ПараметрыПолученияСотрудников.Организация = Объект.Организация;
		ПараметрыПолученияСотрудников.Подразделение = Объект.ПодразделениеОпубликованных;
		ПараметрыПолученияСотрудников.НачалоПериода = Объект.МесяцОпубликованных;
		ПараметрыПолученияСотрудников.ОкончаниеПериода = КонецМесяца(Объект.МесяцОпубликованных);
		
		СотрудникиОрганизации = КадровыйУчет.СотрудникиОрганизации(Истина, ПараметрыПолученияСотрудников);
		ФизическиеЛица = ОбщегоНазначения.ВыгрузитьКолонку(СотрудникиОрганизации, "ФизическоеЛицо", Истина);
		
		Если ФизическиеЛица.Количество() = 0 Тогда
			Возврат ФизическиеЛица;
		КонецЕсли;
		
	КонецЕсли;
	
	СостоянияПубликации = Новый Массив;
	СостоянияПубликации.Добавить(Перечисления.СостоянияРасчетныхЛистковКабинетСотрудника.Опубликован);
	СостоянияПубликации.Добавить(Перечисления.СостоянияРасчетныхЛистковКабинетСотрудника.СотрудникОзнакомился);
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Организация", Объект.Организация);
	Запрос.УстановитьПараметр("Месяц", Объект.МесяцОпубликованных);
	Запрос.УстановитьПараметр("СостоянияОпубликованы", СостоянияПубликации);
	Запрос.УстановитьПараметр("ВсеФизическиеЛица", ФизическиеЛица.Количество() = 0);
	Запрос.УстановитьПараметр("ФизическиеЛица", ФизическиеЛица);
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	РасчетныеЛисткиКабинетСотрудника.ФизическоеЛицо КАК ФизическоеЛицо
	|ИЗ
	|	РегистрСведений.РасчетныеЛисткиКабинетСотрудника КАК РасчетныеЛисткиКабинетСотрудника
	|ГДЕ
	|	РасчетныеЛисткиКабинетСотрудника.Организация = &Организация
	|	И РасчетныеЛисткиКабинетСотрудника.Месяц = &Месяц
	|	И РасчетныеЛисткиКабинетСотрудника.СостояниеПубликации В(&СостоянияОпубликованы)
	|	И (&ВсеФизическиеЛица
	|			ИЛИ РасчетныеЛисткиКабинетСотрудника.ФизическоеЛицо В (&ФизическиеЛица))";
	
	Возврат Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("ФизическоеЛицо");
	
КонецФункции

&НаКлиенте
Функция ОрганизацияЗаполнена()

	Если ЗначениеЗаполнено(Объект.Организация) Тогда
		Возврат Истина;
	Иначе	
		ТекстСообщения = НСтр("ru = 'Поле ""Организация"" не заполнено'");
		ОбщегоНазначенияКлиент.СообщитьПользователю(ТекстСообщения, , "Организация");
		Возврат Ложь;
	КонецЕсли;
	
КонецФункции

&НаСервереБезКонтекста
Функция СервисЗаблокирован()

	Возврат КабинетСотрудника.СервисЗаблокирован(); 

КонецФункции	

&НаКлиентеНаСервереБезКонтекста
Процедура ЗаголовокНадписьКПубликации(Элементы, КоличествоКПубликации)
	
	Элементы.НадписьКПубликации.Заголовок  = СтрШаблон(НСтр("ru = 'Количество сотрудников, по которым будут опубликованы расчетные листы: %1'"), КоличествоКПубликации);

КонецПроцедуры

&НаКлиенте
Функция ПубликацияНедоступна()

	Если СервисЗаблокирован() Тогда
		ТекстСообщения = КабинетСотрудникаКлиент.ТекстСообщенияОБлокировкеСервиса();
		ОбщегоНазначенияКлиент.СообщитьПользователю(ТекстСообщения);
		Возврат Истина;
	КонецЕсли;
	
	Если Не ОрганизацияЗаполнена() Тогда
		Возврат Истина;
	КонецЕсли;
	
	Если ПодготовитьДанныеДляТехПоддержки И ЕстьАктивныеФоновыеЗадания() Тогда
		ТекстСообщения = НСтр("ru = 'Публикация уже выполняется, повторите попытку позже.'");
		ОбщегоНазначенияКлиент.СообщитьПользователю(ТекстСообщения);
		Возврат Истина;
	КонецЕсли;
	
	Возврат Ложь;

КонецФункции

&НаКлиенте
Процедура ОпубликоватьЗавершение(ДлительнаяОперация, ДополнительныеПараметры = Неопределено) Экспорт
	
	Если ДлительнаяОперация = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если ДлительнаяОперация.Статус = "Ошибка" Тогда
		ПоказатьПредупреждение(, ДлительнаяОперация.КраткоеПредставлениеОшибки);
	ИначеЕсли ДлительнаяОперация.Статус = "Выполнено" Тогда
		
		ОбновитьСписокКПубликации(Истина);
		ОбновитьСписокОпубликованныхНаСервере();
		
		Результат = ПолучитьИзВременногоХранилища(ДлительнаяОперация.АдресРезультата);
		Если Результат.БылиОшибки Тогда
			СообщениеОбОшибке = НСтр("ru = 'Публикация расчетных листков завершена с ошибками.'");
			ПоказатьПредупреждение(, СообщениеОбОшибке);
		КонецЕсли;
			
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПоказатьВопросПередПубликацией(ПовторнаяПубликация, ОбновитьВсе);

	ДополнительныеПараметры = Новый Структура("ПовторнаяПубликация,ОбновитьВсе", ПовторнаяПубликация, ОбновитьВсе);
	ОповещениеОЗавершении = Новый ОписаниеОповещения("ОпубликоватьПродолжение", ЭтаФорма, ДополнительныеПараметры);
	ПоказатьВопрос(
		ОповещениеОЗавершении,
		НСтр("ru = 'Подготовка данных для отправки в службу технической поддержки сервиса.
		|Публикация расчетных листков будет выполнена с записью событий в журнал регистрации и выгрузкой журнал в файл для отправки в службу технической поддержки.'"),
		КабинетСотрудникаКлиент.ОписаниеКнопокВопроса());

КонецПроцедуры

&НаКлиенте
Процедура ОпубликоватьПродолжение(Результат, ДополнительныеПараметры) Экспорт

	Если Результат = КодВозвратаДиалога.Да Тогда
		ПараметрыПубликации = ПараметрыПубликации(ДополнительныеПараметры.ПовторнаяПубликация, ДополнительныеПараметры.ОбновитьВсе);
		ВыполнитьПубликациюСохранитьЖурнал(ПараметрыПубликации);
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ОпубликоватьРасчетныеЛистки(ПовторнаяПубликация, ОбновитьВсе)
	
	ПараметрыПубликации = ПараметрыПубликации(ПовторнаяПубликация, ОбновитьВсе);
	
	Если ПараметрыПубликации.СписокФизическихЛиц.Количество() = 0 Тогда
		ТекстСообщения = НСтр("ru = 'Список сотрудников для публикации расчетных листков пустой.'");
		ОбщегоНазначенияКлиент.СообщитьПользователю(ТекстСообщения);
		Возврат;
	КонецЕсли;
	
	ДлительнаяОперация = ДлительнаяОперацияОпубликоватьНаСервере(ПараметрыПубликации);
	ПараметрыОжидания = ДлительныеОперацииКлиент.ПараметрыОжидания(ЭтотОбъект);
	ПараметрыОжидания.ВыводитьОкноОжидания = Истина;
	ПараметрыОжидания.ОповещениеПользователя.Показать = Истина;
	ПараметрыОжидания.ОповещениеПользователя.Текст = НСтр("ru = 'Публикация расчетных листков выполнена.'");
	ОповещениеОЗавершении = Новый ОписаниеОповещения("ОпубликоватьЗавершение", ЭтотОбъект);
	ДлительныеОперацииКлиент.ОжидатьЗавершение(ДлительнаяОперация, ОповещениеОЗавершении, ПараметрыОжидания);
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ЕстьАктивныеФоновыеЗадания()

	Возврат КабинетСотрудника.ЕстьАктивныеФоновыеЗаданияОбменПубликация();

КонецФункции

&НаКлиенте
Функция ПараметрыПубликации(ПовторнаяПубликация, ОбновитьВсе)

	ПараметрыПубликации = Новый Структура;
	ПараметрыПубликации.Вставить("ПовторнаяПубликация", ПовторнаяПубликация);
	ПараметрыПубликации.Вставить("Организация", Объект.Организация);
	ПараметрыПубликации.Вставить("ПодготовитьДанныеДляТехПоддержки", Ложь);
	
	Если ПовторнаяПубликация Тогда
		ПараметрыПубликации.Вставить("МесяцРасчетныхЛистов", Объект.МесяцОпубликованных);
		Если ОбновитьВсе Тогда
			СписокФизическихЛиц = ФизическиеЛицаСОпубликованнымиЛистками();
		Иначе
			СписокФизическихЛиц = Новый Массив;
			Для Каждого ВыбраннаяСтрока Из Элементы.Опубликованные.ВыделенныеСтроки Цикл
				СписокФизическихЛиц.Добавить(Элементы.Опубликованные.ДанныеСтроки(ВыбраннаяСтрока).ФизическоеЛицо);
			КонецЦикла;
		КонецЕсли;
	Иначе
		ПараметрыПубликации.Вставить("МесяцРасчетныхЛистов", Объект.Месяц);
		СписокФизическихЛиц = Новый Массив;
		Для каждого СтрокаТЧ Из Объект.ФизическиеЛицаКПубликации Цикл
			Если СтрокаТЧ.Публиковать Тогда
				СписокФизическихЛиц.Добавить(СтрокаТЧ.ФизическоеЛицо);
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	ПараметрыПубликации.Вставить("СписокФизическихЛиц", СписокФизическихЛиц);
	
	Возврат ПараметрыПубликации;

КонецФункции

&НаКлиенте
Процедура ВыполнитьПубликациюСохранитьЖурнал(ПараметрыПубликации)

	ПараметрыПубликации.ПодготовитьДанныеДляТехПоддержки = Истина;
	
	ИмяФайла = СтрШаблон("%1_%2", "EventLogPayslips", ИдентификаторПриложения);
	
	ПараметрыОткрытия = Новый Структура();
	ПараметрыОткрытия.Вставить("ИмяСобытияОбмена", "ПубликацияРасчетныхЛистков");
	ПараметрыОткрытия.Вставить("ИмяФайла", ИмяФайла);
	ПараметрыОткрытия.Вставить("ПараметрыПубликацииРЛ", ПараметрыПубликации);
	
	ОповещениеОЗакрытии = Новый ОписаниеОповещения("ВыполнитьПубликациюСохранитьЖурналЗавершение", ЭтотОбъект);
	
	ОткрытьФорму("ОбщаяФорма.ВыполнитьОбменСохранитьЖурнал", ПараметрыОткрытия, ЭтаФорма,,,,ОповещениеОЗакрытии);
	
КонецПроцедуры

&НаКлиенте
Процедура ВыполнитьПубликациюСохранитьЖурналЗавершение(Результат, ДополнительныеПараметры) Экспорт

	Если Результат = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если Результат.РезультатВыполненияОбмена = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ОбновитьСписокКПубликации(Истина);
	ОбновитьСписокОпубликованныхНаСервере();
	
	Если Результат.РезультатВыполненияОбмена.БылиОшибки Тогда
		СообщениеОбОшибке = НСтр("ru = 'Публикация расчетных листков завершена с ошибками.'");
		ОбщегоНазначенияКлиент.СообщитьПользователю(СообщениеОбОшибке);
	КонецЕсли;
	
	Если Не ПустаяСтрока(Результат.ПолноеИмяФайла) Тогда
		ТекстСообщения = СтрШаблон("%1: %2", НСтр("ru = 'Данные сохранены в'"), Результат.ПолноеИмяФайла);
		ОбщегоНазначенияКлиент.СообщитьПользователю(ТекстСообщения);
	КонецЕсли;

КонецПроцедуры

#КонецОбласти













