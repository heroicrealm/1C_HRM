#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

#Область СтандартныеПодсистемыОбменДанными

// Заполняет настройки, влияющие на использование плана обмена.
// 
// Параметры:
//  Настройки - Структура - настройки плана обмена по умолчанию, см. ОбменДаннымиСервер.НастройкиПланаОбменаПоУмолчанию,
//                          описание возвращаемого значения функции.
//
Процедура ПриПолученииНастроек(Настройки) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	Настройки.НазначениеПланаОбмена = "РИБСФильтром";
	Настройки.Алгоритмы.ПриПолученииОписанияВариантаНастройки = Истина;
	Настройки.Алгоритмы.ПриСохраненииНастроекСинхронизацииДанных = Истина;
	
КонецПроцедуры

// Заполняет набор параметров, определяющих вариант настройки обмена.
// 
// Параметры:
//  ОписаниеВарианта       - Структура - набор варианта настройки по умолчанию,
//                                       см. ОбменДаннымиСервер.ОписаниеВариантаНастройкиОбменаПоУмолчанию,
//                                       описание возвращаемого значения.
//  ИдентификаторНастройки - Строка    - идентификатор варианта настройки обмена.
//  ПараметрыКонтекста     - Структура - см. ОбменДаннымиСервер.ПараметрыКонтекстаПолученияОписанияВариантаНастройки,
//                                       описание возвращаемого значения функции.
//
Процедура ПриПолученииОписанияВариантаНастройки(ОписаниеВарианта, ИдентификаторНастройки, ПараметрыКонтекста) Экспорт
	
	КраткаяИнформацияПоОбмену = НСтр("ru = 'Распределенная информационная база представляет собой иерархическую структуру, 
	|состоящую из отдельных информационных баз системы «1С:Предприятие» - узлов распределенной информационной базы, между 
	|которыми организована синхронизация конфигурации и данных. Главной особенностью распределенных информационных баз 
	|является передача изменений конфигурации в подчиненные узлы. 
	|Имеется возможность настраивать ограничения миграции данных, например по организациям.'");
	КраткаяИнформацияПоОбмену = СтрЗаменить(КраткаяИнформацияПоОбмену, Символы.ПС, "");
	
	ПодробнаяИнформацияПоОбмену = "ПланОбмена.ОбменВРаспределеннойИнформационнойБазе.Форма.ПодробнаяИнформация";
	
	ОписаниеВарианта.КраткаяИнформацияПоОбмену   = КраткаяИнформацияПоОбмену;
	ОписаниеВарианта.ПодробнаяИнформацияПоОбмену = ПодробнаяИнформацияПоОбмену;
	
	ОписаниеВарианта.ЗаголовокКомандыДляСозданияНовогоОбменаДанными = НСтр("ru = 'Распределенная информационная база'");
	
	ОписаниеВарианта.ИмяФормыСозданияНачальногоОбраза = "ПланОбмена.ОбменВРаспределеннойИнформационнойБазе.Форма.СозданиеНачальногоОбразаСФайлами";
	
	ОписаниеВарианта.ОбщиеДанныеУзлов = "ИспользоватьОтборПоОрганизациям, СинхронизироватьДанныеПоОрганизациям, Организации, ИспользоватьОтборПоПодразделениям, СинхронизироватьДанныеПоПодразделениям, Подразделения";
	ОписаниеВарианта.ИмяКонфигурацииКорреспондента = "ЗарплатаИУправлениеПерсоналом";
	
КонецПроцедуры

// Заполняет узел обмена настройками отправки и получения данных (ограничения передачи данных и значения по умолчанию).
//
// Параметры:
//  Корреспондент - ПланОбменаОбъект - узел плана обмена, соответствующий корреспонденту.
//  ДанныеЗаполнения - Структура - структура с данными для заполнения настроек отправки и получения данных.
//
Процедура ПриСохраненииНастроекСинхронизацииДанных(Корреспондент, ДанныеЗаполнения) Экспорт
	
	ЗаполнитьЗначенияСвойств(Корреспондент, ДанныеЗаполнения, 
		"ДатаНачалаВыгрузкиДокументов,
		|ИспользоватьОтборПоОрганизациям,
		|ИспользоватьОтборПоПодразделениям,
		|СинхронизироватьДанныеПоОрганизациям,
		|СинхронизироватьДанныеПоПодразделениям");
	
	Корреспондент.Организации.Загрузить(ДанныеЗаполнения.Организации);
	Корреспондент.Подразделения.Загрузить(ДанныеЗаполнения.Подразделения);
	
КонецПроцедуры

#КонецОбласти

#Область СтандартныеПодсистемыГрупповоеИзменениеОбъектов

// Возвращает реквизиты объекта, которые не рекомендуется редактировать
// с помощью обработки группового изменения реквизитов.
//
// Возвращаемое значение:
//  Массив - список имен реквизитов объекта.
Функция РеквизитыНеРедактируемыеВГрупповойОбработке() Экспорт
	
	Результат = Новый Массив;
	Результат.Добавить("РегистрироватьИзменения");
	Возврат Результат;
	
КонецФункции

#КонецОбласти

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// Заполняет список команд печати.
// 
// Параметры:
//   КомандыПечати - ТаблицаЗначений - состав полей см. в функции УправлениеПечатью.СоздатьКоллекциюКомандПечати.
//
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт
	
	// Объекты регламентированного учета
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Обработчик = "ЗарплатаКадрыКлиент.ВыполнитьКомандуПечати";
	КомандаПечати.МенеджерПечати = "Отчет.МигрирующиеОбъектыРИБ";
	КомандаПечати.Идентификатор = "ОбъектыРегламентированногоУчета";
	КомандаПечати.Представление = НСтр("ru = 'Объекты, участвующие в обмене по регламентированному учету.'");
		
	// Объекты управленческого учета
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Обработчик = "ЗарплатаКадрыКлиент.ВыполнитьКомандуПечати";
	КомандаПечати.МенеджерПечати = "Отчет.МигрирующиеОбъектыРИБ";
	КомандаПечати.Идентификатор = "ОбъектыУправленческогоУчета";
	КомандаПечати.Представление = НСтр("ru = 'Объекты, участвующие в обмене по управленческому учету.'");
		
КонецПроцедуры


#КонецОбласти

#КонецЕсли
