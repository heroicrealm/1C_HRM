#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ОбменДаннымиСервер.ФормаНастройкиУзлаПриСозданииНаСервере(ЭтаФорма, "АвтономнаяРабота");
	
	РежимСинхронизацииОрганизаций =
		?(ИспользоватьОтборПоОрганизациям И СинхронизироватьДанныеПоОрганизациям, "СинхронизироватьДанныеТолькоПоВыбраннымОрганизациям", "СинхронизироватьДанныеПоВсемОрганизациям");
	
	ИспользуемыеОрганизации = Организации.Выгрузить();
	Организации.Загрузить(ВсеОрганизацииПриложения());
	Для Каждого СтрокаТаблицы Из ИспользуемыеОрганизации Цикл
		Строки = Организации.НайтиСтроки(Новый Структура("Организация", СтрокаТаблицы.Организация));
		Для каждого НайденнаяСтрока Из Строки Цикл
			НайденнаяСтрока.Использовать = Истина;
		КонецЦикла;
	КонецЦикла;
	
	РежимСинхронизацииПодразделений =
		?(ИспользоватьОтборПоПодразделениям И СинхронизироватьДанныеПоПодразделениям, "СинхронизироватьДанныеТолькоПоВыбраннымПодразделениям", "СинхронизироватьДанныеПоВсемПодразделениям");
	
	ДоступностьПодразделений = СинхронизацияДанныхЗарплатаКадрыСервер.ИспользуетсяСтруктураПредприятия();
	
	Если Не ДоступностьПодразделений Тогда
		ЗаполнитьСтруктурныеПодразделенияПоОрганизациямНаСервере();
	КонецЕсли;
	
	ВсеПодразделенияПриложения = ВсеПодразделенияПриложения();
	Если ВсеПодразделенияПриложения <> Неопределено Тогда
		ПодразделенияДерево = РеквизитФормыВЗначение("ПодразделенияДеревоЗначений");
		Для каждого СтрокаТаблицы Из ВсеПодразделенияПриложения Цикл
			СтрокаРодителя = ПодразделенияДерево.Строки.Найти(СтрокаТаблицы.ПодразделениеРодитель, "Подразделение", Истина);
			Если СтрокаРодителя = Неопределено Тогда
				СтрокаДерева = ПодразделенияДерево.Строки.Добавить();
			Иначе
				СтрокаДерева = СтрокаРодителя.Строки.Добавить();
			КонецЕсли;
			
			СтрокаДерева.Подразделение = СтрокаТаблицы.Подразделение;
		КонецЦикла;
		ПодразделенияДерево.Строки.Сортировать("Подразделение", Истина);
		// Отметим выбранные элементы
		Для Каждого СтрокаТаблицы Из Подразделения Цикл
			НайденнаяСтрока = ПодразделенияДерево.Строки.Найти(СтрокаТаблицы.Подразделение, "Подразделение", Истина);
			Если НайденнаяСтрока <> Неопределено Тогда
				НайденнаяСтрока.Использовать = Истина;
			КонецЕсли;
		КонецЦикла;
		ЗначениеВРеквизитФормы(ПодразделенияДерево, "ПодразделенияДеревоЗначений");
	КонецЕсли;
	
	УстановитьВидимостьЭлементов();
	Если Не Элементы.ГруппаНастройкиВыгрузкиДанныхПоПодразделениям.Видимость Тогда
		Если Не СинхронизироватьДанныеПоОрганизациям Тогда
			СинхронизироватьДанныеПоОрганизациям = Истина;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	РежимСинхронизацииОрганизацийПриИзмененииЗначения();
	РежимСинхронизацииПодразделенийПриИзмененииЗначения();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура РежимСинхронизацииОрганизацийПриИзменении(Элемент)
	
	РежимСинхронизацииОрганизацийПриИзмененииЗначения();
	
	Если Не ДоступностьПодразделений Тогда
		ЗаполнитьСтруктурныеПодразделенияПоОрганизациямНаСервере();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура РежимСинхронизацииПодразделенийПриИзменении(Элемент)
	РежимСинхронизацииПодразделенийПриИзмененииЗначения();
КонецПроцедуры

&НаКлиенте
Процедура СинхронизироватьДанныеПоОрганизациямПриИзменении(Элемент)
	
	РежимСинхронизацииОрганизацийПриИзмененииЗначения();
	
	Если Не ДоступностьПодразделений Тогда
		ЗаполнитьСтруктурныеПодразделенияПоОрганизациямНаСервере();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СинхронизироватьДанныеПоПодразделениямПриИзменении(Элемент)
	РежимСинхронизацииПодразделенийПриИзмененииЗначения();
КонецПроцедуры

&НаКлиенте
Процедура СинхронизироватьДанныеПоОрганизациямРасширеннаяПодсказкаНажатие(Элемент)
	
	Уникальность = "Отчет.МигрирующиеОбъектыРИБ/КлючВарианта.ОбъектыРегламентированногоУчета";
	
	ПараметрыОткрытия = Новый Структура;
	ПараметрыОткрытия.Вставить("КлючВарианта", "ОбъектыРегламентированногоУчета");
	ПараметрыОткрытия.Вставить("КлючПараметровПечати", Уникальность);
	ПараметрыОткрытия.Вставить("КлючСохраненияПоложенияОкна", Уникальность);
	ПараметрыОткрытия.Вставить("СформироватьПриОткрытии", Истина);
	
	ОткрытьФорму("Отчет.МигрирующиеОбъектыРИБ.Форма", ПараметрыОткрытия, ЭтаФорма, Уникальность);
	
КонецПроцедуры

&НаКлиенте
Процедура СинхронизироватьДанныеПоПодразделениямРасширеннаяПодсказкаНажатие(Элемент)
	
	Уникальность = "Отчет.МигрирующиеОбъектыРИБ/КлючВарианта.ОбъектыУправленческогоУчета";
	
	ПараметрыОткрытия = Новый Структура;
	ПараметрыОткрытия.Вставить("КлючВарианта", "ОбъектыУправленческогоУчета");
	ПараметрыОткрытия.Вставить("КлючПараметровПечати", Уникальность);
	ПараметрыОткрытия.Вставить("КлючСохраненияПоложенияОкна", Уникальность);
	ПараметрыОткрытия.Вставить("СформироватьПриОткрытии", Истина);
	
	ОткрытьФорму("Отчет.МигрирующиеОбъектыРИБ.Форма", ПараметрыОткрытия, ЭтаФорма, Уникальность);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыОрганизации

&НаКлиенте
Процедура ОрганизацииИспользоватьПриИзменении(Элемент)
	
	Если Не ДоступностьПодразделений Тогда
		ЗаполнитьСтруктурныеПодразделенияПоОрганизациямНаСервере();
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыПодразделения

&НаКлиенте
Процедура ПодразделенияИспользоватьПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.Подразделения.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ПодразделенияИспользоватьПриИзмененииНаСервере(ТекущиеДанные.Подразделение, ТекущиеДанные.Использовать);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ВключитьВсеОрганизации(Команда)
	
	ВключитьОтключитьВсеЭлементыВТаблице(Истина, "Организации");
	Если Не ДоступностьПодразделений Тогда
		ВключитьОтключитьВсеЭлементыВДеревеЗначений(Истина, ПодразделенияДеревоЗначений.ПолучитьЭлементы());
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОтключитьВсеОрганизации(Команда)
	
	ВключитьОтключитьВсеЭлементыВТаблице(Ложь, "Организации");
	Если Не ДоступностьПодразделений Тогда
		ВключитьОтключитьВсеЭлементыВДеревеЗначений(Ложь, ПодразделенияДеревоЗначений.ПолучитьЭлементы());
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ВключитьВсеПодразделения(Команда)
	ВключитьОтключитьВсеЭлементыВДеревеЗначений(Истина, ПодразделенияДеревоЗначений.ПолучитьЭлементы());
КонецПроцедуры

&НаКлиенте
Процедура ОтключитьВсеПодразделения(Команда)
	ВключитьОтключитьВсеЭлементыВДеревеЗначений(Ложь, ПодразделенияДеревоЗначений.ПолучитьЭлементы());
КонецПроцедуры

&НаКлиенте
Процедура ЗаписатьИЗакрыть(Команда)
	
	Если Не ДоступностьПодразделений Тогда
		
		ПодразделенияСоответствуютОрганизациям = ПодразделенияСоответствуютОрганизациям();
		
		Если Не ПодразделенияСоответствуютОрганизациям Тогда
			
			ТекстВопроса = НСтр("ru = 'Структурные подразделения не соответствуют отмеченным организациям. Исправить?'");
			Оповещение = Новый ОписаниеОповещения("ЗаполнитьСтруктурныеПодразделенияПоОрганизациямЗавершение", ЭтотОбъект);
			ПоказатьВопрос(Оповещение, ТекстВопроса, РежимДиалогаВопрос.ДаНет);
			
		Иначе
			ЗаписатьИЗакрытьЗавершение();
		КонецЕсли;
	Иначе
		ЗаписатьИЗакрытьЗавершение();
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура ВключитьОтключитьВсеЭлементыВТаблице(Включить, ИмяТаблицы)
	
	Для Каждого ЭлементКоллекции Из ЭтаФорма[ИмяТаблицы] Цикл
		ЭлементКоллекции.Использовать = Включить;
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ВключитьОтключитьВсеЭлементыВДеревеЗначений(Включить, Строки)
	
	Для Каждого ЭлементКоллекции Из Строки Цикл
		ЭлементКоллекции.Использовать = Включить;
		ВключитьОтключитьВсеЭлементыВДеревеЗначений(Включить, ЭлементКоллекции.ПолучитьЭлементы());
	КонецЦикла;
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ВсеОрганизацииПриложения()
	
	УстановитьПривилегированныйРежим(Истина);
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ЛОЖЬ КАК Использовать,
	|	Организации.Ссылка КАК Организация
	|ИЗ
	|	Справочник.Организации КАК Организации
	|ГДЕ
	|	НЕ Организации.ПометкаУдаления
	|
	|УПОРЯДОЧИТЬ ПО
	|	Организации.Наименование";
	
	Запрос = Новый Запрос;
	Запрос.Текст = ТекстЗапроса;
	
	Возврат Запрос.Выполнить().Выгрузить();
	
КонецФункции

&НаСервереБезКонтекста
Функция ВсеПодразделенияПриложения()
	
	УстановитьПривилегированныйРежим(Истина);
	
	Если ОбщегоНазначения.ПодсистемаСуществует("ЗарплатаКадрыПриложения.ОрганизационнаяСтруктура") Тогда
		Модуль = ОбщегоНазначения.ОбщийМодуль("ОрганизационнаяСтруктура");
		Возврат Модуль.СтруктураПредприятия();
	КонецЕсли;
	
	Возврат Неопределено;
	
КонецФункции

&НаКлиенте
Процедура РежимСинхронизацииОрганизацийПриИзмененииЗначения()
	
	Элементы.Организации.Доступность =
		(РежимСинхронизацииОрганизаций = "СинхронизироватьДанныеТолькоПоВыбраннымОрганизациям");
	
КонецПроцедуры

&НаКлиенте
Процедура РежимСинхронизацииПодразделенийПриИзмененииЗначения()
	
	Элементы.Подразделения.Доступность =
		(РежимСинхронизацииПодразделений = "СинхронизироватьДанныеТолькоПоВыбраннымПодразделениям");
	
КонецПроцедуры

&НаСервере
Процедура ЗаписатьИЗакрытьСервер()
	
	ИспользоватьОтборПоОрганизациям =
		(РежимСинхронизацииОрганизаций = "СинхронизироватьДанныеТолькоПоВыбраннымОрганизациям");
	
	Если ИспользоватьОтборПоОрганизациям Тогда
		Организации.Загрузить(Организации.Выгрузить(Новый Структура("Использовать", Истина), "Организация"));
	Иначе
		Организации.Очистить();
	КонецЕсли;
	
	// Отключаем синхронизацию по подразделениям, если они не используются
	Если Не ОбщегоНазначения.ПодсистемаСуществует("ЗарплатаКадрыПриложения.ОрганизационнаяСтруктура") Тогда
		СинхронизироватьДанныеПоПодразделениям = Ложь;
	КонецЕсли;
	
	ИспользоватьОтборПоПодразделениям =
		(РежимСинхронизацииПодразделений = "СинхронизироватьДанныеТолькоПоВыбраннымПодразделениям");
	
	Подразделения.Очистить();
	Если ИспользоватьОтборПоПодразделениям Тогда
		ПодразделенияДерево = РеквизитФормыВЗначение("ПодразделенияДеревоЗначений");
		НайденныеСтроки = ПодразделенияДерево.Строки.НайтиСтроки(Новый Структура("Использовать", Истина), Истина);
		Для каждого НайденнаяСтрока Из НайденныеСтроки Цикл
			НоваяСтрока = Подразделения.Добавить();
			НоваяСтрока.Подразделение = НайденнаяСтрока.Подразделение;
		КонецЦикла;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаписатьИЗакрытьЗавершение()
	
	ЗаписатьИЗакрытьСервер();
	
	ОбменДаннымиКлиент.ФормаНастройкиУзлаКомандаЗакрытьФорму(ЭтаФорма);
	
КонецПроцедуры

&НаСервере
Процедура ПодразделенияИспользоватьПриИзмененииНаСервере(Подразделение, Использование)
	
	МассивПодразделений = Новый Массив;
	Если ОбщегоНазначения.ПодсистемаСуществует("ЗарплатаКадрыПриложения.ОрганизационнаяСтруктура") Тогда
		Модуль = ОбщегоНазначения.ОбщийМодуль("ОрганизационнаяСтруктура");
		МассивПодразделений = Модуль.ПодчиненныеПодразделения(Подразделение);
	КонецЕсли;
	
	УстановитьИспользованиеПодразделения(ПодразделенияДеревоЗначений.ПолучитьЭлементы(), МассивПодразделений, Использование);
	
КонецПроцедуры

&НаСервере
Процедура УстановитьИспользованиеПодразделения(ЭлементыДерева, МассивПодразделений, Использование)
	
	Для каждого СтрокаПодразделения Из ЭлементыДерева Цикл
		Если МассивПодразделений.Найти(СтрокаПодразделения.Подразделение) <> Неопределено Тогда
			СтрокаПодразделения.Использовать = Использование;
		КонецЕсли;
		УстановитьИспользованиеПодразделения(СтрокаПодразделения.ПолучитьЭлементы(), МассивПодразделений, Использование);
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура УстановитьВидимостьЭлементов()
	
	ВидимостьГруппыНастройкиПоПодразделениям = ПолучитьФункциональнуюОпцию("ИспользоватьЗарплатаКадрыКорпоративнаяПодсистемы");
	
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "ГруппаНастройкиВыгрузкиДанныхПоПодразделениям", "Видимость", ВидимостьГруппыНастройкиПоПодразделениям);
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "СинхронизироватьДанныеПоОрганизациям", "Видимость", ВидимостьГруппыНастройкиПоПодразделениям);
	
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "ГруппаНастройкиВыгрузкиДанныхПоПодразделениям", "ТолькоПросмотр", Не ДоступностьПодразделений);
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "РежимСинхронизацииПодразделений", "Видимость", ДоступностьПодразделений);
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "ТекстНедоступныйРаздел", "Видимость", Не ДоступностьПодразделений);
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "ПодразделенияВключитьВсеПодразделения", "Доступность", ДоступностьПодразделений);
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "ПодразделенияОтключитьВсеПодразделения", "Доступность", ДоступностьПодразделений);
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьСтруктурныеПодразделенияПоОрганизациямНаСервере()
	
	СинхронизироватьДанныеПоПодразделениям = СинхронизироватьДанныеПоОрганизациям;
	
	Если РежимСинхронизацииОрганизаций = "СинхронизироватьДанныеПоВсемОрганизациям" Тогда
		РежимСинхронизацииПодразделений = "СинхронизироватьДанныеПоВсемПодразделениям";
	Иначе
		РежимСинхронизацииПодразделений = "СинхронизироватьДанныеТолькоПоВыбраннымПодразделениям";
	КонецЕсли;
	
	МассивОрганизаций = Новый Массив;
	Для Каждого СтрокаТаблицыОрганизации Из Организации Цикл
		Если СтрокаТаблицыОрганизации.Использовать Тогда
			МассивОрганизаций.Добавить(СтрокаТаблицыОрганизации.Организация);
		КонецЕсли;
	КонецЦикла;
	
	Для Каждого СтрокаДерева Из ПодразделенияДеревоЗначений.ПолучитьЭлементы() Цикл
		
		Если ТипЗнч(СтрокаДерева.Подразделение.Источник) = Тип("СправочникСсылка.Организации") 
			И МассивОрганизаций.Найти(СтрокаДерева.Подразделение.Источник) <> Неопределено Тогда
			СтрокаДерева.Использовать = Истина;
		Иначе
			СтрокаДерева.Использовать = Ложь;
		КонецЕсли;
		
		ПодразделенияИспользоватьПриИзмененииНаСервере(СтрокаДерева.Подразделение, СтрокаДерева.Использовать);
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Функция ПодразделенияСоответствуютОрганизациям()
	
	МассивОрганизаций = Новый Массив;
	Для Каждого СтрокаТаблицыОрганизации Из Организации Цикл
		Если СтрокаТаблицыОрганизации.Использовать Тогда
			МассивОрганизаций.Добавить(СтрокаТаблицыОрганизации.Организация);
		КонецЕсли;
	КонецЦикла;
	
	ПодразделенияСоответствуютОрганизациям = Истина;
	Для Каждого СтрокаДерева Из ПодразделенияДеревоЗначений.ПолучитьЭлементы() Цикл
		
		Если ТипЗнч(СтрокаДерева.Подразделение.Источник) = Тип("СправочникСсылка.Организации") 
			И МассивОрганизаций.Найти(СтрокаДерева.Подразделение.Источник) <> Неопределено Тогда
			Если Не СтрокаДерева.Использовать Тогда
				ПодразделенияСоответствуютОрганизациям = Ложь;
			Иначе
				ПодразделенияСоответствуютОрганизациям = ИспользованиеПодразделенияСоответствуетВерхнемуУровню(СтрокаДерева.ПолучитьЭлементы(), СтрокаДерева.Использовать);
			КонецЕсли;
		ИначеЕсли СтрокаДерева.Использовать Тогда
			ПодразделенияСоответствуютОрганизациям = Ложь;
		КонецЕсли;
		
		Если Не ПодразделенияСоответствуютОрганизациям Тогда
			Прервать;
		КонецЕсли;
		
	КонецЦикла;
	
	Возврат ПодразделенияСоответствуютОрганизациям;
	
КонецФункции

&НаСервере
Функция ИспользованиеПодразделенияСоответствуетВерхнемуУровню(ЭлементыДерева, Использование)
	
	Для каждого СтрокаПодразделения Из ЭлементыДерева Цикл
		
		Если СтрокаПодразделения.Использовать <> Использование Тогда
			Возврат Ложь;
		КонецЕсли;
		
		СоответствуетВерхнемуУровню = ИспользованиеПодразделенияСоответствуетВерхнемуУровню(СтрокаПодразделения.ПолучитьЭлементы(), Использование);
		Если Не СоответствуетВерхнемуУровню Тогда
			Возврат Ложь;
		КонецЕсли;
		
	КонецЦикла;
	
	Возврат Истина;
	
КонецФункции

&НаКлиенте
Процедура ЗаполнитьСтруктурныеПодразделенияПоОрганизациямЗавершение(Ответ, ДополнительныеПараметры) Экспорт 
	
	Если Ответ = КодВозвратаДиалога.Да И Не ДоступностьПодразделений Тогда
		ЗаполнитьСтруктурныеПодразделенияПоОрганизациямНаСервере();
	КонецЕсли;
	
	ЗаписатьИЗакрытьЗавершение();
	
КонецПроцедуры

#КонецОбласти
