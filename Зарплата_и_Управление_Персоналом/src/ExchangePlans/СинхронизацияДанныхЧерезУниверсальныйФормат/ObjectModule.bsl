#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий

Процедура ПередЗаписью(Отказ)
	
	// Проверка значения свойства ОбменДанными.Загрузка отсутствует по причине того, что в расположенным ниже коде,
	// реализована логика, которая должна выполняться в том числе при установке этого свойства равным Истина
	// (на стороне кода, который выполняет попытку записи в данный план обмена).
	
	// Очистка неиспользуемых реквизитов и заполнение служебных.
	Если ПравилаОтправкиСправочников = "НеСинхронизировать" Тогда
		ИспользоватьОтборПоОрганизациям = Ложь;
		РежимВыгрузкиСправочников       = Перечисления.РежимыВыгрузкиОбъектовОбмена.НеВыгружать;
		РежимВыгрузкиПриНеобходимости   = Перечисления.РежимыВыгрузкиОбъектовОбмена.НеВыгружать;
	ИначеЕсли ПравилаОтправкиСправочников = "СинхронизироватьПоНеобходимости" Тогда
		РежимВыгрузкиПриНеобходимости 	= Перечисления.РежимыВыгрузкиОбъектовОбмена.ВыгружатьПриНеобходимости;
		РежимВыгрузкиСправочников 		= Перечисления.РежимыВыгрузкиОбъектовОбмена.ВыгружатьПриНеобходимости;
	Иначе
		РежимВыгрузкиПриНеобходимости 	= Перечисления.РежимыВыгрузкиОбъектовОбмена.ВыгружатьПриНеобходимости;
		РежимВыгрузкиСправочников 		= Перечисления.РежимыВыгрузкиОбъектовОбмена.ВыгружатьПоУсловию;
	КонецЕсли;
	
	Если ПравилаОтправкиДокументов = "НеСинхронизировать" Тогда
		РежимВыгрузкиДокументов = Перечисления.РежимыВыгрузкиОбъектовОбмена.НеВыгружать;
	ИначеЕсли ПравилаОтправкиДокументов = "ИнтерактивнаяСинхронизация" Тогда
		РежимВыгрузкиДокументов = Перечисления.РежимыВыгрузкиОбъектовОбмена.ВыгружатьВручную;
	Иначе
		РежимВыгрузкиДокументов = Перечисления.РежимыВыгрузкиОбъектовОбмена.ВыгружатьПоУсловию;
	КонецЕсли;
	
	Если Не ИспользоватьОтборПоОрганизациям И Организации.Количество() <> 0 Тогда
		Организации.Очистить();
	ИначеЕсли Организации.Количество() = 0 И ИспользоватьОтборПоОрганизациям Тогда
		ИспользоватьОтборПоОрганизациям = Ложь;
	КонецЕсли;
	
	Если ПравилаОтправкиДокументов <> "АвтоматическаяСинхронизация" Тогда
		ДатаНачалаВыгрузкиДокументов = Дата(1,1,1,0,0,0);
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(ВерсияФорматаОбмена) Тогда
		Если ВариантНастройки = "ОбменЗУПБП" Тогда
			ВерсияФорматаОбмена = "1.8";
		Иначе
			ВерсияФорматаОбмена = "1.3";
		КонецЕсли;
	ИначеЕсли ВариантНастройки = "ОбменЗУПБП" Тогда
		Если ВерсияФорматаОбмена = "1.3" Тогда
			ВерсияФорматаОбмена = "1.8";
		КонецЕсли;
	КонецЕсли;
	
	Если ВариантНастройки = "ОбменУП2ЗУП3" И Не ДанныеДляФормированияПроводокОтправлятьСводно Тогда
		ДанныеДляФормированияПроводокОтправлятьСводно = Истина;
	ИначеЕсли ВариантНастройки = "ОбменЗУПБП" И ОтправлятьВедомостиКакЗаявки Тогда
		ОтправлятьВедомостиКакЗаявки = Ложь;
	КонецЕсли;
	
	Если Не ОтправлятьВедомости И ОтправлятьВедомостиКакЗаявки Тогда
		ОтправлятьВедомостиКакЗаявки = Ложь;
	КонецЕсли;
	
	Если ЗарплатаКадры.ОтключитьБизнесЛогикуПриЗаписи(ЭтотОбъект) Тогда
		Возврат;
	КонецЕсли;
	
	// Обновление кэшируемых данных, зависящих от значений реквизитов данного узла обмена.
	Если Не ОбщегоНазначения.РазделениеВключено() Тогда
		ОбменДаннымиВызовСервера.СброситьКэшМеханизмаРегистрацииОбъектов();
		ОбновитьПовторноИспользуемыеЗначения();
	КонецЕсли;
	
КонецПроцедуры

Процедура ПередУдалением(Отказ)
	
	ОбменДаннымиУниверсальныйФормат.ОбновитьНастройкиИспользованияОбмена(ЭтотОбъект, Истина);
	
КонецПроцедуры

Процедура ПриЗаписи(Отказ)
	
	Если ДополнительныеСвойства.Свойство("Загрузка")
		Или ДополнительныеСвойства.Свойство("ПолучениеСообщенияОбмена") Тогда
		// Это запись номера принятого/отправленного сообщения в узел обмена.
		Возврат;
	КонецЕсли;
	
	ОбменДаннымиУниверсальныйФормат.ОбновитьНастройкиИспользованияОбмена(ЭтотОбъект, ПометкаУдаления);
	
	Если ЗарплатаКадры.ОтключитьБизнесЛогикуПриЗаписи(ЭтотОбъект) Тогда
		Возврат;
	КонецЕсли;
	
КонецПроцедуры

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка)
	
	ИнициализироватьОбъект(ДанныеЗаполнения);
	
КонецПроцедуры


#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура ИнициализироватьОбъект(ДанныеЗаполнения)
	
	Если Не ДанныеЗаполнения = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	РежимВыгрузкиПриНеобходимости = Перечисления.РежимыВыгрузкиОбъектовОбмена.ВыгружатьПриНеобходимости;
	
	ДатаНачалаВыгрузкиДокументов = НачалоГода(ТекущаяДата());
	ПравилаОтправкиСправочников = "АвтоматическаяСинхронизация";
	ПравилаОтправкиДокументов = "АвтоматическаяСинхронизация";
	
	Если ЗначениеЗаполнено(ВариантНастройки) Тогда
		НастроитьОтборыПоУмолчанию();
	КонецЕсли;
	
КонецПроцедуры

Процедура НастроитьОтборыПоУмолчанию()
	
	Если ВариантНастройки = "ОбменЗУПБП" Тогда
		ВерсияФорматаОбмена = "1.8";
		ОтправлятьВедомости = Истина;
		ОтправлятьРегламентированныеОтчеты = Истина;
	Иначе
		ВерсияФорматаОбмена = "1.3";
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти


#Иначе
ВызватьИсключение НСтр("ru = 'Недопустимый вызов объекта на клиенте.'");
#КонецЕсли