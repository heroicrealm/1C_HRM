#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

#КонецОбласти

#Область СлужебныеПроцедурыИФункции
Функция ДанноеУведомлениеДоступноДляОрганизации() Экспорт 
	Возврат Истина;
КонецФункции

Функция ДанноеУведомлениеДоступноДляИП() Экспорт 
	Возврат Истина;
КонецФункции

Функция ПолучитьОсновнуюФорму() Экспорт 
	Возврат "";
КонецФункции

Функция ПолучитьФормуПоУмолчанию() Экспорт 
	Возврат "Отчет.РегламентированноеУведомлениеБумажныеФормы.Форма.ФормаУведомления";
КонецФункции

Функция ПолучитьТаблицуФорм() Экспорт 
	Результат = Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюТаблицуФормУведомления();
	
	Стр = Результат.Добавить();
	Стр.ИмяФормы = "ФормаУведомления";
	Стр.ОписаниеФормы = "Печатный бланк в соответствии с приказом Министерства финансов РФ от 26.12.2018 № 286н";
	Стр.ВидУведомления = Перечисления.ВидыУведомленийОСпецрежимахНалогообложения.ОсвобождениеОтУплатыНДС;
	
	Стр = Результат.Добавить();
	Стр.ИмяФормы = "ОсвобождениеОтУплатыНДС_501";
	Стр.ОписаниеФормы = "Электронное представление в формате 5.01";
	Стр.ВидУведомления = Перечисления.ВидыУведомленийОСпецрежимахНалогообложения.ОсвобождениеОтУплатыНДС;
	
	Стр = Результат.Добавить();
	Стр.ИмяФормы = "ФормаУведомления";
	Стр.ОписаниеФормы = "Печатный бланк в соответствии с приказом Министерства финансов РФ от 26.12.2018 № 286н";
	Стр.ВидУведомления = Перечисления.ВидыУведомленийОСпецрежимахНалогообложения.ОсвобождениеОтНДСПриЕСХН;
	
	Стр = Результат.Добавить();
	Стр.ИмяФормы = "ОсвобождениеОтНДСПриЕСХН_501";
	Стр.ОписаниеФормы = "Электронное представление в формате 5.01";
	Стр.ВидУведомления = Перечисления.ВидыУведомленийОСпецрежимахНалогообложения.ОсвобождениеОтНДСПриЕСХН;
	
	Стр = Результат.Добавить();
	Стр.ИмяФормы = "ФормаУведомления";
	Стр.ОписаниеФормы = "Утверждено";
	Стр.ВидУведомления = Перечисления.ВидыУведомленийОСпецрежимахНалогообложения.ЗаявлениеНаПриемДокументовФСС;
	
	Стр = Результат.Добавить();
	Стр.ИмяФормы = "ФормаУведомления";
	Стр.ОписаниеФормы = "Утверждено";
	Стр.ВидУведомления = Перечисления.ВидыУведомленийОСпецрежимахНалогообложения.ВозвратСуммыНВОС;
	Стр = Результат.Добавить();
	Стр.ИмяФормы = "ФормаУведомления";
	Стр.ОписаниеФормы = "Утверждено";
	
	Стр.ВидУведомления = Перечисления.ВидыУведомленийОСпецрежимахНалогообложения.ЗачетСуммыНВОС;
	Стр = Результат.Добавить();
	Стр.ИмяФормы = "ФормаУведомления";
	Стр.ОписаниеФормы = "Утверждено";
	Стр.ВидУведомления = Перечисления.ВидыУведомленийОСпецрежимахНалогообложения.Уведомление1НачалоУплаты;
	
	Стр = Результат.Добавить();
	Стр.ИмяФормы = "ФормаУведомления";
	Стр.ОписаниеФормы = "Утверждено";
	Стр.ВидУведомления = Перечисления.ВидыУведомленийОСпецрежимахНалогообложения.Уведомление2ОтказОтУплаты;
	
	Возврат Результат;
КонецФункции

Функция ЭлектронноеПредставление(Объект, ИмяФормы, УникальныйИдентификатор) Экспорт
	Если ИмяФормы = "ОсвобождениеОтНДСПриЕСХН_501" Тогда 
		Возврат ЭлектронноеПредставление_ОсвобождениеОтНДСПриЕСХН_501(Объект, УникальныйИдентификатор);
	ИначеЕсли ИмяФормы = "ОсвобождениеОтУплатыНДС_501" Или ИмяФормы = "ФормаОсвобождениеНДС" Тогда
		Возврат ЭлектронноеПредставление_ОсвобождениеОтУплатыНДС_501(Объект, УникальныйИдентификатор);
	Иначе
		РегламентированнаяОтчетность.СообщитьПользователюОбОшибкеВУведомлении(
			"Для данного заявления выгрузка не предусмотрена", УникальныйИдентификатор);
		ВызватьИсключение "";
	КонецЕсли;
КонецФункции

Функция ПолучитьИмяЭкраннойФормы(ВидУведомления)
	Если ВидУведомления = Перечисления.ВидыУведомленийОСпецрежимахНалогообложения.ОсвобождениеОтУплатыНДС Тогда 
		Возврат "Печать_MXL_Форма_ОсвобождениеОтУплатыНДС";
	ИначеЕсли ВидУведомления = Перечисления.ВидыУведомленийОСпецрежимахНалогообложения.ЗачетСуммыНВОС Тогда 
		Возврат "Печать_MXL_Форма_ЗачетСуммыНВОС";
	ИначеЕсли ВидУведомления = Перечисления.ВидыУведомленийОСпецрежимахНалогообложения.ВозвратСуммыНВОС Тогда 
		Возврат "Печать_MXL_Форма_ВозвратСуммыНВОС";
	ИначеЕсли ВидУведомления = Перечисления.ВидыУведомленийОСпецрежимахНалогообложения.ЗаявлениеНаПриемДокументовФСС Тогда 
		Возврат "Печать_MXL_Форма_ЗаявлениеНаПриемДокументовФСС";
	ИначеЕсли ВидУведомления = Перечисления.ВидыУведомленийОСпецрежимахНалогообложения.Уведомление1НачалоУплаты Тогда 
		Возврат "Печать_MXL_Форма_Уведомление1НачалоУплаты";
	ИначеЕсли ВидУведомления = Перечисления.ВидыУведомленийОСпецрежимахНалогообложения.Уведомление2ОтказОтУплаты Тогда 
		Возврат "Печать_MXL_Форма_Уведомление2ОтказОтУплаты";
	ИначеЕсли ВидУведомления = Перечисления.ВидыУведомленийОСпецрежимахНалогообложения.ОсвобождениеОтНДСПриЕСХН Тогда 
		Если ТекущаяДатаСеанса() >= Дата("20190401") Тогда 
			Возврат "Печать_MXL_Форма_ОсвобождениеОтНДСПриЕСХН";
		Иначе
			Возврат "Печать_MXL_Форма_ОсвобождениеОтНДСПриЕСХНРекомендованная";
		КонецЕсли;
	КонецЕсли;
КонецФункции

Функция ПолучитьНазваниеОргана(Объект) Экспорт
	Если Объект.ИмяФормы = "ФормаУведомления" Тогда
		СтруктураПараметров = Объект.ДанныеУведомления.Получить();
		Титульный = СтруктураПараметров.Титульный[0];
		Возврат Титульный.Орган;
	КонецЕсли;
	Возврат "";
КонецФункции

Функция СформироватьСписокЛистов(Объект) Экспорт
	Если Объект.ИмяФормы = "ФормаУведомления" Тогда 
		Возврат СформироватьСписокЛистовФормаУведомления(Объект);
	ИначеЕсли Объект.ИмяФормы = "ФормаОсвобождениеНДС" Тогда
		Возврат СформироватьСписокЛистовФормаУведомленияОсвобождениеОтНДССДопСтраницами(Объект);
	Иначе
		Возврат УведомлениеОСпецрежимахНалогообложения.ПечатьВСледующихВерсиях(Объект);
	КонецЕсли;
КонецФункции

Функция ПолучитьОриентациюСтраницы(ВидУведомления, НомерСтраницы)
	Возврат ОриентацияСтраницы.Портрет;
КонецФункции

Процедура ДополнитьПараметры_Уведомление1НачалоУплаты(Титульный)
	Для Каждого Стр Из СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок("ИНН,КПП,КодСубъекта,КПП1,КПП2,КПП3", ",") Цикл
		Если Титульный.Свойство(Стр) Тогда 
			Для Инд = 1 По СтрДлина(Титульный[Стр]) Цикл 
				Титульный.Вставить(Стр + "__" + Инд, Сред(Титульный[Стр], Инд, 1));
			КонецЦикла;
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры

Процедура ДополнитьПараметры_Уведомление2ОтказОтУплаты(Титульный)
	Для Каждого Стр Из СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок("ИНН,КПП,КодСубъекта,КПП1,КПП2", ",") Цикл
		Если Титульный.Свойство(Стр) Тогда 
			Для Инд = 1 По СтрДлина(Титульный[Стр]) Цикл 
				Титульный.Вставить(Стр + "__" + Инд, Сред(Титульный[Стр], Инд, 1));
			КонецЦикла;
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры

Процедура ДополнитьПараметры(Титульный, ВидУведомления)
	Если ВидУведомления = Перечисления.ВидыУведомленийОСпецрежимахНалогообложения.Уведомление1НачалоУплаты Тогда
		ДополнитьПараметры_Уведомление1НачалоУплаты(Титульный);
	ИначеЕсли ВидУведомления = Перечисления.ВидыУведомленийОСпецрежимахНалогообложения.Уведомление2ОтказОтУплаты Тогда 
		ДополнитьПараметры_Уведомление2ОтказОтУплаты(Титульный);
	КонецЕсли;
КонецПроцедуры

Функция СформироватьСписокЛистовФормаУведомления(Объект) Экспорт
	Листы = Новый СписокЗначений;
	МакетУведомления = Отчеты[Объект.ИмяОтчета].ПолучитьМакет(ПолучитьИмяЭкраннойФормы(Объект.ВидУведомления));
	Титульный = Объект.Ссылка.ДанныеУведомления.Получить().Титульный;
	ДополнитьПараметры(Титульный, Объект.ВидУведомления);
	Инд = 0;
	ПечатнаяФорма = УведомлениеОСпецрежимахНалогообложения.НовыйПустойЛист();
	ПечатнаяФорма.ОриентацияСтраницы = ПолучитьОриентациюСтраницы(Объект.ВидУведомления, Инд);
	НомСтр = 1;
	Пока Истина Цикл 
		Инд = Инд + 1;
		Если МакетУведомления.Области.Найти("Часть" + Формат(Инд, "ЧГ=")) = Неопределено Тогда 
			Прервать;
		КонецЕсли;
		ОбластьЧасть = МакетУведомления.ПолучитьОбласть("Часть" + Формат(Инд, "ЧГ="));
		ЗаполнитьЗначенияСвойств(ОбластьЧасть.Параметры, Титульный);
		Если Не ПечатнаяФорма.ПроверитьВывод(ОбластьЧасть) Тогда 
			УведомлениеОСпецрежимахНалогообложения.ПоложитьПФВСписокЛистов(Объект, Листы, ПечатнаяФорма, НомСтр, Ложь);
			НомСтр = НомСтр + 1;
			ПечатнаяФорма = УведомлениеОСпецрежимахНалогообложения.НовыйПустойЛист();
			ПечатнаяФорма.ОриентацияСтраницы = ПолучитьОриентациюСтраницы(Объект.ВидУведомления, Инд);
		КонецЕсли;
		ПечатнаяФорма.Вывести(ОбластьЧасть);
	КонецЦикла;
	УведомлениеОСпецрежимахНалогообложения.ПоложитьПФВСписокЛистов(Объект, Листы, ПечатнаяФорма, НомСтр, Ложь);
	Возврат Листы;
КонецФункции

Функция СформироватьСписокЛистовФормаУведомленияОсвобождениеОтНДССДопСтраницами(Объект) Экспорт
	Листы = Новый СписокЗначений;
	МакетУведомления = Отчеты[Объект.ИмяОтчета].ПолучитьМакет("Печать_MXL_Форма_ДополнительныеВыпискиНДС");
	СохраненныеДанные = Объект.Ссылка.ДанныеУведомления.Получить();
	ДанныеУведомления = СохраненныеДанные.ДанныеУведомления;
	
	Титульный = ДанныеУведомления.Титульная;
	Инд = 0;
	ПечатнаяФорма = УведомлениеОСпецрежимахНалогообложения.НовыйПустойЛист();
	НомСтр = 1;
	Пока Истина Цикл 
		Инд = Инд + 1;
		Если МакетУведомления.Области.Найти("Часть" + Формат(Инд, "ЧГ=")) = Неопределено Тогда 
			Прервать;
		КонецЕсли;
		ОбластьЧасть = МакетУведомления.ПолучитьОбласть("Часть" + Формат(Инд, "ЧГ="));
		ЗаполнитьЗначенияСвойств(ОбластьЧасть.Параметры, Титульный);
		Если Не ПечатнаяФорма.ПроверитьВывод(ОбластьЧасть) Тогда 
			ПоложитьПФВСписокЛистов(Объект, Листы, ПечатнаяФорма, НомСтр, "Лист " + НомСтр  + ". Уведомление");
			НомСтр = НомСтр + 1;
			ПечатнаяФорма = УведомлениеОСпецрежимахНалогообложения.НовыйПустойЛист();
		КонецЕсли;
		ПечатнаяФорма.Вывести(ОбластьЧасть);
	КонецЦикла;
	ПоложитьПФВСписокЛистов(Объект, Листы, ПечатнаяФорма, НомСтр, "Лист " + НомСтр  + ". Уведомление");
	
	ЛистДанные = Неопределено;
	Если ДанныеУведомления.Свойство("Лист2", ЛистДанные) Тогда 
		НомСтр = НомСтр + 1;
		ПечатнаяФорма = УведомлениеОСпецрежимахНалогообложения.НовыйПустойЛист();
		ПечатнаяФорма.ОриентацияСтраницы  = ОриентацияСтраницы.Ландшафт;
		
		Для Каждого Обл Из СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок("ШапкаКнигаПродаж,ЗаголовокЛист2,ОписаниеВыручкаКнигаПродаж,КнигаПродаж,ПодвалКнигаПродаж", ",") Цикл 
			ОбластьЧасть = МакетУведомления.ПолучитьОбласть(Обл);
			ЗаполнитьЗначенияСвойств(ОбластьЧасть.Параметры, ЛистДанные);
			Если Обл = "КнигаПродаж" Тогда 
				Для Каждого КЗ Из ЛистДанные Цикл 
					О = ОбластьЧасть.Области.Найти(КЗ.Ключ);
					Если О <> Неопределено 
						И О.ТипОбласти = ТипОбластиЯчеекТабличногоДокумента.Прямоугольник
						И О.СодержитЗначение = Истина Тогда 
						
						О.Значение = КЗ.Значение;
					КонецЕсли;
				КонецЦикла;
			КонецЕсли;
			ПечатнаяФорма.Вывести(ОбластьЧасть);
		КонецЦикла;
		
		Нумератор = 0;
		Для УО = 1 По 12 Цикл 
			Заполнено = Ложь;
			УОСтр = Формат(УО, "ЧЦ=2; ЧВН=");
			Для Гр = 3 По 12 Цикл 
				Заполнено = Заполнено Или ЗначениеЗаполнено(ЛистДанные["КнигаПродаж" + Формат(Гр, "ЧЦ=2; ЧВН=") + УОСтр]);
			КонецЦикла;
			
			Если Заполнено Тогда 
				Нумератор = Нумератор + 1;
				ПечатнаяФорма.Область("КнигаПродаж02" + УОСтр).Значение = Нумератор;
			Иначе
				Верх = ПечатнаяФорма.Область("КнигаПродаж03" + УОСтр).Верх;
				ПечатнаяФорма.УдалитьОбласть(ПечатнаяФорма.Область(Верх,,Верх), ТипСмещенияТабличногоДокумента.ПоВертикали);
			КонецЕсли;
		КонецЦикла;
		
		Верх = МакетУведомления.Область("ЗаголовокЛист2").Верх;
		ПоложитьПФВСписокЛистов(Объект, Листы, ПечатнаяФорма, НомСтр, "Лист " + НомСтр  + ". " + МакетУведомления.Область(Верх, 2, Верх, 2).Текст);
	КонецЕсли;
	
	Для Инд = 3 По 5 Цикл
		Если Не ДанныеУведомления.Свойство("Лист" + Инд, ЛистДанные) Тогда 
			Продолжить;
		КонецЕсли;
		
		ПечатнаяФорма = УведомлениеОСпецрежимахНалогообложения.НовыйПустойЛист();
		НомСтр = НомСтр + 1;
		Для Каждого Обл Из СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок("Шапка,ЗаголовокЛист" + Инд + ",ОписаниеВыручка,Выручка,Подвал", ",") Цикл 
			ОбластьЧасть = МакетУведомления.ПолучитьОбласть(Обл);
			ЗаполнитьЗначенияСвойств(ОбластьЧасть.Параметры, ЛистДанные);
			ПечатнаяФорма.Вывести(ОбластьЧасть);
		КонецЦикла;
		
		Для УО = 1 По 12 Цикл 
			Если Не ЗначениеЗаполнено(ПечатнаяФорма.Область("Период" + УО).Значение)
				И Не ЗначениеЗаполнено(ПечатнаяФорма.Область("Выручка" + УО).Значение) Тогда 
				
				Верх = ПечатнаяФорма.Область("Период" + УО).Верх;
				ПечатнаяФорма.УдалитьОбласть(ПечатнаяФорма.Область(Верх,,Верх+1), ТипСмещенияТабличногоДокумента.ПоВертикали);
			КонецЕсли;
		КонецЦикла;
		
		Верх = МакетУведомления.Область("ЗаголовокЛист" + Инд).Верх;
		ПоложитьПФВСписокЛистов(Объект, Листы, ПечатнаяФорма, НомСтр, "Лист " + НомСтр  + ". " + МакетУведомления.Область(Верх, 2, Верх, 2).Текст);
	КонецЦикла;
	Возврат Листы;
КонецФункции

Процедура ПоложитьПФВСписокЛистов(Объект, Листы, ПечатнаяФорма, НомСтр, Название) Экспорт 
	Лист = Новый Массив;
	Лист.Добавить(ПоместитьВоВременноеХранилище(ПечатнаяФорма));
	Лист.Добавить(Новый УникальныйИдентификатор);
	Лист.Добавить(Название);
	Листы.Добавить(Лист, Название);
	
	ПечатнаяФорма = УведомлениеОСпецрежимахНалогообложения.НовыйПустойЛист();
КонецПроцедуры

Функция ПроверитьДокументСВыводомВТаблицу(Объект, ИмяФормы, УникальныйИдентификатор) Экспорт 
	Если ИмяФормы = "ОсвобождениеОтНДСПриЕСХН_501" Тогда 
		Возврат ПроверитьДокументСВыводомВТаблицу_ОсвобождениеОтНДСПриЕСХН_501(УведомлениеОСпецрежимахНалогообложения.ДанныеУведомленияДляВыгрузки(Объект), УникальныйИдентификатор);
	ИначеЕсли ИмяФормы = "ОсвобождениеОтУплатыНДС_501" Или ИмяФормы = "ФормаОсвобождениеНДС" Тогда 
		Возврат ПроверитьДокументСВыводомВТаблицу_ОсвобождениеОтУплатыНДС_501(УведомлениеОСпецрежимахНалогообложения.ДанныеУведомленияДляВыгрузки(Объект), УникальныйИдентификатор);
	КонецЕсли;
КонецФункции

Функция ПроверитьДокументСВыводомВТаблицу_ОсвобождениеОтНДСПриЕСХН_501(Данные, УникальныйИдентификатор)
	ТаблицаОшибок = Новый СписокЗначений;
	УведомлениеОСпецрежимахНалогообложения.ПроверкаАктуальностиФормыПриВыгрузке(
		Данные.Объект.ИмяФормы, ТаблицаОшибок, ПолучитьТаблицуФорм());
	
	Титульная = Данные.ДанныеУведомления.Титульная;
	Если Не ЗначениеЗаполнено(Титульная.КодНО)
		Или СтрДлина(Титульная.КодНО) <> 4
		Или Не СтроковыеФункцииКлиентСервер.ТолькоЦифрыВСтроке(Титульная.КодНО) Тогда 
		ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
			"Не указан/неправильно указан код налогового органа", "Титульная", "КодНО"));
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(Титульная.ПРИЗНАК_НП_ПОДВАЛ) Тогда 
		ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
			"Не указан признак подписанта на титульной странице", "Титульная", "ПРИЗНАК_НП_ПОДВАЛ"));
	КонецЕсли;
	Если Не ЗначениеЗаполнено(Титульная.ДАТА_ПОДПИСИ) Тогда 
		ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
			"Не указана дата подписи", "Титульная", "ДАТА_ПОДПИСИ"));
	КонецЕсли;
	Если Не ЗначениеЗаполнено(Титульная.ДатаНачИспОсв) Тогда 
		ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
			"Не указана дата начала использования права на освобождение", "Титульная", "ДатаНачИспОсв"));
	КонецЕсли;
	
	Если РегламентированнаяОтчетностьПереопределяемый.ЭтоЮридическоеЛицо(Данные.Организация)
		Или Титульная.ПРИЗНАК_НП_ПОДВАЛ = "2" Тогда 
			
		Если Не ЗначениеЗаполнено(Данные.ПодписантИмя) Или Не ЗначениеЗаполнено(Данные.ПодписантФамилия) Тогда 
			ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
				"Не указан / неправильно указан подписант", "Титульная", "ФИО_РУКОВОДИТЕЛЯ_ПРЕДСТАВИТЕЛЯ"));
		КонецЕсли;
	КонецЕсли;
	Если Титульная.ПРИЗНАК_НП_ПОДВАЛ = "2" И Не ЗначениеЗаполнено(Титульная.НаимДок) Тогда 
		ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
			"Не указан документ представителя", "Титульная", "НаимДок"));
	КонецЕсли;
	
	Если РегламентированнаяОтчетностьПереопределяемый.ЭтоЮридическоеЛицо(Данные.Организация) Тогда 
		Если Не ЗначениеЗаполнено(Титульная.ИНН)
			Или Не РегламентированныеДанныеКлиентСервер.ИННСоответствуетТребованиям(Титульная.ИНН, Истина, "") Тогда 
			
			ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
				"Не заполнен/неправильно заполнен ИНН", "Титульная", "ИНН"));
		КонецЕсли;
		Если Не ЗначениеЗаполнено(Титульная.КПП)
			Или Не РегламентированныеДанныеКлиентСервер.КППСоответствуетТребованиям(Титульная.КПП, "") Тогда 
			
			ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
				"Не заполнен/неправильно заполнен КПП", "Титульная", "КПП"));
		КонецЕсли;
	Иначе
		Если Не ЗначениеЗаполнено(Титульная.ИНН)
			Или Не РегламентированныеДанныеКлиентСервер.ИННСоответствуетТребованиям(Титульная.ИНН, Ложь, "") Тогда 
			
			ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
				"Не заполнен/неправильно заполнен ИНН", "Титульная", "ИНН"));
		КонецЕсли;
	КонецЕсли;
	
	УведомлениеОСпецрежимахНалогообложения.ПроверкаДатВУведомлении(Данные, ТаблицаОшибок);
	УведомлениеОСпецрежимахНалогообложения.ПолнаяПроверкаЗаполненныхПоказателейНаСоотвествиеСписку(
		"СпискиВыбора2020_Подписант", "СхемаВыгрузки_ОсвобождениеОтНДСПриЕСХН",
		Данные.Объект.ИмяОтчета, ТаблицаОшибок, Данные);
	Возврат ТаблицаОшибок;
КонецФункции

Функция ПроверитьДокументСВыводомВТаблицу_ОсвобождениеОтУплатыНДС_501(Данные, УникальныйИдентификатор)
	ТаблицаОшибок = Новый СписокЗначений;
	УведомлениеОСпецрежимахНалогообложения.ПроверкаАктуальностиФормыПриВыгрузке(
		?(Данные.Объект.ИмяФормы = "ФормаОсвобождениеНДС", "ОсвобождениеОтУплатыНДС_501", Данные.Объект.ИмяФормы),
		ТаблицаОшибок, ПолучитьТаблицуФорм());
	
	Титульная = Данные.ДанныеУведомления.Титульная;
	Если Не ЗначениеЗаполнено(Титульная.КодНО)
		Или СтрДлина(Титульная.КодНО) <> 4
		Или Не СтроковыеФункцииКлиентСервер.ТолькоЦифрыВСтроке(Титульная.КодНО) Тогда 
		ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
			"Не указан/неправильно указан код налогового органа", "Титульная", "КодНО"));
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(Титульная.ПРИЗНАК_НП_ПОДВАЛ) Тогда 
		ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
			"Не указан признак подписанта на титульной странице", "Титульная", "ПРИЗНАК_НП_ПОДВАЛ"));
	КонецЕсли;
	Если Не ЗначениеЗаполнено(Титульная.ДАТА_ПОДПИСИ) Тогда 
		ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
			"Не указана дата подписи", "Титульная", "ДАТА_ПОДПИСИ"));
	КонецЕсли;
	Если Не ЗначениеЗаполнено(Титульная.ДатаНачИспОсв) Тогда 
		ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
			"Не указана дата начала использования права на освобождение", "Титульная", "ДатаНачИспОсв"));
	КонецЕсли;
	Если Не ЗначениеЗаполнено(Титульная.Дата1) Тогда 
		ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
			"Не указан год / месяц", "Титульная", "Дата1"));
	КонецЕсли;
	Если Не ЗначениеЗаполнено(Титульная.Дата2) Тогда 
		ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
			"Не указан год / месяц", "Титульная", "Дата2"));
	КонецЕсли;
	Если Не ЗначениеЗаполнено(Титульная.Дата3) Тогда 
		ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
			"Не указан год / месяц", "Титульная", "Дата3"));
	КонецЕсли;
	
	Если РегламентированнаяОтчетностьПереопределяемый.ЭтоЮридическоеЛицо(Данные.Организация)
		Или Титульная.ПРИЗНАК_НП_ПОДВАЛ = "2" Тогда 
			
		Если Не ЗначениеЗаполнено(Данные.ПодписантИмя) Или Не ЗначениеЗаполнено(Данные.ПодписантФамилия) Тогда 
			ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
				"Не указан / неправильно указан подписант", "Титульная", "ФИО_РУКОВОДИТЕЛЯ_ПРЕДСТАВИТЕЛЯ"));
		КонецЕсли;
	КонецЕсли;
	Если Титульная.ПРИЗНАК_НП_ПОДВАЛ = "2" И Не ЗначениеЗаполнено(Титульная.НаимДок) Тогда 
		ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
			"Не указан документ представителя", "Титульная", "НаимДок"));
	КонецЕсли;
	
	Если РегламентированнаяОтчетностьПереопределяемый.ЭтоЮридическоеЛицо(Данные.Организация) Тогда 
		Если Не ЗначениеЗаполнено(Титульная.ИНН)
			Или Не РегламентированныеДанныеКлиентСервер.ИННСоответствуетТребованиям(Титульная.ИНН, Истина, "") Тогда 
			
			ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
				"Не заполнен/неправильно заполнен ИНН", "Титульная", "ИНН"));
		КонецЕсли;
		Если Не ЗначениеЗаполнено(Титульная.КПП)
			Или Не РегламентированныеДанныеКлиентСервер.КППСоответствуетТребованиям(Титульная.КПП, "") Тогда 
			
			ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
				"Не заполнен/неправильно заполнен КПП", "Титульная", "КПП"));
		КонецЕсли;
	Иначе
		Если Не ЗначениеЗаполнено(Титульная.ИНН)
			Или Не РегламентированныеДанныеКлиентСервер.ИННСоответствуетТребованиям(Титульная.ИНН, Ложь, "") Тогда 
			
			ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
				"Не заполнен/неправильно заполнен ИНН", "Титульная", "ИНН"));
		КонецЕсли;
	КонецЕсли;
	
	УведомлениеОСпецрежимахНалогообложения.ПроверкаДатВУведомлении(Данные, ТаблицаОшибок);
	УведомлениеОСпецрежимахНалогообложения.ПолнаяПроверкаЗаполненныхПоказателейНаСоотвествиеСписку(
		"СпискиВыбора2020_Подписант", "СхемаВыгрузки_ОсвобождениеОтУплатыНДС",
		Данные.Объект.ИмяОтчета, ТаблицаОшибок, Данные);
	Возврат ТаблицаОшибок;
КонецФункции

Функция ЭлектронноеПредставление_ОсвобождениеОтНДСПриЕСХН_501(Объект, УникальныйИдентификатор)
	СведенияЭлектронногоПредставления = УведомлениеОСпецрежимахНалогообложения.СведенияЭлектронногоПредставления();
	
	ДанныеУведомления = УведомлениеОСпецрежимахНалогообложения.ДанныеУведомленияДляВыгрузки(Объект);
	Ошибки = ПроверитьДокументСВыводомВТаблицу_ОсвобождениеОтНДСПриЕСХН_501(ДанныеУведомления, УникальныйИдентификатор);
	УведомлениеОСпецрежимахНалогообложения.СообщитьОшибкиПриПроверкеВыгрузки(Объект, Ошибки, ДанныеУведомления);
	
	ОсновныеСведения = Документы.УведомлениеОСпецрежимахНалогообложения.НачальнаяИнициализацияОбщихРеквизитовВыгрузки(Объект);
	ОсновныеСведения.Вставить("ИдФайл", 
		Документы.УведомлениеОСпецрежимахНалогообложения.ИдентификаторФайлаЭлектронногоПредставления("SR_PRAVOSVNDSESN", ОсновныеСведения));
	
	СтруктураВыгрузки = Документы.УведомлениеОСпецрежимахНалогообложения.ИзвлечьСтруктуруXMLУведомления(
		Объект.ИмяОтчета, "СхемаВыгрузки_ОсвобождениеОтНДСПриЕСХН");
	УведомлениеОСпецрежимахНалогообложения.ТиповоеЗаполнениеДанными(ДанныеУведомления, ОсновныеСведения, СтруктураВыгрузки);
	УведомлениеОСпецрежимахНалогообложения.ВыгрузитьДеревоВТаблицу(СтруктураВыгрузки, ОсновныеСведения, СведенияЭлектронногоПредставления);
	Возврат СведенияЭлектронногоПредставления;
КонецФункции

Функция ЭлектронноеПредставление_ОсвобождениеОтУплатыНДС_501(Объект, УникальныйИдентификатор)
	СведенияЭлектронногоПредставления = УведомлениеОСпецрежимахНалогообложения.СведенияЭлектронногоПредставления();
	
	ДанныеУведомления = УведомлениеОСпецрежимахНалогообложения.ДанныеУведомленияДляВыгрузки(Объект);
	Ошибки = ПроверитьДокументСВыводомВТаблицу_ОсвобождениеОтУплатыНДС_501(ДанныеУведомления, УникальныйИдентификатор);
	УведомлениеОСпецрежимахНалогообложения.СообщитьОшибкиПриПроверкеВыгрузки(Объект, Ошибки, ДанныеУведомления);
	
	ОсновныеСведения = Документы.УведомлениеОСпецрежимахНалогообложения.НачальнаяИнициализацияОбщихРеквизитовВыгрузки(Объект);
	ОсновныеСведения.Вставить("ИдФайл", 
		Документы.УведомлениеОСпецрежимахНалогообложения.ИдентификаторФайлаЭлектронногоПредставления("SR_PRAVOSVNDS", ОсновныеСведения));
	
	СтруктураВыгрузки = Документы.УведомлениеОСпецрежимахНалогообложения.ИзвлечьСтруктуруXMLУведомления(
		Объект.ИмяОтчета, "СхемаВыгрузки_ОсвобождениеОтУплатыНДС");
	Титульная = ДанныеУведомления.ДанныеУведомления.Титульная;
	Титульная.Вставить("Месяц1", Формат(Титульная.Дата1, "ДФ=MM"));
	Титульная.Вставить("Год1", Формат(Титульная.Дата1, "ДФ=yyyy"));
	Титульная.Вставить("Месяц2", Формат(Титульная.Дата2, "ДФ=MM"));
	Титульная.Вставить("Год2", Формат(Титульная.Дата2, "ДФ=yyyy"));
	Титульная.Вставить("Месяц3", Формат(Титульная.Дата3, "ДФ=MM"));
	Титульная.Вставить("Год3", Формат(Титульная.Дата3, "ДФ=yyyy"));
	УведомлениеОСпецрежимахНалогообложения.ТиповоеЗаполнениеДанными(ДанныеУведомления, ОсновныеСведения, СтруктураВыгрузки);
	УведомлениеОСпецрежимахНалогообложения.ВыгрузитьДеревоВТаблицу(СтруктураВыгрузки, ОсновныеСведения, СведенияЭлектронногоПредставления);
	Возврат СведенияЭлектронногоПредставления;
КонецФункции

#КонецОбласти
#КонецЕсли