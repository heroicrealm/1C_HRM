#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

#Область ДляВызоваИзДругихПодсистем

// СтандартныеПодсистемы.УправлениеДоступом

// См. УправлениеДоступом.ЗаполнитьНаборыЗначенийДоступа.
Процедура ЗаполнитьНаборыЗначенийДоступа(Таблица) Экспорт
	
	ЗарплатаКадры.ЗаполнитьНаборыПоОрганизации(ЭтотОбъект, Таблица, "Организация");
	
КонецПроцедуры

// Конец СтандартныеПодсистемы.УправлениеДоступом

#КонецОбласти

#КонецОбласти

#Область ОбработчикиСобытий

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)
	
	Если ТипЗнч(ДанныеЗаполнения) = Тип("Структура") Тогда
	
		Если ДанныеЗаполнения.Свойство("ЗаполнениеПоВедомости") Тогда
			
			ЗаполнитьЗначенияСвойств(ЭтотОбъект, ДанныеЗаполнения.ЗаполнениеПоВедомости);
			НоваяСтрока = Ведомости.Добавить();
			НоваяСтрока.Ведомость = ДанныеЗаполнения.ЗаполнениеПоВедомости.Ведомость;
			
			ЗапрашиваемыеЗначения = Новый Структура;
			ЗапрашиваемыеЗначения.Вставить("Организация", 		"Организация");
			ЗапрашиваемыеЗначения.Вставить("Ответственный",		"Ответственный");
			ЗапрашиваемыеЗначения.Вставить("ГлавныйБухгалтер", 	"ГлавныйБухгалтер");
			ЗапрашиваемыеЗначения.Вставить("Бухгалтер", 		"Бухгалтер");
			ЗарплатаКадры.ЗаполнитьЗначенияВФорме(ЭтотОбъект, ЗапрашиваемыеЗначения, ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве("Организация"));
			
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Если ЗарплатаКадры.ОтключитьБизнесЛогикуПриЗаписи(ЭтотОбъект) Тогда
		Возврат;
	КонецЕсли;
	
	РеквизитыПлатежногоПоручения = РеквизитыПлатежногоПоручения();
	
КонецПроцедуры

Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	
	ПроведениеСервер.ПодготовитьНаборыЗаписейКРегистрацииДвижений(ЭтотОбъект);
	
	ДанныеДляПроведения = ДанныеДляПроведения();
	
	УчетНДФЛ.СформироватьПеречисленныйНалог(Ссылка, Движения, Отказ, Организация, ДатаПлатежа,
						ДанныеДляПроведения.ПеречисленныйНалог, ДанныеДляПроведения.ФизическиеЛица, РегистрацияВНалоговомОргане, , ?(СПревышения, Перечисления.НДФЛСтавки.Ставка15, Неопределено));
	
	Если СПревышения Тогда
		ДанныеДляПроведения.ПеречисленныйНалог.Колонки.Сумма.Имя = "СуммаСПревышения";
	КонецЕсли;
	УчетНДФЛ.СформироватьНДФЛПеречисленный(Движения, Отказ, ДанныеДляПроведения.ПеречисленныйНалог);
	
	Если ОбщегоНазначения.ПодсистемаСуществует("ЗарплатаКадрыПриложения.РасчетыСБюджетомПоНДФЛ") Тогда
		Модуль = ОбщегоНазначения.ОбщийМодуль("РасчетыСБюджетомПоНДФЛ");
		Модуль.РасчетыСБюджетомПоНДФЛЗарегистрироватьНДФЛПеречисленный(Движения, Отказ);
	КонецЕсли;
	
КонецПроцедуры

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	
	ЗарплатаКадры.ПроверитьКорректностьДаты(Ссылка, ДатаПлатежа, "Объект.ДатаПлатежа", Отказ, НСтр("ru='Дата платежа'"), , , Ложь);
	ЗарплатаКадры.ПроверитьКорректностьДаты(Ссылка, ПлатежноеПоручениеДата, "Объект.ПлатежноеПоручениеДата", Отказ, НСтр("ru='Дата платежного поручения'"), , , Ложь);
	
	ПроверкаЗаполненияФинансирования = Документы.ПеречислениеНДФЛВБюджет.РежимПроверкиЗаполненияФинансирования();
	
	Если Не ПроверкаЗаполненияФинансирования.СтатьяФинансирования Тогда
		ОбщегоНазначенияКлиентСервер.УдалитьЗначениеИзМассива(ПроверяемыеРеквизиты, "СтатьяФинансирования");
	КонецЕсли;
	
	Если Не ПроверкаЗаполненияФинансирования.СтатьяРасходов Тогда
		ОбщегоНазначенияКлиентСервер.УдалитьЗначениеИзМассива(ПроверяемыеРеквизиты, "СтатьяРасходов");
	КонецЕсли;
	
КонецПроцедуры

Процедура ПриКопировании(ОбъектКопирования)
	
	Ведомости.Очистить();
	Сумма = 0;
	ДатаПлатежа 			= Неопределено;
	ПлатежноеПоручениеДата 	= Неопределено;
	СтатьяФинансирования 	= Неопределено;
	СтатьяРасходов 			= Неопределено;
	ПлатежноеПоручениеНомер = "";
	РеквизитыПлатежногоПоручения = "";
	
КонецПроцедуры


#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция РеквизитыПлатежногоПоручения()
	
	РеквизитыПлатежногоПорученияПоДатеНомеру =  "";
	
	Если ЗначениеЗаполнено(ПлатежноеПоручениеНомер) Или ЗначениеЗаполнено(ПлатежноеПоручениеДата) Тогда
		РеквизитыПлатежногоПорученияПоДатеНомеру = 
			СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			 	НСтр("ru = '№ %1 от %2'"), 
				?(ЗначениеЗаполнено(ПлатежноеПоручениеНомер), ПлатежноеПоручениеНомер, НСтр("ru = 'б/н'")),  
				Формат(ПлатежноеПоручениеДата, "ДЛФ=D"));
	КонецЕсли;		

	Возврат РеквизитыПлатежногоПорученияПоДатеНомеру
	
КонецФункции	

Функция ПеречисленныйНалог()
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ПеречислениеНДФЛ.ДатаПлатежа КАК Период,
	|	ПеречислениеНДФЛ.Сумма КАК Сумма,
	|	ПеречислениеНДФЛ.МесяцНалоговогоПериода КАК МесяцНалоговогоПериода,
	|	ПеречислениеНДФЛ.Организация КАК Организация,
	|	ПеречислениеНДФЛ.ПлатежноеПоручениеНомер КАК ПлатежноеПоручениеНомер,
	|	ПеречислениеНДФЛ.ПлатежноеПоручениеДата КАК ПлатежноеПоручениеДата,
	|	ПеречислениеНДФЛ.СтатьяФинансирования КАК СтатьяФинансирования,
	|	ПеречислениеНДФЛ.СтатьяРасходов КАК СтатьяРасходов,
	|	ПеречислениеНДФЛ.РегистрацияВНалоговомОргане КАК РегистрацияВНалоговомОргане
	|ИЗ
	|	Документ.ПеречислениеНДФЛВБюджет КАК ПеречислениеНДФЛ
	|ГДЕ
	|	ПеречислениеНДФЛ.Ссылка = &Ссылка";
	
	Возврат Запрос.Выполнить().Выгрузить();

КонецФункции

Функция ДанныеДляПроведения()

	ДанныеДляПроведения = Новый Структура("ПеречисленныйНалог, ФизическиеЛица");
	
	ДанныеДляПроведения.ПеречисленныйНалог = ПеречисленныйНалог();
	
	Если Ведомости.Количество() > 0 Тогда
		
		ВедомостиДокумента = Ведомости.ВыгрузитьКолонку("Ведомость");
		
		Запрос = Новый Запрос;
		Запрос.УстановитьПараметр("Ведомости",   ВедомостиДокумента);
		Запрос.УстановитьПараметр("РегистрацияВНалоговомОргане",   РегистрацияВНалоговомОргане);
		
		Запрос.Текст = 
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	НДФЛКПеречислению.ФизическоеЛицо КАК ФизическоеЛицо
		|ИЗ
		|	РегистрНакопления.НДФЛКПеречислению КАК НДФЛКПеречислению
		|ГДЕ
		|	НДФЛКПеречислению.Регистратор В(&Ведомости)
		|	И НДФЛКПеречислению.РегистрацияВНалоговомОргане = &РегистрацияВНалоговомОргане";
		ДанныеДляПроведения.ФизическиеЛица = Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("ФизическоеЛицо");
		
	КонецЕсли;
	
	Возврат ДанныеДляПроведения;
	
КонецФункции


#КонецОбласти

#Иначе
ВызватьИсключение НСтр("ru = 'Недопустимый вызов объекта на клиенте.'");
#КонецЕсли