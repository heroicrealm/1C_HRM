#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда
	
#Область ПрограммныйИнтерфейс

// СтандартныеПодсистемы.ВерсионированиеОбъектов

// Определяет настройки объекта для подсистемы ВерсионированиеОбъектов.
//
// Параметры:
//  Настройки - Структура - настройки подсистемы.
Процедура ПриОпределенииНастроекВерсионированияОбъектов(Настройки) Экспорт

КонецПроцедуры

// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов

#Область ДляВызоваИзДругихПодсистем

// СтандартныеПодсистемы.УправлениеДоступом

// См. УправлениеДоступомПереопределяемый.ПриЗаполненииСписковСОграничениемДоступа.
Процедура ПриЗаполненииОграниченияДоступа(Ограничение) Экспорт
	Ограничение.Текст =
	"РазрешитьЧтениеИзменение
	|ГДЕ
	|	ЗначениеРазрешено(Организация)";
КонецПроцедуры

// Конец СтандартныеПодсистемы.УправлениеДоступом

#КонецОбласти

#КонецОбласти


#Область СлужебныеПроцедурыИФункции

Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт
	
	УчетНДФЛРасширенный.ДобавитьКомандуПечатиРеестраПеречисленногоНалога(КомандыПечати)
	
КонецПроцедуры

Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ПФ_MXL_РеестрПеречисленныхСумм") Тогда
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, 
			"ПФ_MXL_РеестрПеречисленныхСумм", 
			НСтр("ru = 'Реестр перечисленных сумм'"),
			ПечатьРеестра(МассивОбъектов, ОбъектыПечати), , "ОбщийМакет.ПФ_MXL_РеестрПеречисленныхСуммНДФЛ");	
	КонецЕсли;
	
КонецПроцедуры

Функция ПечатьРеестра(МассивОбъектов, ОбъектыПечати)
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("МассивОбъектов", МассивОбъектов);
	
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ПеречислениеНДФЛВБюджет.Организация,
	|	ПеречислениеНДФЛВБюджет.МесяцНалоговогоПериода,
	|	ПеречислениеНДФЛВБюджет.РегистрацияВНалоговомОргане,
	|	ПеречислениеНДФЛВБюджет.ДатаПлатежа,
	|	ПеречислениеНДФЛВБюджет.ПлатежноеПоручениеНомер,
	|	ПеречислениеНДФЛВБюджет.ПлатежноеПоручениеДата,
	|	ПеречислениеНДФЛВБюджет.ГлавныйБухгалтер,
	|	ПеречислениеНДФЛВБюджет.Бухгалтер
	|ИЗ
	|	Документ.ПеречислениеНДФЛВБюджет КАК ПеречислениеНДФЛВБюджет
	|ГДЕ
	|	ПеречислениеНДФЛВБюджет.Ссылка В(&МассивОбъектов)";
				   
	ТабличныйДокумент = УчетНДФЛ.РеестрПеречисленныхСуммНалога(Запрос.Выполнить().Выгрузить());
	
	УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабличныйДокумент, 1, ОбъектыПечати, ?(ЗначениеЗаполнено(МассивОбъектов), МассивОбъектов[0], Документы.ПеречислениеНДФЛВБюджет.ПустаяСсылка()));
	
	Возврат ТабличныйДокумент;
	
КонецФункции

Функция РежимПроверкиЗаполненияФинансирования() Экспорт

	РежимПроверки = Новый Структура("СтатьяФинансирования,СтатьяРасходов");
	
	ПроверятьЗаполнение = ПолучитьФункциональнуюОпцию("ПроверятьЗаполнениеФинансированияВВедомостях");
	
	// Проверка заполнения выполняется если
	// включена проверка заполнения для ведомостей
	// включен учет ВестиРасчетыСБюджетомПоНДФЛ
	// и ведется учет по статья.
	РежимПроверки.СтатьяФинансирования = ПроверятьЗаполнение 
		И ПолучитьФункциональнуюОпцию("ИспользоватьСтатьиФинансированияЗарплатаРасширенный")
		И ПолучитьФункциональнуюОпцию("ВестиРасчетыСБюджетомПоНДФЛ");
	РежимПроверки.СтатьяРасходов = ПроверятьЗаполнение
		И ПолучитьФункциональнуюОпцию("РаботаВБюджетномУчреждении")
		И ПолучитьФункциональнуюОпцию("ВестиРасчетыСБюджетомПоНДФЛ");

	Возврат РежимПроверки;
		
КонецФункции

Процедура ЗаполнитьРегистрациюВНалоговомОргане(ПараметрыОбновления = Неопределено) Экспорт

	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ПеречислениеНДФЛВБюджет.Ссылка КАК Ссылка
	|ПОМЕСТИТЬ ВТДокументыКОбработке
	|ИЗ
	|	Документ.ПеречислениеНДФЛВБюджет КАК ПеречислениеНДФЛВБюджет
	|ГДЕ
	|	ПеречислениеНДФЛВБюджет.Проведен
	|	И ПеречислениеНДФЛВБюджет.РегистрацияВНалоговомОргане = ЗНАЧЕНИЕ(Справочник.РегистрацииВНалоговомОргане.ПустаяСсылка)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	РегистрацииДокументов.Ссылка КАК Ссылка,
	|	МАКСИМУМ(РегистрацииДокументов.РегистрацияВНалоговомОргане) КАК РегистрацияВНалоговомОргане
	|ИЗ
	|	(ВЫБРАТЬ РАЗЛИЧНЫЕ
	|		ДокументыКОбработке.Ссылка КАК Ссылка,
	|		ДвиженияПоНДФЛ.РегистрацияВНалоговомОргане КАК РегистрацияВНалоговомОргане
	|	ИЗ
	|		ВТДокументыКОбработке КАК ДокументыКОбработке
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.РасчетыНалоговыхАгентовСБюджетомПоНДФЛ КАК ДвиженияПоНДФЛ
	|			ПО ДокументыКОбработке.Ссылка = ДвиженияПоНДФЛ.Регистратор
	|				И (ДвиженияПоНДФЛ.РегистрацияВНалоговомОргане <> ЗНАЧЕНИЕ(Справочник.РегистрацииВНалоговомОргане.ПустаяСсылка))
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ РАЗЛИЧНЫЕ
	|		ДокументыКОбработке.Ссылка,
	|		ДвиженияПоНДФЛ.РегистрацияВНалоговомОргане
	|	ИЗ
	|		ВТДокументыКОбработке КАК ДокументыКОбработке
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.УплатаНДФЛНалоговымиАгентамиКРаспределению КАК ДвиженияПоНДФЛ
	|			ПО ДокументыКОбработке.Ссылка = ДвиженияПоНДФЛ.Регистратор
	|				И (ДвиженияПоНДФЛ.РегистрацияВНалоговомОргане <> ЗНАЧЕНИЕ(Справочник.РегистрацииВНалоговомОргане.ПустаяСсылка))) КАК РегистрацииДокументов
	|
	|СГРУППИРОВАТЬ ПО
	|	РегистрацииДокументов.Ссылка";
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ОбновлениеИнформационнойБазыЗарплатаКадрыБазовый.УстановитьПараметрОбновления(ПараметрыОбновления, "ОбработкаЗавершена", Ложь);
	Если РезультатЗапроса.Пустой() Тогда
		ОбновлениеИнформационнойБазыЗарплатаКадрыБазовый.УстановитьПараметрОбновления(ПараметрыОбновления, "ОбработкаЗавершена", Истина);
		Возврат;
	КонецЕсли;
	
	Выборка = РезультатЗапроса.Выбрать();
	Пока Выборка.Следующий() Цикл
		
		Если Не ОбновлениеИнформационнойБазыЗарплатаКадрыБазовый.ПодготовитьОбновлениеДанных(ПараметрыОбновления, "Документ.ПеречислениеНДФЛВБюджет", "Ссылка", Выборка.Ссылка) Тогда
			Продолжить;
		КонецЕсли;
		
		ДокументОбъект = Выборка.Ссылка.ПолучитьОбъект();
		ДокументОбъект.РегистрацияВНалоговомОргане = Выборка.РегистрацияВНалоговомОргане;
		
		ОбновлениеИнформационнойБазы.ЗаписатьОбъект(ДокументОбъект);
		ОбновлениеИнформационнойБазыЗарплатаКадрыБазовый.ЗавершитьОбновлениеДанных(ПараметрыОбновления);
		
	КонецЦикла;

КонецПроцедуры


#КонецОбласти

#КонецЕсли
