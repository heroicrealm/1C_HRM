#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)
	
	ОбъектОснование = ДанныеЗаполнения;
	
	Если ТипЗнч(ОбъектОснование) = Тип("СправочникСсылка.Сотрудники") Тогда
		
		ЗарплатаКадры.ЗаполнитьПоОснованиюСотрудником(ЭтотОбъект, ОбъектОснование, , Истина);
		
		ДоговорГПХ = СотрудникиФормыРасширенный.ДоговорГПХНеЗакрытыйАктом(ОбъектОснование);
		Если ЗначениеЗаполнено(ДоговорГПХ) Тогда
			ОбъектОснование = ДоговорГПХ;
		КонецЕсли; 
		
	КонецЕсли;
	
	Если ТипЗнч(ОбъектОснование) = Тип("ДокументСсылка.ДоговорАвторскогоЗаказа")
		Или ТипЗнч(ОбъектОснование) = Тип("ДокументСсылка.ДоговорРаботыУслуги") Тогда
		
		Если Не ОбъектОснование.СпособОплаты = Перечисления.СпособыОплатыПоДоговоруГПХ.ПоАктамВыполненныхРабот Тогда
			ВызватьИсключение НСтр("ru = 'По этому договору не предусмотрена оплата на основании акта выполненных работ.'");
		КонецЕсли;
		
		Если Не ОбъектОснование.Проведен Тогда
			ВызватьИсключение НСтр("ru = 'Ввод на основании непроведенного документа невозможен.'");
		КонецЕсли;
		
		СвойстваЗаполнения = "Организация, Сотрудник, СтатьяФинансирования, СтатьяРасходов, ОтношениеКЕНВД, Подразделение, Территория, СпособОтраженияЗарплатыВБухучете, СуммаВычета, СуммаЕНВД";
		
		ЗаполнитьЗначенияСвойств(ЭтотОбъект, ОбъектОснование, СвойстваЗаполнения); 
		Договор = ОбъектОснование.Ссылка;
		Результат = ОбъектОснование.Сумма;
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	
	ПроведениеСервер.ПодготовитьНаборыЗаписейКРегистрацииДвижений(ЭтотОбъект);
	ДанныеДляПроведения = ДанныеДляПроведения();
	
	Для Каждого Строка Из ДанныеДляПроведения Цикл
		
		Если Не Строка.ОплатаПоАктам Тогда
			
			ТекстОшибки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = 'В документе %1 должен быть указан вариант оплаты ""по актам выполненных работ"".'"), Строка.Договор);
			ВызватьИсключение ТекстОшибки;
			
		ИначеЕсли Не Строка.ДоговорПроведен Тогда
			
			ТекстОшибки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = 'Документ %1 еще не проведен, акт выполненных работ можно вводить только на основании проведенного документа.'"), Строка.Договор);
			ВызватьИсключение ТекстОшибки;
			
		КонецЕсли;
		
		НоваяСтрока = Движения.ПлановыеНачисленияПоДоговорам.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, Строка);
	КонецЦикла;
	
	Движения.ПлановыеНачисленияПоДоговорам.Записывать = Истина;
	
КонецПроцедуры

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	
	ЗарплатаКадры.ПроверитьДатуВыплаты(ЭтотОбъект, Отказ);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// Получает данные для формирования движений.
// Возвращает таблицу значений - данные, необходимые для формирования плановых начислений по договорам.
//
Функция ДанныеДляПроведения()
	
	НДФЛДоговорыРаботыУслуги = УчетНДФЛ.ДоходыНДФЛПоВидуОсобыхНачислений(Перечисления.ВидыОсобыхНачисленийИУдержаний.ДоговорРаботыУслуги);
	КодДохода = НДФЛДоговорыРаботыУслуги[0];
	
	ВычетыКДоходам = УчетНДФЛ.ВычетыКДоходам(Год(МесяцНачисления));
	КодВычета = ВычетыКДоходам[КодДохода][0];
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Запрос.УстановитьПараметр("КодГПХдляСтраховыхВзносов", УчетСтраховыхВзносов.ВидДоходаДляДоговораНаВыполнениеРабот(Ложь));
	Запрос.УстановитьПараметр("КодГПХдляСтраховыхВзносовОблагаетсяФСС_НС", УчетСтраховыхВзносов.ВидДоходаДляДоговораНаВыполнениеРабот(Истина));
	Запрос.УстановитьПараметр("КодДохода", КодДохода);
	Запрос.УстановитьПараметр("КодВычета", КодВычета);
	
	РаботаВХозрасчетнойОрганизации = ПолучитьФункциональнуюОпцию("РаботаВХозрасчетнойОрганизации");
	Если РаботаВХозрасчетнойОрганизации Тогда
		ОписаниеСтатейРасходов = ЗарплатаКадры.СтатьиРасходовПоСпособамРасчетовСФизическимиЛицами();
		ОплатаТруда = ОписаниеСтатейРасходов[Перечисления.СпособыРасчетовСФизическимиЛицами.ОплатаТруда];
		РасчетыСКонтрагентами = ОписаниеСтатейРасходов[Перечисления.СпособыРасчетовСФизическимиЛицами.РасчетыСКонтрагентами];
	Иначе
		ОплатаТруда = Справочники.СтатьиРасходовЗарплата.ПустаяСсылка();
		РасчетыСКонтрагентами = Справочники.СтатьиРасходовЗарплата.ПустаяСсылка();
	КонецЕсли;
	
	Запрос.УстановитьПараметр("РаботаВХозрасчетнойОрганизации", РаботаВХозрасчетнойОрганизации);
	Запрос.УстановитьПараметр("ОплатаТруда", ОплатаТруда);
	Запрос.УстановитьПараметр("РасчетыСКонтрагентами", РасчетыСКонтрагентами);
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	АктВыполненныхРабот.Организация КАК Организация,
	|	АктВыполненныхРабот.МесяцНачисления КАК МесяцНачисления,
	|	АктВыполненныхРабот.Сотрудник КАК Сотрудник,
	|	АктВыполненныхРабот.Договор КАК Договор,
	|	ВЫБОР
	|		КОГДА ДоговорРаботыУслуги.Номер ЕСТЬ НЕ NULL 
	|			ТОГДА &КодДохода
	|		КОГДА ДоговорАвторскогоЗаказа.Номер ЕСТЬ НЕ NULL 
	|			ТОГДА ДоговорАвторскогоЗаказа.ВидАвторскогоДоговора.КодДоходаНДФЛ
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.ВидыДоходовНДФЛ.ПустаяСсылка)
	|	КОНЕЦ КАК КодДохода,
	|	ВЫБОР
	|		КОГДА ДоговорРаботыУслуги.Номер ЕСТЬ НЕ NULL 
	|			ТОГДА ВЫБОР
	|					КОГДА ДоговорРаботыУслуги.ОблагаетсяФСС_НС
	|						ТОГДА &КодГПХдляСтраховыхВзносовОблагаетсяФСС_НС
	|					ИНАЧЕ &КодГПХдляСтраховыхВзносов
	|				КОНЕЦ
	|		КОГДА ДоговорАвторскогоЗаказа.Номер ЕСТЬ НЕ NULL 
	|			ТОГДА ДоговорАвторскогоЗаказа.ВидАвторскогоДоговора.КодДоходаСтраховыеВзносы
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.ВидыДоходовПоСтраховымВзносам.ПустаяСсылка)
	|	КОНЕЦ КАК КодДоходаСтраховыеВзносы,
	|	ВЫБОР
	|		КОГДА ДоговорРаботыУслуги.Номер ЕСТЬ НЕ NULL 
	|			ТОГДА &КодВычета
	|		КОГДА ДоговорАвторскогоЗаказа.Номер ЕСТЬ НЕ NULL 
	|			ТОГДА ДоговорАвторскогоЗаказа.КодВычета
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.ВидыДоходовНДФЛ.ПустаяСсылка)
	|	КОНЕЦ КАК КодВычета,
	|	АктВыполненныхРабот.СпособОтраженияЗарплатыВБухучете КАК СпособОтраженияЗарплатыВБухучете,
	|	АктВыполненныхРабот.ОтношениеКЕНВД КАК ОтношениеКЕНВД,
	|	АктВыполненныхРабот.СуммаЕНВД КАК СуммаЕНВД,
	|	АктВыполненныхРабот.Подразделение КАК Подразделение,
	|	АктВыполненныхРабот.Территория КАК Территория,
	|	АктВыполненныхРабот.Договор.ДатаНачала КАК ДатаНачала,
	|	АктВыполненныхРабот.Договор.ДатаОкончания КАК ДатаОкончания,
	|	ЕСТЬNULL(АктВыполненныхРабот.Договор.ЗаключенСоСтудентомРаботающимВСтудотряде, ЛОЖЬ) КАК ЗаключенСоСтудентомРаботающимВСтудотряде,
	|	АктВыполненныхРабот.Результат КАК Сумма,
	|	АктВыполненныхРабот.СуммаВычета КАК СуммаВычета,
	|	АктВыполненныхРабот.СтатьяФинансирования КАК СтатьяФинансирования,
	|	ВЫБОР
	|		КОГДА НЕ &РаботаВХозрасчетнойОрганизации
	|			ТОГДА АктВыполненныхРабот.СтатьяРасходов
	|		ИНАЧЕ ВЫБОР
	|				КОГДА ВЫБОР
	|						КОГДА ДоговорРаботыУслуги.Номер ЕСТЬ НЕ NULL 
	|							ТОГДА ДоговорРаботыУслуги.СпособРасчетовСФизическимиЛицами
	|						КОГДА ДоговорАвторскогоЗаказа.Номер ЕСТЬ НЕ NULL 
	|							ТОГДА ДоговорАвторскогоЗаказа.СпособРасчетовСФизическимиЛицами
	|						ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.СпособыРасчетовСФизическимиЛицами.ПустаяСсылка)
	|					КОНЕЦ = ЗНАЧЕНИЕ(Перечисление.СпособыРасчетовСФизическимиЛицами.РасчетыСКонтрагентами)
	|					ТОГДА &РасчетыСКонтрагентами
	|				ИНАЧЕ &ОплатаТруда
	|			КОНЕЦ
	|	КОНЕЦ КАК СтатьяРасходов,
	|	ВЫБОР
	|		КОГДА ДоговорАвторскогоЗаказа.СтавкаНДФЛ ЕСТЬ NULL
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.КатегорииДоходовНДФЛ.ПустаяСсылка)
	|		КОГДА ДоговорАвторскогоЗаказа.СтавкаНДФЛ = ЗНАЧЕНИЕ(Перечисление.НДФЛСтавки.Ставка03)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.КатегорииДоходовНДФЛ.АвторскиеРоялтиПоСтавке03)
	|		КОГДА ДоговорАвторскогоЗаказа.СтавкаНДФЛ = ЗНАЧЕНИЕ(Перечисление.НДФЛСтавки.Ставка05)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.КатегорииДоходовНДФЛ.АвторскиеРоялтиПроцентыПоСтавке05)
	|		КОГДА ДоговорАвторскогоЗаказа.СтавкаНДФЛ = ЗНАЧЕНИЕ(Перечисление.НДФЛСтавки.Ставка06)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.КатегорииДоходовНДФЛ.АвторскиеРоялтиПоСтавке06)
	|		КОГДА ДоговорАвторскогоЗаказа.СтавкаНДФЛ = ЗНАЧЕНИЕ(Перечисление.НДФЛСтавки.Ставка07)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.КатегорииДоходовНДФЛ.АвторскиеРоялтиПроцентыПоСтавке07)
	|		КОГДА ДоговорАвторскогоЗаказа.СтавкаНДФЛ = ЗНАЧЕНИЕ(Перечисление.НДФЛСтавки.Ставка10)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.КатегорииДоходовНДФЛ.АвторскиеРоялтиПроцентыПоСтавке10)
	|		КОГДА ДоговорАвторскогоЗаказа.СтавкаНДФЛ = ЗНАЧЕНИЕ(Перечисление.НДФЛСтавки.Ставка15)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.КатегорииДоходовНДФЛ.АвторскиеРоялтиПроцентыПоСтавке15)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.КатегорииДоходовНДФЛ.ПустаяСсылка)
	|	КОНЕЦ КАК КатегорияДохода,
	|	АктВыполненныхРабот.Ссылка КАК ДоговорАкт,
	|	АктВыполненныхРабот.Договор.Проведен КАК ДоговорПроведен,
	|	ВЫБОР
	|		КОГДА АктВыполненныхРабот.Договор.СпособОплаты = ЗНАЧЕНИЕ(Перечисление.СпособыОплатыПоДоговоруГПХ.ПоАктамВыполненныхРабот)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ОплатаПоАктам,
	|	АктВыполненныхРабот.ПланируемаяДатаВыплаты КАК ПланируемаяДатаВыплаты,
	|	АктВыполненныхРабот.ФизическоеЛицо КАК ФизическоеЛицо
	|ИЗ
	|	Документ.АктПриемкиВыполненныхРаботОказанныхУслуг КАК АктВыполненныхРабот
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ДоговорРаботыУслуги КАК ДоговорРаботыУслуги
	|		ПО АктВыполненныхРабот.Договор = ДоговорРаботыУслуги.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ДоговорАвторскогоЗаказа КАК ДоговорАвторскогоЗаказа
	|		ПО АктВыполненныхРабот.Договор = ДоговорАвторскогоЗаказа.Ссылка
	|ГДЕ
	|	АктВыполненныхРабот.Ссылка = &Ссылка";
	
	РезультатыЗапроса = Запрос.Выполнить();
	
	Возврат РезультатыЗапроса.Выгрузить();
	
КонецФункции

#КонецОбласти

#Иначе
ВызватьИсключение НСтр("ru = 'Недопустимый вызов объекта на клиенте.'");
#КонецЕсли