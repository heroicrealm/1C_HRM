#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий

Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	
	ПроверятьЗарплатныйПроект = ОбменСБанкамиПоЗарплатнымПроектам.ЭтоВедомостьВБанк(Ведомость);
	
	ДанныеВедомости = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Ведомость, "Проведен, Организация" + ?(ПроверятьЗарплатныйПроект, ", ЗарплатныйПроект", ""));
	
	ПроверятьЗарплатныйПроект = ПроверятьЗарплатныйПроект И ЗначениеЗаполнено(ДанныеВедомости.ЗарплатныйПроект);
	
	Если НЕ Ведомость.Проведен Тогда
		ТекстОшибки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = 'Документ %1 не проведен.'"), Ведомость);
		ВызватьИсключение ТекстОшибки;	
	КонецЕсли;	
	Если ДанныеВедомости.Организация <> Организация Тогда
		ТекстОшибки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = 'Документ %1 относится к другой организации.'"), Ведомость);
		ВызватьИсключение ТекстОшибки;	
	КонецЕсли;	
	
	СведенияОНезачисленнойЗарплатеПоВедомости = Документы.СведенияОНезачисленнойЗарплате.ВыбратьПоВедомости(Ведомость, Истина);
	Если СведенияОНезачисленнойЗарплатеПоВедомости.Количество() <> 0 
		И (СведенияОНезачисленнойЗарплатеПоВедомости.Количество() > 1 ИЛИ СведенияОНезачисленнойЗарплатеПоВедомости[0] <> Ссылка) Тогда
		ТекстОшибки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = 'По документу %1 уже введены сведения о незачисленной зарплате.'"), Ведомость);
		ВызватьИсключение ТекстОшибки;	
	КонецЕсли;	
	
	ПроведениеСервер.ПодготовитьНаборыЗаписейКРегистрацииДвижений(ЭтотОбъект);
	
	Физлица = Сотрудники.ВыгрузитьКолонку("ФизическоеЛицо");
	
	Если Не Отказ И Физлица.Количество() > 0 Тогда
		
		// Отключение контроля соответствия начислений и выплат 
		// Регистрация незачисленной зарплаты не является ни начислением, ни выплатой.
		// Это своего рода сторнирующий документ: выплата не удалась, возвращаем сумму в зарплату к выплате.
		// Поэтому проверка тут не нужна
		КонтрольСоответствияНачисленийИВыплат.Отключить(Движения);
		
		// Взаиморасчеты
		ВзаиморасчетыССотрудниками.ЗарегистрироватьНевыплатуПоВедомости(Движения, Отказ, Ведомость, Физлица);
		
		// НДФЛ
		УчетНДФЛ.ЗарегистрироватьНевыплатуДокументом(Движения, Отказ, Ведомость, Физлица);
		УчетФактическиПолученныхДоходовРасширенный.ЗарегистрироватьНевыплатуДокументом(Движения, Отказ, Ведомость, Физлица);
		
	КонецЕсли;

КонецПроцедуры

#КонецОбласти

#Иначе
ВызватьИсключение НСтр("ru = 'Недопустимый вызов объекта на клиенте.'");
#КонецЕсли