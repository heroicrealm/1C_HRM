#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий

Процедура ОбработкаЗаполнения(Основание, ТекстЗаполнения, СтандартнаяОбработка)
	
	Если ТипЗнч(Основание) = Тип("ДокументСсылка.РеестрСтимулирующихВыплатМедицинскимИСоциальнымРаботникам") Тогда
				
		// Заполнение реквизитов шапки.
		ИменаНаследуемыхРеквизитов = "Организация, РегистрационныйНомерФСС, КодПодчиненностиФСС";
		ЗначенияРеквизитов = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Основание, ИменаНаследуемыхРеквизитов);
		ЗаполнитьЗначенияСвойств(ЭтотОбъект, ЗначенияРеквизитов);
		
		// Заполнение таблицы теми Строками, которые еще не приняты ФСС.
		Запрос = Новый Запрос;
		Запрос.УстановитьПараметр("Основание", Основание);
		Запрос.Текст =
		"ВЫБРАТЬ
		|	Сотрудники.НомерСтроки КАК НомерСтроки,
		|	Сотрудники.Сотрудник КАК Сотрудник,
		|	Сотрудники.Исправление КАК Исправление,
		|	Сотрудники.КодПричиныИсправления КАК КодПричиныИсправления,
		|	Сотрудники.НомерПервичногоДокумента КАК НомерПервичногоДокумента,
		|	Сотрудники.ИзвещениеИзФССДата КАК ИзвещениеИзФССДата,
		|	Сотрудники.ИзвещениеИзФССНомер КАК ИзвещениеИзФССНомер,
		|	Сотрудники.ФизическоеЛицо КАК ФизическоеЛицо,
		|	Сотрудники.СтраховойНомерПФР КАК СтраховойНомерПФР,
		|	Сотрудники.Фамилия КАК Фамилия,
		|	Сотрудники.Имя КАК Имя,
		|	Сотрудники.Отчество КАК Отчество,
		|	Сотрудники.СпособВыплатыПособия КАК СпособВыплатыПособия,
		|	Сотрудники.НомерБанковскогоСчета КАК НомерБанковскогоСчета,
		|	Сотрудники.КартаМИР КАК КартаМИР,
		|	Сотрудники.ДатаРождения КАК ДатаРождения,
		|	Сотрудники.Должность КАК Должность,
		|	Сотрудники.ВидЗанятости КАК ВидЗанятости,
		|	Сотрудники.КатегорияПолучателя КАК КатегорияПолучателя,
		|	Сотрудники.ДнейКОплате КАК ДнейКОплате,
		|	Сотрудники.СменКОплате КАК СменКОплате,
		|	Сотрудники.РайонныйКоэффициент КАК РайонныйКоэффициент,
		|	Сотрудники.КомментарийСтрахователя КАК КомментарийСтрахователя,
		|	Сотрудники.ТерриториальныйКоэффициент КАК ТерриториальныйКоэффициент,
		|	Сотрудники.Банк КАК Банк,
		|	Сотрудники.НомерЛицевогоСчета КАК НомерЛицевогоСчета,
		|	Сотрудники.ПринятФСС КАК ПринятФСС
		|ИЗ
		|	Документ.РеестрСтимулирующихВыплатМедицинскимИСоциальнымРаботникам.Сотрудники КАК Сотрудники
		|ГДЕ
		|	Сотрудники.Ссылка = &Основание
		|	И НЕ Сотрудники.ПринятФСС";
		ВключаемыеСтроки = Запрос.Выполнить().Выбрать();
		
		НачалоНомераСтроки = Документы.РеестрСтимулирующихВыплатМедицинскимИСоциальнымРаботникам.ИдентификаторФСС(Основание) + ":";
		Пока ВключаемыеСтроки.Следующий() Цикл
			СтрокаПоСотруднику = Сотрудники.Добавить();
			ЗаполнитьЗначенияСвойств(СтрокаПоСотруднику, ВключаемыеСтроки);
		КонецЦикла;
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ПриКопировании(ОбъектКопирования)
	
	// Очистка реквизитов шапки.
	СостояниеРеестра = Перечисления.СостоянияРеестровФСС.ВРаботе;
	РеестрСоставил = Неопределено;
	ТелефонСоставителя = Неопределено;
	АдресЭлектроннойПочтыСоставителя = Неопределено;
	ДокументОснование = Неопределено;
	
	// Заполнение таблицы теми, которые требуется отправить и еще не включены в исходный документ.
	Сотрудники.Очистить();
	Если ЗначениеЗаполнено(Организация) Тогда
		ОтборСтрок = Новый Структура("ПринятФСС", Ложь);
		НеПринятыеФСССтроки = ОбъектКопирования.Сотрудники.НайтиСтроки(ОтборСтрок);
		Для Каждого СтрокаТаблицы Из НеПринятыеФСССтроки Цикл
			ЗаполнитьЗначенияСвойств(Сотрудники.Добавить(), СтрокаТаблицы);
		КонецЦикла;
	КонецЕсли;
	
КонецПроцедуры

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	ИсключаемыеРеквизиты = Новый Массив;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Сотрудники", Сотрудники.Выгрузить(,"НомерСтроки, Сотрудник, Должность, КатегорияПолучателя"));
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Сотрудники.НомерСтроки,
	|	Сотрудники.Сотрудник,
	|	Сотрудники.Должность,
	|	Сотрудники.КатегорияПолучателя
	|ПОМЕСТИТЬ ВТСотрудники
	|ИЗ
	|	&Сотрудники КАК Сотрудники
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	МИНИМУМ(ВТСотрудники.НомерСтроки) КАК НомерСтроки,
	|	Сотрудники.НомерСтроки КАК НомерСтрокиПовтора,
	|	ВТСотрудники.Сотрудник КАК Сотрудник
	|ИЗ
	|	ВТСотрудники КАК ВТСотрудники
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТСотрудники КАК Сотрудники
	|		ПО ВТСотрудники.Сотрудник = Сотрудники.Сотрудник
	|			И ВТСотрудники.Должность = Сотрудники.Должность
	|			И ВТСотрудники.КатегорияПолучателя = Сотрудники.КатегорияПолучателя
	|			И ВТСотрудники.НомерСтроки < Сотрудники.НомерСтроки
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТСотрудники.Сотрудник,
	|	Сотрудники.НомерСтроки
	|ИТОГИ ПО
	|	Сотрудник
	|";
	
	ПовторяющиесяСотрудники = Запрос.Выполнить();
	ИмяТаблицы = "Сотрудники";
	
	Если Не ПовторяющиесяСотрудники.Пустой() Тогда
		Выборка = ПовторяющиесяСотрудники.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		Пока Выборка.Следующий() Цикл
			ПовторныеСтроки = Новый Массив;
			ВыборкаПоСотрудникам = Выборка.Выбрать();
			Пока ВыборкаПоСотрудникам.Следующий() Цикл
				ПовторныеСтроки.Добавить(ВыборкаПоСотрудникам.НомерСтрокиПовтора);
			КонецЦикла;
			Если ЗначениеЗаполнено(ПовторныеСтроки) Тогда
				ПовторныеСтроки.Вставить(0, ВыборкаПоСотрудникам.НомерСтроки);
				Текст = СтрШаблон(
					НСтр("ru = '%1 использован в нескольких строках: %2.'"), 
					Выборка.Сотрудник, 
					СтрСоединить(ПовторныеСтроки, ", "));
				СообщитьОбОшибке(Отказ, Текст, ИмяТаблицы, Выборка.НомерСтроки, "Сотрудник");
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
	ИсключаемыеРеквизиты.Добавить("Сотрудники.Банк");
	ИсключаемыеРеквизиты.Добавить("Сотрудники.НомерЛицевогоСчета");
	ИсключаемыеРеквизиты.Добавить("Сотрудники.КартаМИР");
	Если ВидПособия = Перечисления.ПолучательСтимулирующихВыплатФСС.ОрганизацияСоциальногоОбслуживания Тогда
		ИсключаемыеРеквизиты.Добавить("Сотрудники.СменКОплате");
		ИсключаемыеРеквизиты.Добавить("Сотрудники.ВидЗанятости");
	КонецЕсли;
	
	Для Каждого Строка Из Сотрудники Цикл
		Если Строка.Исправление И Не ЗначениеЗаполнено(Строка.КодПричиныИсправления) Тогда
			Текст = НСтр("ru = 'Не указана причина исправления'");
			СообщитьОбОшибке(Отказ, Текст, ИмяТаблицы, Строка.НомерСтроки, "Сотрудник");
		КонецЕсли;
		Если Строка.Исправление И Не ЗначениеЗаполнено(Строка.НомерПервичногоДокумента) Тогда
			Текст = НСтр("ru = 'Не указан номер первичного документа'");
			СообщитьОбОшибке(Отказ, Текст, ИмяТаблицы, Строка.НомерСтроки, "Сотрудник");
		КонецЕсли;
		Если Строка.ДнейКОплате = 0
			И Строка.СменКОплате = 0 Тогда
			Текст = НСтр("ru = 'Не указано количество смен к оплате'");
			СообщитьОбОшибке(Отказ, Текст, ИмяТаблицы, Строка.НомерСтроки, "Сотрудник");
		КонецЕсли;
		Если Строка.СпособВыплатыПособия = Перечисления.СпособыВыплатыПособия.НаКартуМИР Тогда
			Если Не ЗначениеЗаполнено(Строка.КартаМИР) Тогда
				Текст = НСтр("ru = 'Не указан номер карты Мир'");
				СообщитьОбОшибке(Отказ, Текст, ИмяТаблицы, Строка.НомерСтроки, "Сотрудник");
			КонецЕсли;
		ИначеЕсли Строка.СпособВыплатыПособия = Перечисления.СпособыВыплатыПособия.ЧерезБанк Тогда
			Если Не ЗначениеЗаполнено(Строка.НомерЛицевогоСчета) Тогда
				Текст = НСтр("ru = 'Не указан счет получателя'");
				СообщитьОбОшибке(Отказ, Текст, ИмяТаблицы, Строка.НомерСтроки, "Сотрудник");
			Иначе
				Если Не ЗначениеЗаполнено(Строка.Банк) Тогда
					Текст = НСтр("ru = 'Не указан банк счета получателя'");
					СообщитьОбОшибке(Отказ, Текст, ИмяТаблицы, Строка.НомерСтроки, "Сотрудник");
					Продолжить;
				КонецЕсли;
				
				РеквизитыБанка = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Строка.Банк, "Код, Наименование");
				Если Не ЗначениеЗаполнено(РеквизитыБанка.Код) Тогда
					Текст = НСтр("ru = 'Не указан БИК банка счета получателя'");
					СообщитьОбОшибке(Отказ, Текст, ИмяТаблицы, Строка.НомерСтроки, "Сотрудник");
				ИначеЕсли Не ЗначениеЗаполнено(РеквизитыБанка.Наименование) Тогда
					Текст = НСтр("ru = 'Не указано наименование банка счета получателя'");
					СообщитьОбОшибке(Отказ, Текст, ИмяТаблицы, Строка.НомерСтроки, "Сотрудник");
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;

	ОбщегоНазначения.УдалитьНепроверяемыеРеквизитыИзМассива(ПроверяемыеРеквизиты, ИсключаемыеРеквизиты);
	
КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	Если ЗарплатаКадры.ОтключитьБизнесЛогикуПриЗаписи(ЭтотОбъект) Тогда
		Возврат;
	КонецЕсли;
	Если РежимЗаписи = РежимЗаписиДокумента.Проведение
		И (СостояниеРеестра = Перечисления.СостоянияРеестровФСС.ПустаяСсылка()
		Или СостояниеРеестра = Перечисления.СостоянияРеестровФСС.ВРаботе) Тогда
		СостояниеРеестра = Перечисления.СостоянияРеестровФСС.Подготовлен;
	ИначеЕсли РежимЗаписи = РежимЗаписиДокумента.ОтменаПроведения
		И СостояниеРеестра = Перечисления.СостоянияРеестровФСС.Подготовлен Тогда
		СостояниеРеестра = Перечисления.СостоянияРеестровФСС.ВРаботе;
	КонецЕсли;
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область ПроверкиЗаполненияПоРегламентуФСС

Функция ПроверитьЗаполнениеПоРегламентуФСС() Экспорт
	Отказ = Ложь;
	
	Для Каждого СтрокаТаблицы Из Сотрудники Цикл
		Если Не ЗначениеЗаполнено(СтрокаТаблицы.СтраховойНомерПФР) Тогда
			СообщитьОбОшибке(Отказ, Неопределено, "Сотрудники", СтрокаТаблицы.НомерСтроки, "СтраховойНомерПФР");
		КонецЕсли;
		
		Если СтрокаТаблицы.Исправление Тогда
			Если Не ЗначениеЗаполнено(СтрокаТаблицы.КодПричиныИсправления) Тогда
				СообщитьОбОшибке(Отказ, Неопределено, "Сотрудники", СтрокаТаблицы.НомерСтроки, "КодПричиныИсправления");
			КонецЕсли;
			Если Не ЗначениеЗаполнено(СтрокаТаблицы.НомерПервичногоДокумента) Тогда
				СообщитьОбОшибке(Отказ, Неопределено, "Сотрудники", СтрокаТаблицы.НомерСтроки, "НомерПервичногоДокумента");
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
	Возврат Не Отказ;
КонецФункции

#КонецОбласти

#Область БазоваяФункциональностьПроверокЗаполнения

Процедура СообщитьОбОшибке(Отказ, Текст, ИмяТаблицы, НомерСтроки, ИмяРеквизита)
	Если Текст = Неопределено Тогда
		Текст = НСтр("ru = 'Не заполнено поле ""%1"".'");
		Если ИмяТаблицы = Неопределено Тогда
			Текст = СтрШаблон(Текст, Метаданные().Реквизиты[ИмяРеквизита].Представление());
		Иначе
			Текст = СтрШаблон(Текст, Метаданные().ТабличныеЧасти[ИмяТаблицы].Реквизиты[ИмяРеквизита].Представление());
		КонецЕсли;
	КонецЕсли;
	Если ЗначениеЗаполнено(НомерСтроки) Тогда
		ТекстНомерСтроки = НСтр("ru = 'в строке %1'");
		ТекстНомерСтроки = СтрШаблон(ТекстНомерСтроки, НомерСтроки);
		Текст = Текст + " "+ ТекстНомерСтроки;
	КонецЕсли;
	
	Отказ = Истина;
	
	Сообщение = Новый СообщениеПользователю;
	Сообщение.Текст = Текст;
	Если ИмяТаблицы = Неопределено Тогда
		Сообщение.Поле = ИмяРеквизита;
	Иначе
		Сообщение.Поле = ОбщегоНазначенияКлиентСервер.ПутьКТабличнойЧасти(ИмяТаблицы, НомерСтроки, ИмяРеквизита);
	КонецЕсли;
	Сообщение.Сообщить();
КонецПроцедуры

#КонецОбласти

#Область ФиксацияВторичныхДанныхВДокументах

Функция ОбновитьВторичныеДанные(ПараметрыФиксации = Неопределено) Экспорт
	Модифицирован = Ложь;
	
	Если ОбъектЗафиксирован() Тогда
		Возврат Модифицирован;
	КонецЕсли;
	
	Если ПараметрыФиксации = Неопределено Тогда
		ПараметрыФиксации = Документы.РеестрСтимулирующихВыплатМедицинскимИСоциальнымРаботникам.ПараметрыФиксацииВторичныхДанных();
	КонецЕсли;
	
	Если ОбновитьДанныеСтрахователя(ПараметрыФиксации) Тогда
		Модифицирован = Истина;
	КонецЕсли;
	
	Если ОбновитьСотрудники(ПараметрыФиксации) Тогда
		Модифицирован = Истина;
	КонецЕсли;
	
	Если ОбновитьДанныеФизическогоЛица(ПараметрыФиксации) Тогда
		Модифицирован = Истина;
	КонецЕсли;
	
	Возврат Модифицирован;
КонецФункции

Функция ОбъектЗафиксирован() Экспорт
	
	Если Проведен И Не ПометкаУдаления
		И (СостояниеРеестра = Перечисления.СостоянияРеестровФСС.ПринятФСС
			Или СостояниеРеестра = Перечисления.СостоянияРеестровФСС.ЧастичноПринятФСС
			Или СостояниеРеестра = Перечисления.СостоянияРеестровФСС.НеПринятФСС) Тогда
		Возврат Истина; // Реестр проведен и пользователь вручную установил состояние.
	КонецЕсли;
	
	Возврат Ложь; // Реестр не отправлялся в ФСС, не проведен и не в конечном состоянии.
КонецФункции

Функция ОбновитьДанныеСтрахователя(ПараметрыФиксации)
	Если Не ЗначениеЗаполнено(Организация) Тогда
		Возврат Ложь;
	КонецЕсли;
	
	НастройкиКадровогоУчета = КадровыйУчетРасширенный.НастройкиКадровогоУчета();
	РеквизитыДокумента = Новый Структура;
	
	ИменаРеквизитовОрганизации = "РегистрационныйНомерФСС, КодПодчиненностиФСС, ОГРН";
	ЗначенияРеквизитовОрганизации = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Организация, ИменаРеквизитовОрганизации);
	ОбщегоНазначенияКлиентСервер.ДополнитьСтруктуру(РеквизитыДокумента, ЗначенияРеквизитовОрганизации, Истина);
	
	СведенияОПодписях = ПодписиДокументов.СведенияОПодписяхПоУмолчаниюДляОбъектаМетаданных(Метаданные(), Организация);
	ОбщегоНазначенияКлиентСервер.ДополнитьСтруктуру(РеквизитыДокумента, СведенияОПодписях, Истина);
	
	ДатаПолученияСведений = ?(ЗначениеЗаполнено(Дата), Дата, ТекущаяДатаСеанса());
	СведенияОбОрганизации = РегламентированнаяОтчетностьВызовСервера.ПолучитьСведенияОбОрганизации(Организация, ДатаПолученияСведений, "ТелОрганизации,АдресЭлектроннойПочтыОрганизации,ИННЮЛ,КППЮЛ,НаимЮЛПол");
	РеквизитыДокумента.Вставить("ИНН", СведенияОбОрганизации.ИННЮЛ);
	РеквизитыДокумента.Вставить("КПП", СведенияОбОрганизации.КППЮЛ);
	РеквизитыДокумента.Вставить("НаименованиеСтрахователя", СведенияОбОрганизации.НаимЮЛПол);
	РеквизитыДокумента.Вставить("ТелефонСоставителя", СведенияОбОрганизации.ТелОрганизации);
	РеквизитыДокумента.Вставить("АдресЭлектроннойПочтыСоставителя", СведенияОбОрганизации.АдресЭлектроннойПочтыОрганизации);
	РеквизитыДокумента.Вставить("ВидПособия", НастройкиКадровогоУчета.ПолучательСтимулирующихВыплатФСС);
	РеквизитыДокумента.Вставить("ВОрганизацииВыявленКоронавирус", Документы.РеестрСтимулирующихВыплатМедицинскимИСоциальнымРаботникам.ВОрганизацииВыявленКоронавирус(Организация, ДатаПолученияСведений));
	
	Возврат ФиксацияВторичныхДанныхВДокументах.ОбновитьДанныеШапки(РеквизитыДокумента, ЭтотОбъект, ПараметрыФиксации);
КонецФункции

Функция ОбновитьСотрудники(ПараметрыФиксации)
	Если Сотрудники.Количество() = 0 Тогда
		Возврат Ложь;
	КонецЕсли;
	ДанныеПоСотрудникам = Документы.РеестрСтимулирующихВыплатМедицинскимИСоциальнымРаботникам.СведенияПоСотрудникамНаСервере(Организация, НачалоПериода, ОкончаниеПериода, Сотрудники.ВыгрузитьКолонку("Сотрудник"), Истина);
	Если ДанныеПоСотрудникам.Количество() = 0 Тогда
		Возврат Ложь;
	КонецЕсли;
	Запрос = Новый Запрос();
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	ЗарплатаКадры.СоздатьВТПоТаблицеЗначений(Запрос.МенеджерВременныхТаблиц, ДанныеПоСотрудникам, "ВТВторичныеДанные");
	Возврат ФиксацияВторичныхДанныхВДокументах.ОбновитьВторичныеДанные(Запрос.МенеджерВременныхТаблиц, ЭтотОбъект, "Сотрудники", "ВТВторичныеДанные", ПараметрыФиксации);
КонецФункции

Функция ОбновитьДанныеФизическогоЛица(ПараметрыФиксации)
	РеквизитыДокумента = Новый Структура;
	РеквизитыДокумента.Вставить("РеестрСоставил", ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Ответственный, "ФизическоеЛицо"));
	Возврат ФиксацияВторичныхДанныхВДокументах.ОбновитьДанныеШапки(РеквизитыДокумента, ЭтотОбъект, ПараметрыФиксации);
КонецФункции

#КонецОбласти


#КонецОбласти

#Иначе
ВызватьИсключение НСтр("ru = 'Недопустимый вызов объекта на клиенте.'");
#КонецЕсли